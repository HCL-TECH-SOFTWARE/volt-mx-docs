Ext.data.JsonP.androidx_renderscript_ScriptIntrinsicBLAS({"tagname":"class","name":"androidx.renderscript.ScriptIntrinsicBLAS","autodetected":{},"files":[{"filename":"ScriptIntrinsicBLAS.js","href":"ScriptIntrinsicBLAS.html#androidx-renderscript-ScriptIntrinsicBLAS"}],"extends":"androidx.renderscript.ScriptIntrinsic","members":[{"name":"CONJ_TRANSPOSE","tagname":"property","owner":"androidx.renderscript.ScriptIntrinsicBLAS","id":"property-CONJ_TRANSPOSE","meta":{}},{"name":"LEFT","tagname":"property","owner":"androidx.renderscript.ScriptIntrinsicBLAS","id":"property-LEFT","meta":{}},{"name":"LOWER","tagname":"property","owner":"androidx.renderscript.ScriptIntrinsicBLAS","id":"property-LOWER","meta":{}},{"name":"NON_UNIT","tagname":"property","owner":"androidx.renderscript.ScriptIntrinsicBLAS","id":"property-NON_UNIT","meta":{}},{"name":"NO_TRANSPOSE","tagname":"property","owner":"androidx.renderscript.ScriptIntrinsicBLAS","id":"property-NO_TRANSPOSE","meta":{}},{"name":"RIGHT","tagname":"property","owner":"androidx.renderscript.ScriptIntrinsicBLAS","id":"property-RIGHT","meta":{}},{"name":"TRANSPOSE","tagname":"property","owner":"androidx.renderscript.ScriptIntrinsicBLAS","id":"property-TRANSPOSE","meta":{}},{"name":"UNIT","tagname":"property","owner":"androidx.renderscript.ScriptIntrinsicBLAS","id":"property-UNIT","meta":{}},{"name":"UPPER","tagname":"property","owner":"androidx.renderscript.ScriptIntrinsicBLAS","id":"property-UPPER","meta":{}},{"name":"BNNM","tagname":"method","owner":"androidx.renderscript.ScriptIntrinsicBLAS","id":"method-BNNM","meta":{}},{"name":"CGBMV","tagname":"method","owner":"androidx.renderscript.ScriptIntrinsicBLAS","id":"method-CGBMV","meta":{}},{"name":"CGEMM","tagname":"method","owner":"androidx.renderscript.ScriptIntrinsicBLAS","id":"method-CGEMM","meta":{}},{"name":"CGEMV","tagname":"method","owner":"androidx.renderscript.ScriptIntrinsicBLAS","id":"method-CGEMV","meta":{}},{"name":"CGERC","tagname":"method","owner":"androidx.renderscript.ScriptIntrinsicBLAS","id":"method-CGERC","meta":{}},{"name":"CGERU","tagname":"method","owner":"androidx.renderscript.ScriptIntrinsicBLAS","id":"method-CGERU","meta":{}},{"name":"CHBMV","tagname":"method","owner":"androidx.renderscript.ScriptIntrinsicBLAS","id":"method-CHBMV","meta":{}},{"name":"CHEMM","tagname":"method","owner":"androidx.renderscript.ScriptIntrinsicBLAS","id":"method-CHEMM","meta":{}},{"name":"CHEMV","tagname":"method","owner":"androidx.renderscript.ScriptIntrinsicBLAS","id":"method-CHEMV","meta":{}},{"name":"CHER","tagname":"method","owner":"androidx.renderscript.ScriptIntrinsicBLAS","id":"method-CHER","meta":{}},{"name":"CHER2","tagname":"method","owner":"androidx.renderscript.ScriptIntrinsicBLAS","id":"method-CHER2","meta":{}},{"name":"CHER2K","tagname":"method","owner":"androidx.renderscript.ScriptIntrinsicBLAS","id":"method-CHER2K","meta":{}},{"name":"CHERK","tagname":"method","owner":"androidx.renderscript.ScriptIntrinsicBLAS","id":"method-CHERK","meta":{}},{"name":"CHPMV","tagname":"method","owner":"androidx.renderscript.ScriptIntrinsicBLAS","id":"method-CHPMV","meta":{}},{"name":"CHPR","tagname":"method","owner":"androidx.renderscript.ScriptIntrinsicBLAS","id":"method-CHPR","meta":{}},{"name":"CHPR2","tagname":"method","owner":"androidx.renderscript.ScriptIntrinsicBLAS","id":"method-CHPR2","meta":{}},{"name":"CSYMM","tagname":"method","owner":"androidx.renderscript.ScriptIntrinsicBLAS","id":"method-CSYMM","meta":{}},{"name":"CSYR2K","tagname":"method","owner":"androidx.renderscript.ScriptIntrinsicBLAS","id":"method-CSYR2K","meta":{}},{"name":"CSYRK","tagname":"method","owner":"androidx.renderscript.ScriptIntrinsicBLAS","id":"method-CSYRK","meta":{}},{"name":"CTBMV","tagname":"method","owner":"androidx.renderscript.ScriptIntrinsicBLAS","id":"method-CTBMV","meta":{}},{"name":"CTBSV","tagname":"method","owner":"androidx.renderscript.ScriptIntrinsicBLAS","id":"method-CTBSV","meta":{}},{"name":"CTPMV","tagname":"method","owner":"androidx.renderscript.ScriptIntrinsicBLAS","id":"method-CTPMV","meta":{}},{"name":"CTPSV","tagname":"method","owner":"androidx.renderscript.ScriptIntrinsicBLAS","id":"method-CTPSV","meta":{}},{"name":"CTRMM","tagname":"method","owner":"androidx.renderscript.ScriptIntrinsicBLAS","id":"method-CTRMM","meta":{}},{"name":"CTRMV","tagname":"method","owner":"androidx.renderscript.ScriptIntrinsicBLAS","id":"method-CTRMV","meta":{}},{"name":"CTRSM","tagname":"method","owner":"androidx.renderscript.ScriptIntrinsicBLAS","id":"method-CTRSM","meta":{}},{"name":"CTRSV","tagname":"method","owner":"androidx.renderscript.ScriptIntrinsicBLAS","id":"method-CTRSV","meta":{}},{"name":"DGBMV","tagname":"method","owner":"androidx.renderscript.ScriptIntrinsicBLAS","id":"method-DGBMV","meta":{}},{"name":"DGEMM","tagname":"method","owner":"androidx.renderscript.ScriptIntrinsicBLAS","id":"method-DGEMM","meta":{}},{"name":"DGEMV","tagname":"method","owner":"androidx.renderscript.ScriptIntrinsicBLAS","id":"method-DGEMV","meta":{}},{"name":"DGER","tagname":"method","owner":"androidx.renderscript.ScriptIntrinsicBLAS","id":"method-DGER","meta":{}},{"name":"DSBMV","tagname":"method","owner":"androidx.renderscript.ScriptIntrinsicBLAS","id":"method-DSBMV","meta":{}},{"name":"DSPMV","tagname":"method","owner":"androidx.renderscript.ScriptIntrinsicBLAS","id":"method-DSPMV","meta":{}},{"name":"DSPR","tagname":"method","owner":"androidx.renderscript.ScriptIntrinsicBLAS","id":"method-DSPR","meta":{}},{"name":"DSPR2","tagname":"method","owner":"androidx.renderscript.ScriptIntrinsicBLAS","id":"method-DSPR2","meta":{}},{"name":"DSYMM","tagname":"method","owner":"androidx.renderscript.ScriptIntrinsicBLAS","id":"method-DSYMM","meta":{}},{"name":"DSYMV","tagname":"method","owner":"androidx.renderscript.ScriptIntrinsicBLAS","id":"method-DSYMV","meta":{}},{"name":"DSYR","tagname":"method","owner":"androidx.renderscript.ScriptIntrinsicBLAS","id":"method-DSYR","meta":{}},{"name":"DSYR2","tagname":"method","owner":"androidx.renderscript.ScriptIntrinsicBLAS","id":"method-DSYR2","meta":{}},{"name":"DSYR2K","tagname":"method","owner":"androidx.renderscript.ScriptIntrinsicBLAS","id":"method-DSYR2K","meta":{}},{"name":"DSYRK","tagname":"method","owner":"androidx.renderscript.ScriptIntrinsicBLAS","id":"method-DSYRK","meta":{}},{"name":"DTBMV","tagname":"method","owner":"androidx.renderscript.ScriptIntrinsicBLAS","id":"method-DTBMV","meta":{}},{"name":"DTBSV","tagname":"method","owner":"androidx.renderscript.ScriptIntrinsicBLAS","id":"method-DTBSV","meta":{}},{"name":"DTPMV","tagname":"method","owner":"androidx.renderscript.ScriptIntrinsicBLAS","id":"method-DTPMV","meta":{}},{"name":"DTPSV","tagname":"method","owner":"androidx.renderscript.ScriptIntrinsicBLAS","id":"method-DTPSV","meta":{}},{"name":"DTRMM","tagname":"method","owner":"androidx.renderscript.ScriptIntrinsicBLAS","id":"method-DTRMM","meta":{}},{"name":"DTRMV","tagname":"method","owner":"androidx.renderscript.ScriptIntrinsicBLAS","id":"method-DTRMV","meta":{}},{"name":"DTRSM","tagname":"method","owner":"androidx.renderscript.ScriptIntrinsicBLAS","id":"method-DTRSM","meta":{}},{"name":"DTRSV","tagname":"method","owner":"androidx.renderscript.ScriptIntrinsicBLAS","id":"method-DTRSV","meta":{}},{"name":"SGBMV","tagname":"method","owner":"androidx.renderscript.ScriptIntrinsicBLAS","id":"method-SGBMV","meta":{}},{"name":"SGEMM","tagname":"method","owner":"androidx.renderscript.ScriptIntrinsicBLAS","id":"method-SGEMM","meta":{}},{"name":"SGEMV","tagname":"method","owner":"androidx.renderscript.ScriptIntrinsicBLAS","id":"method-SGEMV","meta":{}},{"name":"SGER","tagname":"method","owner":"androidx.renderscript.ScriptIntrinsicBLAS","id":"method-SGER","meta":{}},{"name":"SSBMV","tagname":"method","owner":"androidx.renderscript.ScriptIntrinsicBLAS","id":"method-SSBMV","meta":{}},{"name":"SSPMV","tagname":"method","owner":"androidx.renderscript.ScriptIntrinsicBLAS","id":"method-SSPMV","meta":{}},{"name":"SSPR","tagname":"method","owner":"androidx.renderscript.ScriptIntrinsicBLAS","id":"method-SSPR","meta":{}},{"name":"SSPR2","tagname":"method","owner":"androidx.renderscript.ScriptIntrinsicBLAS","id":"method-SSPR2","meta":{}},{"name":"SSYMM","tagname":"method","owner":"androidx.renderscript.ScriptIntrinsicBLAS","id":"method-SSYMM","meta":{}},{"name":"SSYMV","tagname":"method","owner":"androidx.renderscript.ScriptIntrinsicBLAS","id":"method-SSYMV","meta":{}},{"name":"SSYR","tagname":"method","owner":"androidx.renderscript.ScriptIntrinsicBLAS","id":"method-SSYR","meta":{}},{"name":"SSYR2","tagname":"method","owner":"androidx.renderscript.ScriptIntrinsicBLAS","id":"method-SSYR2","meta":{}},{"name":"SSYR2K","tagname":"method","owner":"androidx.renderscript.ScriptIntrinsicBLAS","id":"method-SSYR2K","meta":{}},{"name":"SSYRK","tagname":"method","owner":"androidx.renderscript.ScriptIntrinsicBLAS","id":"method-SSYRK","meta":{}},{"name":"STBMV","tagname":"method","owner":"androidx.renderscript.ScriptIntrinsicBLAS","id":"method-STBMV","meta":{}},{"name":"STBSV","tagname":"method","owner":"androidx.renderscript.ScriptIntrinsicBLAS","id":"method-STBSV","meta":{}},{"name":"STPMV","tagname":"method","owner":"androidx.renderscript.ScriptIntrinsicBLAS","id":"method-STPMV","meta":{}},{"name":"STPSV","tagname":"method","owner":"androidx.renderscript.ScriptIntrinsicBLAS","id":"method-STPSV","meta":{}},{"name":"STRMM","tagname":"method","owner":"androidx.renderscript.ScriptIntrinsicBLAS","id":"method-STRMM","meta":{}},{"name":"STRMV","tagname":"method","owner":"androidx.renderscript.ScriptIntrinsicBLAS","id":"method-STRMV","meta":{}},{"name":"STRSM","tagname":"method","owner":"androidx.renderscript.ScriptIntrinsicBLAS","id":"method-STRSM","meta":{}},{"name":"STRSV","tagname":"method","owner":"androidx.renderscript.ScriptIntrinsicBLAS","id":"method-STRSV","meta":{}},{"name":"ZGBMV","tagname":"method","owner":"androidx.renderscript.ScriptIntrinsicBLAS","id":"method-ZGBMV","meta":{}},{"name":"ZGEMM","tagname":"method","owner":"androidx.renderscript.ScriptIntrinsicBLAS","id":"method-ZGEMM","meta":{}},{"name":"ZGEMV","tagname":"method","owner":"androidx.renderscript.ScriptIntrinsicBLAS","id":"method-ZGEMV","meta":{}},{"name":"ZGERC","tagname":"method","owner":"androidx.renderscript.ScriptIntrinsicBLAS","id":"method-ZGERC","meta":{}},{"name":"ZGERU","tagname":"method","owner":"androidx.renderscript.ScriptIntrinsicBLAS","id":"method-ZGERU","meta":{}},{"name":"ZHBMV","tagname":"method","owner":"androidx.renderscript.ScriptIntrinsicBLAS","id":"method-ZHBMV","meta":{}},{"name":"ZHEMM","tagname":"method","owner":"androidx.renderscript.ScriptIntrinsicBLAS","id":"method-ZHEMM","meta":{}},{"name":"ZHEMV","tagname":"method","owner":"androidx.renderscript.ScriptIntrinsicBLAS","id":"method-ZHEMV","meta":{}},{"name":"ZHER","tagname":"method","owner":"androidx.renderscript.ScriptIntrinsicBLAS","id":"method-ZHER","meta":{}},{"name":"ZHER2","tagname":"method","owner":"androidx.renderscript.ScriptIntrinsicBLAS","id":"method-ZHER2","meta":{}},{"name":"ZHER2K","tagname":"method","owner":"androidx.renderscript.ScriptIntrinsicBLAS","id":"method-ZHER2K","meta":{}},{"name":"ZHERK","tagname":"method","owner":"androidx.renderscript.ScriptIntrinsicBLAS","id":"method-ZHERK","meta":{}},{"name":"ZHPMV","tagname":"method","owner":"androidx.renderscript.ScriptIntrinsicBLAS","id":"method-ZHPMV","meta":{}},{"name":"ZHPR","tagname":"method","owner":"androidx.renderscript.ScriptIntrinsicBLAS","id":"method-ZHPR","meta":{}},{"name":"ZHPR2","tagname":"method","owner":"androidx.renderscript.ScriptIntrinsicBLAS","id":"method-ZHPR2","meta":{}},{"name":"ZSYMM","tagname":"method","owner":"androidx.renderscript.ScriptIntrinsicBLAS","id":"method-ZSYMM","meta":{}},{"name":"ZSYR2K","tagname":"method","owner":"androidx.renderscript.ScriptIntrinsicBLAS","id":"method-ZSYR2K","meta":{}},{"name":"ZSYRK","tagname":"method","owner":"androidx.renderscript.ScriptIntrinsicBLAS","id":"method-ZSYRK","meta":{}},{"name":"ZTBMV","tagname":"method","owner":"androidx.renderscript.ScriptIntrinsicBLAS","id":"method-ZTBMV","meta":{}},{"name":"ZTBSV","tagname":"method","owner":"androidx.renderscript.ScriptIntrinsicBLAS","id":"method-ZTBSV","meta":{}},{"name":"ZTPMV","tagname":"method","owner":"androidx.renderscript.ScriptIntrinsicBLAS","id":"method-ZTPMV","meta":{}},{"name":"ZTPSV","tagname":"method","owner":"androidx.renderscript.ScriptIntrinsicBLAS","id":"method-ZTPSV","meta":{}},{"name":"ZTRMM","tagname":"method","owner":"androidx.renderscript.ScriptIntrinsicBLAS","id":"method-ZTRMM","meta":{}},{"name":"ZTRMV","tagname":"method","owner":"androidx.renderscript.ScriptIntrinsicBLAS","id":"method-ZTRMV","meta":{}},{"name":"ZTRSM","tagname":"method","owner":"androidx.renderscript.ScriptIntrinsicBLAS","id":"method-ZTRSM","meta":{}},{"name":"ZTRSV","tagname":"method","owner":"androidx.renderscript.ScriptIntrinsicBLAS","id":"method-ZTRSV","meta":{}},{"name":"bindAllocation","tagname":"method","owner":"androidx.renderscript.Script","id":"method-bindAllocation","meta":{}},{"name":"create","tagname":"method","owner":"androidx.renderscript.ScriptIntrinsicBLAS","id":"method-create","meta":{}},{"name":"destroy","tagname":"method","owner":"androidx.renderscript.BaseObj","id":"method-destroy","meta":{}},{"name":"equals","tagname":"method","owner":"androidx.renderscript.BaseObj","id":"method-equals","meta":{}},{"name":"hashCode","tagname":"method","owner":"androidx.renderscript.BaseObj","id":"method-hashCode","meta":{}},{"name":"setTimeZone","tagname":"method","owner":"androidx.renderscript.Script","id":"method-setTimeZone","meta":{}},{"name":"setVar","tagname":"method","owner":"androidx.renderscript.Script","id":"method-setVar","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-androidx.renderscript.ScriptIntrinsicBLAS","short_doc":"ScriptIntrinsicBLAS class provides high performance RenderScript APIs to BLAS. ...","classIcon":"icon-class","superclasses":["java.lang.Object","androidx.renderscript.BaseObj","androidx.renderscript.Script","androidx.renderscript.ScriptIntrinsic"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.lang.Object<div class='subclass '><a href='#!/api/androidx.renderscript.BaseObj' rel='androidx.renderscript.BaseObj' class='docClass'>androidx.renderscript.BaseObj</a><div class='subclass '><a href='#!/api/androidx.renderscript.Script' rel='androidx.renderscript.Script' class='docClass'>androidx.renderscript.Script</a><div class='subclass '><a href='#!/api/androidx.renderscript.ScriptIntrinsic' rel='androidx.renderscript.ScriptIntrinsic' class='docClass'>androidx.renderscript.ScriptIntrinsic</a><div class='subclass '><strong>androidx.renderscript.ScriptIntrinsicBLAS</strong></div></div></div></div></div><h4>Files</h4><div class='dependency'><a href='source/ScriptIntrinsicBLAS.html#androidx-renderscript-ScriptIntrinsicBLAS' target='_blank'>ScriptIntrinsicBLAS.js</a></div></pre><div class='doc-contents'><p>ScriptIntrinsicBLAS class provides high performance RenderScript APIs to BLAS.</p>\n\n<p> The BLAS (Basic Linear Algebra Subprograms) are routines that provide standard\n building blocks for performing basic vector and matrix operations.</p>\n\n<p> For detailed description of BLAS, please refer to http://www.netlib.org/blas/</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-property'>Properties</h3><div class='subsection'><div id='property-CONJ_TRANSPOSE' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='androidx.renderscript.ScriptIntrinsicBLAS'>androidx.renderscript.ScriptIntrinsicBLAS</span><br/><a href='source/ScriptIntrinsicBLAS.html#androidx-renderscript-ScriptIntrinsicBLAS-property-CONJ_TRANSPOSE' target='_blank' class='view-source'>view source</a></div><a href='#!/api/androidx.renderscript.ScriptIntrinsicBLAS-property-CONJ_TRANSPOSE' class='name expandable'>CONJ_TRANSPOSE</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<p>Defaults to: <code>&quot;113&quot;</code></p></div></div></div><div id='property-LEFT' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='androidx.renderscript.ScriptIntrinsicBLAS'>androidx.renderscript.ScriptIntrinsicBLAS</span><br/><a href='source/ScriptIntrinsicBLAS.html#androidx-renderscript-ScriptIntrinsicBLAS-property-LEFT' target='_blank' class='view-source'>view source</a></div><a href='#!/api/androidx.renderscript.ScriptIntrinsicBLAS-property-LEFT' class='name expandable'>LEFT</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<p>Defaults to: <code>&quot;141&quot;</code></p></div></div></div><div id='property-LOWER' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='androidx.renderscript.ScriptIntrinsicBLAS'>androidx.renderscript.ScriptIntrinsicBLAS</span><br/><a href='source/ScriptIntrinsicBLAS.html#androidx-renderscript-ScriptIntrinsicBLAS-property-LOWER' target='_blank' class='view-source'>view source</a></div><a href='#!/api/androidx.renderscript.ScriptIntrinsicBLAS-property-LOWER' class='name expandable'>LOWER</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<p>Defaults to: <code>&quot;122&quot;</code></p></div></div></div><div id='property-NON_UNIT' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='androidx.renderscript.ScriptIntrinsicBLAS'>androidx.renderscript.ScriptIntrinsicBLAS</span><br/><a href='source/ScriptIntrinsicBLAS.html#androidx-renderscript-ScriptIntrinsicBLAS-property-NON_UNIT' target='_blank' class='view-source'>view source</a></div><a href='#!/api/androidx.renderscript.ScriptIntrinsicBLAS-property-NON_UNIT' class='name expandable'>NON_UNIT</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<p>Defaults to: <code>&quot;131&quot;</code></p></div></div></div><div id='property-NO_TRANSPOSE' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='androidx.renderscript.ScriptIntrinsicBLAS'>androidx.renderscript.ScriptIntrinsicBLAS</span><br/><a href='source/ScriptIntrinsicBLAS.html#androidx-renderscript-ScriptIntrinsicBLAS-property-NO_TRANSPOSE' target='_blank' class='view-source'>view source</a></div><a href='#!/api/androidx.renderscript.ScriptIntrinsicBLAS-property-NO_TRANSPOSE' class='name expandable'>NO_TRANSPOSE</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<p>Defaults to: <code>&quot;111&quot;</code></p></div></div></div><div id='property-RIGHT' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='androidx.renderscript.ScriptIntrinsicBLAS'>androidx.renderscript.ScriptIntrinsicBLAS</span><br/><a href='source/ScriptIntrinsicBLAS.html#androidx-renderscript-ScriptIntrinsicBLAS-property-RIGHT' target='_blank' class='view-source'>view source</a></div><a href='#!/api/androidx.renderscript.ScriptIntrinsicBLAS-property-RIGHT' class='name expandable'>RIGHT</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<p>Defaults to: <code>&quot;142&quot;</code></p></div></div></div><div id='property-TRANSPOSE' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='androidx.renderscript.ScriptIntrinsicBLAS'>androidx.renderscript.ScriptIntrinsicBLAS</span><br/><a href='source/ScriptIntrinsicBLAS.html#androidx-renderscript-ScriptIntrinsicBLAS-property-TRANSPOSE' target='_blank' class='view-source'>view source</a></div><a href='#!/api/androidx.renderscript.ScriptIntrinsicBLAS-property-TRANSPOSE' class='name expandable'>TRANSPOSE</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<p>Defaults to: <code>&quot;112&quot;</code></p></div></div></div><div id='property-UNIT' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='androidx.renderscript.ScriptIntrinsicBLAS'>androidx.renderscript.ScriptIntrinsicBLAS</span><br/><a href='source/ScriptIntrinsicBLAS.html#androidx-renderscript-ScriptIntrinsicBLAS-property-UNIT' target='_blank' class='view-source'>view source</a></div><a href='#!/api/androidx.renderscript.ScriptIntrinsicBLAS-property-UNIT' class='name expandable'>UNIT</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<p>Defaults to: <code>&quot;132&quot;</code></p></div></div></div><div id='property-UPPER' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='androidx.renderscript.ScriptIntrinsicBLAS'>androidx.renderscript.ScriptIntrinsicBLAS</span><br/><a href='source/ScriptIntrinsicBLAS.html#androidx-renderscript-ScriptIntrinsicBLAS-property-UPPER' target='_blank' class='view-source'>view source</a></div><a href='#!/api/androidx.renderscript.ScriptIntrinsicBLAS-property-UPPER' class='name expandable'>UPPER</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<p>Defaults to: <code>&quot;121&quot;</code></p></div></div></div></div></div><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-BNNM' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='androidx.renderscript.ScriptIntrinsicBLAS'>androidx.renderscript.ScriptIntrinsicBLAS</span><br/><a href='source/ScriptIntrinsicBLAS.html#androidx-renderscript-ScriptIntrinsicBLAS-method-BNNM' target='_blank' class='view-source'>view source</a></div><a href='#!/api/androidx.renderscript.ScriptIntrinsicBLAS-method-BNNM' class='name expandable'>BNNM</a>( <span class='pre'>A, a_offset, B, b_offset, C, c_offset, c_mult</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>8-bit GEMM-like operation for neural networks: C = A * Transpose(B)\n Calculations are done in 1.10.21 fixed-point for...</div><div class='long'><p>8-bit GEMM-like operation for neural networks: C = A * Transpose(B)\n Calculations are done in 1.10.21 fixed-point format for the final output,\n just before there's a shift down to drop the fractional parts. The output\n values are gated to 0 to 255 to fit in a byte, but the 10-bit format\n gives some headroom to avoid wrapping around on small overflows.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>A</span> : Object {Allocation}<div class='sub-desc'><p>The input allocation contains matrix A, supported elements type Element.U8.</p>\n</div></li><li><span class='pre'>a_offset</span> : Number<div class='sub-desc'><p>The offset for all values in matrix A, e.g A[i,j] = A[i,j] - a_offset. Value should be from 0 to 255.</p>\n</div></li><li><span class='pre'>B</span> : Object {Allocation}<div class='sub-desc'><p>The input allocation contains matrix B, supported elements type Element.U8.</p>\n</div></li><li><span class='pre'>b_offset</span> : Number<div class='sub-desc'><p>The offset for all values in matrix B, e.g B[i,j] = B[i,j] - b_offset. Value should be from 0 to 255.</p>\n</div></li><li><span class='pre'>C</span> : Object {Allocation}<div class='sub-desc'><p>The input allocation contains matrix C, supported elements type Element.U8.</p>\n</div></li><li><span class='pre'>c_offset</span> : Number<div class='sub-desc'><p>The offset for all values in matrix C.</p>\n</div></li><li><span class='pre'>c_mult</span> : Number<div class='sub-desc'><p>The multiplier for all values in matrix C, e.g C[i,j] = (C[i,j] + c_offset) * c_mult.</p>\n</div></li></ul></div></div></div><div id='method-CGBMV' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='androidx.renderscript.ScriptIntrinsicBLAS'>androidx.renderscript.ScriptIntrinsicBLAS</span><br/><a href='source/ScriptIntrinsicBLAS.html#androidx-renderscript-ScriptIntrinsicBLAS-method-CGBMV' target='_blank' class='view-source'>view source</a></div><a href='#!/api/androidx.renderscript.ScriptIntrinsicBLAS-method-CGBMV' class='name expandable'>CGBMV</a>( <span class='pre'>TransA, KL, KU, alpha, A, X, incX, beta, Y, incY</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>CGBMV performs one of the matrix-vector operations\n y := alphaAx + betay   or   y := alphaATx + betay   or   y := alp...</div><div class='long'><p>CGBMV performs one of the matrix-vector operations\n y := alpha<em>A</em>x + beta<em>y   or   y := alpha</em>A<strong>T<em>x + beta</em>y   or   y := alpha*A</strong>H<em>x + beta</em>y</p>\n\n<p> Details: http://www.netlib.org/lapack/explore-html/d0/d75/cgbmv_8f.html</p>\n\n<p> Note: For a M<em>N matrix, the input Allocation should also be of size M</em>N (dimY = M, dimX = N),\n       but only the region M*(KL+KU+1) will be referenced. The following subroutine can is an\n       example showing how to convert the original matrix 'a' to row-based band matrix 'b'.\n           for i in range(0, m):\n              for j in range(max(0, i-kl), min(i+ku+1, n)):\n                  b[i, j-i+kl] = a[i, j]</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>TransA</span> : Number<div class='sub-desc'><p>The type of transpose applied to matrix A.</p>\n</div></li><li><span class='pre'>KL</span> : Number<div class='sub-desc'><p>The number of sub-diagonals of the matrix A.</p>\n</div></li><li><span class='pre'>KU</span> : Number<div class='sub-desc'><p>The number of super-diagonals of the matrix A.</p>\n</div></li><li><span class='pre'>alpha</span> : Object {Float2}<div class='sub-desc'><p>The scalar alpha.</p>\n</div></li><li><span class='pre'>A</span> : Object {Allocation}<div class='sub-desc'><p>The input allocation contains the band matrix A, supported elements type Element.F32_2.</p>\n</div></li><li><span class='pre'>X</span> : Object {Allocation}<div class='sub-desc'><p>The input allocation contains vector x, supported elements type Element.F32_2.</p>\n</div></li><li><span class='pre'>incX</span> : Number<div class='sub-desc'><p>The increment for the elements of vector x, must be larger than zero.</p>\n</div></li><li><span class='pre'>beta</span> : Object {Float2}<div class='sub-desc'><p>The scalar beta.</p>\n</div></li><li><span class='pre'>Y</span> : Object {Allocation}<div class='sub-desc'><p>The input allocation contains vector y, supported elements type Element.F32_2.</p>\n</div></li><li><span class='pre'>incY</span> : Number<div class='sub-desc'><p>The increment for the elements of vector y, must be larger than zero.</p>\n</div></li></ul></div></div></div><div id='method-CGEMM' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='androidx.renderscript.ScriptIntrinsicBLAS'>androidx.renderscript.ScriptIntrinsicBLAS</span><br/><a href='source/ScriptIntrinsicBLAS.html#androidx-renderscript-ScriptIntrinsicBLAS-method-CGEMM' target='_blank' class='view-source'>view source</a></div><a href='#!/api/androidx.renderscript.ScriptIntrinsicBLAS-method-CGEMM' class='name expandable'>CGEMM</a>( <span class='pre'>TransA, TransB, alpha, A, B, beta, C</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>CGEMM performs one of the matrix-matrix operations\n C := alphaop(A)op(B) + beta*C   where op(X) is one of op(X) = X  ...</div><div class='long'><p>CGEMM performs one of the matrix-matrix operations\n C := alpha<em>op(A)</em>op(B) + beta*C   where op(X) is one of op(X) = X  or  op(X) = X<strong>T  or  op(X) = X</strong>H</p>\n\n<p> Details: http://www.netlib.org/lapack/explore-html/d6/d5b/cgemm_8f.html</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>TransA</span> : Number<div class='sub-desc'><p>The type of transpose applied to matrix A.</p>\n</div></li><li><span class='pre'>TransB</span> : Number<div class='sub-desc'><p>The type of transpose applied to matrix B.</p>\n</div></li><li><span class='pre'>alpha</span> : Object {Float2}<div class='sub-desc'><p>The scalar alpha.</p>\n</div></li><li><span class='pre'>A</span> : Object {Allocation}<div class='sub-desc'><p>The input allocation contains matrix A, supported elements type Element.F32_2.</p>\n</div></li><li><span class='pre'>B</span> : Object {Allocation}<div class='sub-desc'><p>The input allocation contains matrix B, supported elements type Element.F32_2.</p>\n</div></li><li><span class='pre'>beta</span> : Object {Float2}<div class='sub-desc'><p>The scalar beta.</p>\n</div></li><li><span class='pre'>C</span> : Object {Allocation}<div class='sub-desc'><p>The input allocation contains matrix C, supported elements type Element.F32_2.</p>\n</div></li></ul></div></div></div><div id='method-CGEMV' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='androidx.renderscript.ScriptIntrinsicBLAS'>androidx.renderscript.ScriptIntrinsicBLAS</span><br/><a href='source/ScriptIntrinsicBLAS.html#androidx-renderscript-ScriptIntrinsicBLAS-method-CGEMV' target='_blank' class='view-source'>view source</a></div><a href='#!/api/androidx.renderscript.ScriptIntrinsicBLAS-method-CGEMV' class='name expandable'>CGEMV</a>( <span class='pre'>TransA, alpha, A, X, incX, beta, Y, incY</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>CGEMV performs one of the matrix-vector operations\n y := alphaAx + betay   or   y := alphaATx + betay   or   y := alp...</div><div class='long'><p>CGEMV performs one of the matrix-vector operations\n y := alpha<em>A</em>x + beta<em>y   or   y := alpha</em>A<strong>T<em>x + beta</em>y   or   y := alpha*A</strong>H<em>x + beta</em>y</p>\n\n<p> Details: http://www.netlib.org/lapack/explore-html/d4/d8a/cgemv_8f.html</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>TransA</span> : Number<div class='sub-desc'><p>The type of transpose applied to matrix A.</p>\n</div></li><li><span class='pre'>alpha</span> : Object {Float2}<div class='sub-desc'><p>The scalar alpha.</p>\n</div></li><li><span class='pre'>A</span> : Object {Allocation}<div class='sub-desc'><p>The input allocation contains matrix A, supported elements type Element.F32_2.</p>\n</div></li><li><span class='pre'>X</span> : Object {Allocation}<div class='sub-desc'><p>The input allocation contains vector x, supported elements type Element.F32_2.</p>\n</div></li><li><span class='pre'>incX</span> : Number<div class='sub-desc'><p>The increment for the elements of vector x, must be larger than zero.</p>\n</div></li><li><span class='pre'>beta</span> : Object {Float2}<div class='sub-desc'><p>The scalar beta.</p>\n</div></li><li><span class='pre'>Y</span> : Object {Allocation}<div class='sub-desc'><p>The input allocation contains vector y, supported elements type Element.F32_2.</p>\n</div></li><li><span class='pre'>incY</span> : Number<div class='sub-desc'><p>The increment for the elements of vector y, must be larger than zero.</p>\n</div></li></ul></div></div></div><div id='method-CGERC' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='androidx.renderscript.ScriptIntrinsicBLAS'>androidx.renderscript.ScriptIntrinsicBLAS</span><br/><a href='source/ScriptIntrinsicBLAS.html#androidx-renderscript-ScriptIntrinsicBLAS-method-CGERC' target='_blank' class='view-source'>view source</a></div><a href='#!/api/androidx.renderscript.ScriptIntrinsicBLAS-method-CGERC' class='name expandable'>CGERC</a>( <span class='pre'>alpha, X, incX, Y, incY, A</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>CGERC performs the rank 1 operation\n A := alphaxy**H + A\n\n Details: http://www.netlib.org/lapack/explore-html/dd/d84/...</div><div class='long'><p>CGERC performs the rank 1 operation\n A := alpha<em>x</em>y**H + A</p>\n\n<p> Details: http://www.netlib.org/lapack/explore-html/dd/d84/cgerc_8f.html</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>alpha</span> : Object {Float2}<div class='sub-desc'><p>The scalar alpha.</p>\n</div></li><li><span class='pre'>X</span> : Object {Allocation}<div class='sub-desc'><p>The input allocation contains vector x, supported elements type Element.F32_2.</p>\n</div></li><li><span class='pre'>incX</span> : Number<div class='sub-desc'><p>The increment for the elements of vector x, must be larger than zero.</p>\n</div></li><li><span class='pre'>Y</span> : Object {Allocation}<div class='sub-desc'><p>The input allocation contains vector y, supported elements type Element.F32_2.</p>\n</div></li><li><span class='pre'>incY</span> : Number<div class='sub-desc'><p>The increment for the elements of vector y, must be larger than zero.</p>\n</div></li><li><span class='pre'>A</span> : Object {Allocation}<div class='sub-desc'><p>The input allocation contains matrix A, supported elements type Element.F32_2.</p>\n</div></li></ul></div></div></div><div id='method-CGERU' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='androidx.renderscript.ScriptIntrinsicBLAS'>androidx.renderscript.ScriptIntrinsicBLAS</span><br/><a href='source/ScriptIntrinsicBLAS.html#androidx-renderscript-ScriptIntrinsicBLAS-method-CGERU' target='_blank' class='view-source'>view source</a></div><a href='#!/api/androidx.renderscript.ScriptIntrinsicBLAS-method-CGERU' class='name expandable'>CGERU</a>( <span class='pre'>alpha, X, incX, Y, incY, A</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>CGERU performs the rank 1 operation\n A := alphaxy**T + A\n\n Details: http://www.netlib.org/lapack/explore-html/db/d5f/...</div><div class='long'><p>CGERU performs the rank 1 operation\n A := alpha<em>x</em>y**T + A</p>\n\n<p> Details: http://www.netlib.org/lapack/explore-html/db/d5f/cgeru_8f.html</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>alpha</span> : Object {Float2}<div class='sub-desc'><p>The scalar alpha.</p>\n</div></li><li><span class='pre'>X</span> : Object {Allocation}<div class='sub-desc'><p>The input allocation contains vector x, supported elements type Element.F32_2.</p>\n</div></li><li><span class='pre'>incX</span> : Number<div class='sub-desc'><p>The increment for the elements of vector x, must be larger than zero.</p>\n</div></li><li><span class='pre'>Y</span> : Object {Allocation}<div class='sub-desc'><p>The input allocation contains vector y, supported elements type Element.F32_2.</p>\n</div></li><li><span class='pre'>incY</span> : Number<div class='sub-desc'><p>The increment for the elements of vector y, must be larger than zero.</p>\n</div></li><li><span class='pre'>A</span> : Object {Allocation}<div class='sub-desc'><p>The input allocation contains matrix A, supported elements type Element.F32_2.</p>\n</div></li></ul></div></div></div><div id='method-CHBMV' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='androidx.renderscript.ScriptIntrinsicBLAS'>androidx.renderscript.ScriptIntrinsicBLAS</span><br/><a href='source/ScriptIntrinsicBLAS.html#androidx-renderscript-ScriptIntrinsicBLAS-method-CHBMV' target='_blank' class='view-source'>view source</a></div><a href='#!/api/androidx.renderscript.ScriptIntrinsicBLAS-method-CHBMV' class='name expandable'>CHBMV</a>( <span class='pre'>Uplo, K, alpha, A, X, incX, beta, Y, incY</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>CHBMV performs the matrix-vector operation\n y := alphaAx + beta*y\n\n Details: http://www.netlib.org/lapack/explore-htm...</div><div class='long'><p>CHBMV performs the matrix-vector operation\n y := alpha<em>A</em>x + beta*y</p>\n\n<p> Details: http://www.netlib.org/lapack/explore-html/db/dc2/chbmv_8f.html</p>\n\n<p> Note: For a N<em>N matrix, the input Allocation should also be of size N</em>N (dimY = N, dimX = N),\n       but only the region N*(K+1) will be referenced. The following subroutine can is an\n       example showing how to convert a UPPER trianglar matrix 'a' to row-based band matrix 'b'.\n           for i in range(0, n):\n              for j in range(i, min(i+k+1, n)):\n                  b[i, j-i] = a[i, j]</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>Uplo</span> : Number<div class='sub-desc'><p>Specifies whether the upper or lower triangular part of the band matrix A is being supplied.</p>\n</div></li><li><span class='pre'>K</span> : Number<div class='sub-desc'><p>The number of off-diagonals of the matrix A</p>\n</div></li><li><span class='pre'>alpha</span> : Object {Float2}<div class='sub-desc'><p>The scalar alpha.</p>\n</div></li><li><span class='pre'>A</span> : Object {Allocation}<div class='sub-desc'><p>The input allocation contains matrix A, supported elements type Element.F32_2.</p>\n</div></li><li><span class='pre'>X</span> : Object {Allocation}<div class='sub-desc'><p>The input allocation contains vector x, supported elements type Element.F32_2.</p>\n</div></li><li><span class='pre'>incX</span> : Number<div class='sub-desc'><p>The increment for the elements of vector x, must be larger than zero.</p>\n</div></li><li><span class='pre'>beta</span> : Object {Float2}<div class='sub-desc'><p>The scalar beta.</p>\n</div></li><li><span class='pre'>Y</span> : Object {Allocation}<div class='sub-desc'><p>The input allocation contains vector y, supported elements type Element.F32_2.</p>\n</div></li><li><span class='pre'>incY</span> : Number<div class='sub-desc'><p>The increment for the elements of vector y, must be larger than zero.</p>\n</div></li></ul></div></div></div><div id='method-CHEMM' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='androidx.renderscript.ScriptIntrinsicBLAS'>androidx.renderscript.ScriptIntrinsicBLAS</span><br/><a href='source/ScriptIntrinsicBLAS.html#androidx-renderscript-ScriptIntrinsicBLAS-method-CHEMM' target='_blank' class='view-source'>view source</a></div><a href='#!/api/androidx.renderscript.ScriptIntrinsicBLAS-method-CHEMM' class='name expandable'>CHEMM</a>( <span class='pre'>Side, Uplo, alpha, A, B, beta, C</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>CHEMM performs one of the matrix-matrix operations\n C := alphaAB + betaC   or   C := alphaBA + betaC\n\n Details: http:...</div><div class='long'><p>CHEMM performs one of the matrix-matrix operations\n C := alpha<em>A</em>B + beta<em>C   or   C := alpha</em>B<em>A + beta</em>C</p>\n\n<p> Details: http://www.netlib.org/lapack/explore-html/d3/d66/chemm_8f.html</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>Side</span> : Number<div class='sub-desc'><p>Specifies whether the symmetric matrix A appears on the left or right.</p>\n</div></li><li><span class='pre'>Uplo</span> : Number<div class='sub-desc'><p>Specifies whether the upper or lower triangular part is to be referenced.</p>\n</div></li><li><span class='pre'>alpha</span> : Object {Float2}<div class='sub-desc'><p>The scalar alpha.</p>\n</div></li><li><span class='pre'>A</span> : Object {Allocation}<div class='sub-desc'><p>The input allocation contains matrix A, supported elements type Element.F32_2.</p>\n</div></li><li><span class='pre'>B</span> : Object {Allocation}<div class='sub-desc'><p>The input allocation contains matrix B, supported elements type Element.F32_2.</p>\n</div></li><li><span class='pre'>beta</span> : Object {Float2}<div class='sub-desc'><p>The scalar beta.</p>\n</div></li><li><span class='pre'>C</span> : Object {Allocation}<div class='sub-desc'><p>The input allocation contains matrix C, supported elements type Element.F32_2.</p>\n</div></li></ul></div></div></div><div id='method-CHEMV' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='androidx.renderscript.ScriptIntrinsicBLAS'>androidx.renderscript.ScriptIntrinsicBLAS</span><br/><a href='source/ScriptIntrinsicBLAS.html#androidx-renderscript-ScriptIntrinsicBLAS-method-CHEMV' target='_blank' class='view-source'>view source</a></div><a href='#!/api/androidx.renderscript.ScriptIntrinsicBLAS-method-CHEMV' class='name expandable'>CHEMV</a>( <span class='pre'>Uplo, alpha, A, X, incX, beta, Y, incY</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>CHEMV performs the matrix-vector operation\n y := alphaAx + beta*y\n\n Details: http://www.netlib.org/lapack/explore-htm...</div><div class='long'><p>CHEMV performs the matrix-vector operation\n y := alpha<em>A</em>x + beta*y</p>\n\n<p> Details: http://www.netlib.org/lapack/explore-html/d7/d51/chemv_8f.html</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>Uplo</span> : Number<div class='sub-desc'><p>Specifies whether the upper or lower triangular part is to be referenced.</p>\n</div></li><li><span class='pre'>alpha</span> : Object {Float2}<div class='sub-desc'><p>The scalar alpha.</p>\n</div></li><li><span class='pre'>A</span> : Object {Allocation}<div class='sub-desc'><p>The input allocation contains matrix A, supported elements type Element.F32_2.</p>\n</div></li><li><span class='pre'>X</span> : Object {Allocation}<div class='sub-desc'><p>The input allocation contains vector x, supported elements type Element.F32_2.</p>\n</div></li><li><span class='pre'>incX</span> : Number<div class='sub-desc'><p>The increment for the elements of vector x, must be larger than zero.</p>\n</div></li><li><span class='pre'>beta</span> : Object {Float2}<div class='sub-desc'><p>The scalar beta.</p>\n</div></li><li><span class='pre'>Y</span> : Object {Allocation}<div class='sub-desc'><p>The input allocation contains vector y, supported elements type Element.F32_2.</p>\n</div></li><li><span class='pre'>incY</span> : Number<div class='sub-desc'><p>The increment for the elements of vector y, must be larger than zero.</p>\n</div></li></ul></div></div></div><div id='method-CHER' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='androidx.renderscript.ScriptIntrinsicBLAS'>androidx.renderscript.ScriptIntrinsicBLAS</span><br/><a href='source/ScriptIntrinsicBLAS.html#androidx-renderscript-ScriptIntrinsicBLAS-method-CHER' target='_blank' class='view-source'>view source</a></div><a href='#!/api/androidx.renderscript.ScriptIntrinsicBLAS-method-CHER' class='name expandable'>CHER</a>( <span class='pre'>Uplo, alpha, X, incX, A</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>CHER performs the rank 1 operation\n A := alphaxx**H + A\n\n Details: http://www.netlib.org/lapack/explore-html/d3/d6d/c...</div><div class='long'><p>CHER performs the rank 1 operation\n A := alpha<em>x</em>x**H + A</p>\n\n<p> Details: http://www.netlib.org/lapack/explore-html/d3/d6d/cher_8f.html</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>Uplo</span> : Number<div class='sub-desc'><p>Specifies whether the upper or lower triangular part is to be referenced.</p>\n</div></li><li><span class='pre'>alpha</span> : Number<div class='sub-desc'><p>The scalar alpha.</p>\n</div></li><li><span class='pre'>X</span> : Object {Allocation}<div class='sub-desc'><p>The input allocation contains vector x, supported elements type Element.F32_2.</p>\n</div></li><li><span class='pre'>incX</span> : Number<div class='sub-desc'><p>The increment for the elements of vector x, must be larger than zero.</p>\n</div></li><li><span class='pre'>A</span> : Object {Allocation}<div class='sub-desc'><p>The input allocation contains matrix A, supported elements type Element.F32_2.</p>\n</div></li></ul></div></div></div><div id='method-CHER2' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='androidx.renderscript.ScriptIntrinsicBLAS'>androidx.renderscript.ScriptIntrinsicBLAS</span><br/><a href='source/ScriptIntrinsicBLAS.html#androidx-renderscript-ScriptIntrinsicBLAS-method-CHER2' target='_blank' class='view-source'>view source</a></div><a href='#!/api/androidx.renderscript.ScriptIntrinsicBLAS-method-CHER2' class='name expandable'>CHER2</a>( <span class='pre'>Uplo, alpha, X, incX, Y, incY, A</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>CHER2 performs the symmetric rank 2 operation\n A := alphaxyH + alphayxH + A\n\n Details: http://www.netlib.org/lapack/e...</div><div class='long'><p>CHER2 performs the symmetric rank 2 operation\n A := alpha<em>x</em>y<strong>H + alpha<em>y</em>x</strong>H + A</p>\n\n<p> Details: http://www.netlib.org/lapack/explore-html/db/d87/cher2_8f.html</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>Uplo</span> : Number<div class='sub-desc'><p>Specifies whether the upper or lower triangular part is to be referenced.</p>\n</div></li><li><span class='pre'>alpha</span> : Object {Float2}<div class='sub-desc'><p>The scalar alpha.</p>\n</div></li><li><span class='pre'>X</span> : Object {Allocation}<div class='sub-desc'><p>The input allocation contains vector x, supported elements type Element.F32_2.</p>\n</div></li><li><span class='pre'>incX</span> : Number<div class='sub-desc'><p>The increment for the elements of vector x, must be larger than zero.</p>\n</div></li><li><span class='pre'>Y</span> : Object {Allocation}<div class='sub-desc'><p>The input allocation contains vector y, supported elements type Element.F32_2.</p>\n</div></li><li><span class='pre'>incY</span> : Number<div class='sub-desc'><p>The increment for the elements of vector y, must be larger than zero.</p>\n</div></li><li><span class='pre'>A</span> : Object {Allocation}<div class='sub-desc'><p>The input allocation contains matrix A, supported elements type Element.F32_2.</p>\n</div></li></ul></div></div></div><div id='method-CHER2K' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='androidx.renderscript.ScriptIntrinsicBLAS'>androidx.renderscript.ScriptIntrinsicBLAS</span><br/><a href='source/ScriptIntrinsicBLAS.html#androidx-renderscript-ScriptIntrinsicBLAS-method-CHER2K' target='_blank' class='view-source'>view source</a></div><a href='#!/api/androidx.renderscript.ScriptIntrinsicBLAS-method-CHER2K' class='name expandable'>CHER2K</a>( <span class='pre'>Uplo, Trans, alpha, A, B, beta, C</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>CHER2K performs one of the hermitian rank 2k operations\n C := alphaABH + conjg( alpha )BAH + betaC   or   C := alphaA...</div><div class='long'><p>CHER2K performs one of the hermitian rank 2k operations\n C := alpha<em>A</em>B<strong>H + conjg( alpha )<em>B</em>A</strong>H + beta<em>C   or   C := alpha</em>A<strong>H<em>B + conjg( alpha )</em>B</strong>H<em>A + beta</em>C</p>\n\n<p> Details: http://www.netlib.org/lapack/explore-html/d1/d82/cher2k_8f.html</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>Uplo</span> : Number<div class='sub-desc'><p>Specifies whether the upper or lower triangular part of C is to be referenced.</p>\n</div></li><li><span class='pre'>Trans</span> : Number<div class='sub-desc'><p>The type of transpose applied to the operation.</p>\n</div></li><li><span class='pre'>alpha</span> : Object {Float2}<div class='sub-desc'><p>The scalar alpha.</p>\n</div></li><li><span class='pre'>A</span> : Object {Allocation}<div class='sub-desc'><p>The input allocation contains matrix A, supported elements type Element.F32_2.</p>\n</div></li><li><span class='pre'>B</span> : Object {Allocation}<div class='sub-desc'><p>The input allocation contains matrix B, supported elements type Element.F32_2.</p>\n</div></li><li><span class='pre'>beta</span> : Number<div class='sub-desc'><p>The scalar beta.</p>\n</div></li><li><span class='pre'>C</span> : Object {Allocation}<div class='sub-desc'><p>The input allocation contains matrix C, supported elements type Element.F32_2.</p>\n</div></li></ul></div></div></div><div id='method-CHERK' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='androidx.renderscript.ScriptIntrinsicBLAS'>androidx.renderscript.ScriptIntrinsicBLAS</span><br/><a href='source/ScriptIntrinsicBLAS.html#androidx-renderscript-ScriptIntrinsicBLAS-method-CHERK' target='_blank' class='view-source'>view source</a></div><a href='#!/api/androidx.renderscript.ScriptIntrinsicBLAS-method-CHERK' class='name expandable'>CHERK</a>( <span class='pre'>Uplo, Trans, alpha, A, beta, C</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>CHERK performs one of the hermitian rank k operations\n C := alphaAAH + betaC   or   C := alphaAHA + betaC\n\n Details: ...</div><div class='long'><p>CHERK performs one of the hermitian rank k operations\n C := alpha<em>A</em>A<strong>H + beta<em>C   or   C := alpha</em>A</strong>H<em>A + beta</em>C</p>\n\n<p> Details: http://www.netlib.org/lapack/explore-html/d8/d52/cherk_8f.html</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>Uplo</span> : Number<div class='sub-desc'><p>Specifies whether the upper or lower triangular part of C is to be referenced.</p>\n</div></li><li><span class='pre'>Trans</span> : Number<div class='sub-desc'><p>The type of transpose applied to the operation.</p>\n</div></li><li><span class='pre'>alpha</span> : Number<div class='sub-desc'><p>The scalar alpha.</p>\n</div></li><li><span class='pre'>A</span> : Object {Allocation}<div class='sub-desc'><p>The input allocation contains matrix A, supported elements type Element.F32_2.</p>\n</div></li><li><span class='pre'>beta</span> : Number<div class='sub-desc'><p>The scalar beta.</p>\n</div></li><li><span class='pre'>C</span> : Object {Allocation}<div class='sub-desc'><p>The input allocation contains matrix C, supported elements type Element.F32_2.</p>\n</div></li></ul></div></div></div><div id='method-CHPMV' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='androidx.renderscript.ScriptIntrinsicBLAS'>androidx.renderscript.ScriptIntrinsicBLAS</span><br/><a href='source/ScriptIntrinsicBLAS.html#androidx-renderscript-ScriptIntrinsicBLAS-method-CHPMV' target='_blank' class='view-source'>view source</a></div><a href='#!/api/androidx.renderscript.ScriptIntrinsicBLAS-method-CHPMV' class='name expandable'>CHPMV</a>( <span class='pre'>Uplo, alpha, Ap, X, incX, beta, Y, incY</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>CHPMV performs the matrix-vector operation\n y := alphaAx + beta*y\n\n Details: http://www.netlib.org/lapack/explore-htm...</div><div class='long'><p>CHPMV performs the matrix-vector operation\n y := alpha<em>A</em>x + beta*y</p>\n\n<p> Details: http://www.netlib.org/lapack/explore-html/d2/d06/chpmv_8f.html</p>\n\n<p> Note: For a N<em>N matrix, the input Allocation should be a 1D allocation of size dimX = N</em>(N+1)/2,\n       The following subroutine can is an example showing how to convert a UPPER trianglar matrix\n       'a' to packed matrix 'b'.\n           k = 0\n           for i in range(0, n):\n              for j in range(i, n):\n                  b[k++] = a[i, j]</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>Uplo</span> : Number<div class='sub-desc'><p>Specifies whether the upper or lower triangular part of the matrix A is supplied in packed form.</p>\n</div></li><li><span class='pre'>alpha</span> : Object {Float2}<div class='sub-desc'><p>The scalar alpha.</p>\n</div></li><li><span class='pre'>Ap</span> : Object {Allocation}<div class='sub-desc'><p>The input allocation contains matrix A, supported elements type Element.F32_2.</p>\n</div></li><li><span class='pre'>X</span> : Object {Allocation}<div class='sub-desc'><p>The input allocation contains vector x, supported elements type Element.F32_2.</p>\n</div></li><li><span class='pre'>incX</span> : Number<div class='sub-desc'><p>The increment for the elements of vector x, must be larger than zero.</p>\n</div></li><li><span class='pre'>beta</span> : Object {Float2}<div class='sub-desc'><p>The scalar beta.</p>\n</div></li><li><span class='pre'>Y</span> : Object {Allocation}<div class='sub-desc'><p>The input allocation contains vector y, supported elements type Element.F32_2.</p>\n</div></li><li><span class='pre'>incY</span> : Number<div class='sub-desc'><p>The increment for the elements of vector y, must be larger than zero.</p>\n</div></li></ul></div></div></div><div id='method-CHPR' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='androidx.renderscript.ScriptIntrinsicBLAS'>androidx.renderscript.ScriptIntrinsicBLAS</span><br/><a href='source/ScriptIntrinsicBLAS.html#androidx-renderscript-ScriptIntrinsicBLAS-method-CHPR' target='_blank' class='view-source'>view source</a></div><a href='#!/api/androidx.renderscript.ScriptIntrinsicBLAS-method-CHPR' class='name expandable'>CHPR</a>( <span class='pre'>Uplo, alpha, X, incX, Ap</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>CHPR performs the rank 1 operation\n A := alphaxx**H + A\n\n Details: http://www.netlib.org/lapack/explore-html/db/dcd/c...</div><div class='long'><p>CHPR performs the rank 1 operation\n A := alpha<em>x</em>x**H + A</p>\n\n<p> Details: http://www.netlib.org/lapack/explore-html/db/dcd/chpr_8f.html</p>\n\n<p> Note: For a N<em>N matrix, the input Allocation should be a 1D allocation of size dimX = N</em>(N+1)/2,\n       The following subroutine can is an example showing how to convert a UPPER trianglar matrix\n       'a' to packed matrix 'b'.\n           k = 0\n           for i in range(0, n):\n              for j in range(i, n):\n                  b[k++] = a[i, j]</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>Uplo</span> : Number<div class='sub-desc'><p>Specifies whether the upper or lower triangular part is to be supplied in the packed form.</p>\n</div></li><li><span class='pre'>alpha</span> : Number<div class='sub-desc'><p>The scalar alpha.</p>\n</div></li><li><span class='pre'>X</span> : Object {Allocation}<div class='sub-desc'><p>The input allocation contains vector x, supported elements type Element.F32_2.</p>\n</div></li><li><span class='pre'>incX</span> : Number<div class='sub-desc'><p>The increment for the elements of vector x, must be larger than zero.</p>\n</div></li><li><span class='pre'>Ap</span> : Object {Allocation}<div class='sub-desc'><p>The input allocation contains matrix A, supported elements type Element.F32_2.</p>\n</div></li></ul></div></div></div><div id='method-CHPR2' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='androidx.renderscript.ScriptIntrinsicBLAS'>androidx.renderscript.ScriptIntrinsicBLAS</span><br/><a href='source/ScriptIntrinsicBLAS.html#androidx-renderscript-ScriptIntrinsicBLAS-method-CHPR2' target='_blank' class='view-source'>view source</a></div><a href='#!/api/androidx.renderscript.ScriptIntrinsicBLAS-method-CHPR2' class='name expandable'>CHPR2</a>( <span class='pre'>Uplo, alpha, X, incX, Y, incY, Ap</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>CHPR2 performs the symmetric rank 2 operation\n A := alphaxyH + alphayxH + A\n\n Details: http://www.netlib.org/lapack/e...</div><div class='long'><p>CHPR2 performs the symmetric rank 2 operation\n A := alpha<em>x</em>y<strong>H + alpha<em>y</em>x</strong>H + A</p>\n\n<p> Details: http://www.netlib.org/lapack/explore-html/d6/d44/chpr2_8f.html</p>\n\n<p> Note: For a N<em>N matrix, the input Allocation should be a 1D allocation of size dimX = N</em>(N+1)/2,\n       The following subroutine can is an example showing how to convert a UPPER trianglar matrix\n       'a' to packed matrix 'b'.\n           k = 0\n           for i in range(0, n):\n              for j in range(i, n):\n                  b[k++] = a[i, j]</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>Uplo</span> : Number<div class='sub-desc'><p>Specifies whether the upper or lower triangular part is to be supplied in the packed form.</p>\n</div></li><li><span class='pre'>alpha</span> : Object {Float2}<div class='sub-desc'><p>The scalar alpha.</p>\n</div></li><li><span class='pre'>X</span> : Object {Allocation}<div class='sub-desc'><p>The input allocation contains vector x, supported elements type Element.F32_2.</p>\n</div></li><li><span class='pre'>incX</span> : Number<div class='sub-desc'><p>The increment for the elements of vector x, must be larger than zero.</p>\n</div></li><li><span class='pre'>Y</span> : Object {Allocation}<div class='sub-desc'><p>The input allocation contains vector y, supported elements type Element.F32_2.</p>\n</div></li><li><span class='pre'>incY</span> : Number<div class='sub-desc'><p>The increment for the elements of vector y, must be larger than zero.</p>\n</div></li><li><span class='pre'>Ap</span> : Object {Allocation}<div class='sub-desc'><p>The input allocation contains matrix A, supported elements type Element.F32_2.</p>\n</div></li></ul></div></div></div><div id='method-CSYMM' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='androidx.renderscript.ScriptIntrinsicBLAS'>androidx.renderscript.ScriptIntrinsicBLAS</span><br/><a href='source/ScriptIntrinsicBLAS.html#androidx-renderscript-ScriptIntrinsicBLAS-method-CSYMM' target='_blank' class='view-source'>view source</a></div><a href='#!/api/androidx.renderscript.ScriptIntrinsicBLAS-method-CSYMM' class='name expandable'>CSYMM</a>( <span class='pre'>Side, Uplo, alpha, A, B, beta, C</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>CSYMM performs one of the matrix-matrix operations\n C := alphaAB + betaC   or   C := alphaBA + betaC\n\n Details: http:...</div><div class='long'><p>CSYMM performs one of the matrix-matrix operations\n C := alpha<em>A</em>B + beta<em>C   or   C := alpha</em>B<em>A + beta</em>C</p>\n\n<p> Details: http://www.netlib.org/lapack/explore-html/db/d59/csymm_8f.html</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>Side</span> : Number<div class='sub-desc'><p>Specifies whether the symmetric matrix A appears on the left or right.</p>\n</div></li><li><span class='pre'>Uplo</span> : Number<div class='sub-desc'><p>Specifies whether the upper or lower triangular part is to be referenced.</p>\n</div></li><li><span class='pre'>alpha</span> : Object {Float2}<div class='sub-desc'><p>The scalar alpha.</p>\n</div></li><li><span class='pre'>A</span> : Object {Allocation}<div class='sub-desc'><p>The input allocation contains matrix A, supported elements type Element.F32_2.</p>\n</div></li><li><span class='pre'>B</span> : Object {Allocation}<div class='sub-desc'><p>The input allocation contains matrix B, supported elements type Element.F32_2.</p>\n</div></li><li><span class='pre'>beta</span> : Object {Float2}<div class='sub-desc'><p>The scalar beta.</p>\n</div></li><li><span class='pre'>C</span> : Object {Allocation}<div class='sub-desc'><p>The input allocation contains matrix C, supported elements type Element.F32_2.</p>\n</div></li></ul></div></div></div><div id='method-CSYR2K' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='androidx.renderscript.ScriptIntrinsicBLAS'>androidx.renderscript.ScriptIntrinsicBLAS</span><br/><a href='source/ScriptIntrinsicBLAS.html#androidx-renderscript-ScriptIntrinsicBLAS-method-CSYR2K' target='_blank' class='view-source'>view source</a></div><a href='#!/api/androidx.renderscript.ScriptIntrinsicBLAS-method-CSYR2K' class='name expandable'>CSYR2K</a>( <span class='pre'>Uplo, Trans, alpha, A, B, beta, C</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>CSYR2K performs one of the symmetric rank 2k operations\n C := alphaABT + alphaBAT + betaC   or   C := alphaATB + alph...</div><div class='long'><p>CSYR2K performs one of the symmetric rank 2k operations\n C := alpha<em>A</em>B<strong>T + alpha<em>B</em>A</strong>T + beta<em>C   or   C := alpha</em>A<strong>T<em>B + alpha</em>B</strong>T<em>A + beta</em>C</p>\n\n<p> Details: http://www.netlib.org/lapack/explore-html/de/d7e/csyr2k_8f.html</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>Uplo</span> : Number<div class='sub-desc'><p>Specifies whether the upper or lower triangular part of C is to be referenced.</p>\n</div></li><li><span class='pre'>Trans</span> : Number<div class='sub-desc'><p>The type of transpose applied to the operation.</p>\n</div></li><li><span class='pre'>alpha</span> : Object {Float2}<div class='sub-desc'><p>The scalar alpha.</p>\n</div></li><li><span class='pre'>A</span> : Object {Allocation}<div class='sub-desc'><p>The input allocation contains matrix A, supported elements type Element.F32_2.</p>\n</div></li><li><span class='pre'>B</span> : Object {Allocation}<div class='sub-desc'><p>The input allocation contains matrix B, supported elements type Element.F32_2.</p>\n</div></li><li><span class='pre'>beta</span> : Object {Float2}<div class='sub-desc'><p>The scalar beta.</p>\n</div></li><li><span class='pre'>C</span> : Object {Allocation}<div class='sub-desc'><p>The input allocation contains matrix C, supported elements type Element.F32_2.</p>\n</div></li></ul></div></div></div><div id='method-CSYRK' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='androidx.renderscript.ScriptIntrinsicBLAS'>androidx.renderscript.ScriptIntrinsicBLAS</span><br/><a href='source/ScriptIntrinsicBLAS.html#androidx-renderscript-ScriptIntrinsicBLAS-method-CSYRK' target='_blank' class='view-source'>view source</a></div><a href='#!/api/androidx.renderscript.ScriptIntrinsicBLAS-method-CSYRK' class='name expandable'>CSYRK</a>( <span class='pre'>Uplo, Trans, alpha, A, beta, C</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>CSYRK performs one of the symmetric rank k operations\n C := alphaAAT + betaC   or   C := alphaATA + betaC\n\n Details: ...</div><div class='long'><p>CSYRK performs one of the symmetric rank k operations\n C := alpha<em>A</em>A<strong>T + beta<em>C   or   C := alpha</em>A</strong>T<em>A + beta</em>C</p>\n\n<p> Details: http://www.netlib.org/lapack/explore-html/d3/d6a/csyrk_8f.html</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>Uplo</span> : Number<div class='sub-desc'><p>Specifies whether the upper or lower triangular part of C is to be referenced.</p>\n</div></li><li><span class='pre'>Trans</span> : Number<div class='sub-desc'><p>The type of transpose applied to the operation.</p>\n</div></li><li><span class='pre'>alpha</span> : Object {Float2}<div class='sub-desc'><p>The scalar alpha.</p>\n</div></li><li><span class='pre'>A</span> : Object {Allocation}<div class='sub-desc'><p>The input allocation contains matrix A, supported elements type Element.F32_2.</p>\n</div></li><li><span class='pre'>beta</span> : Object {Float2}<div class='sub-desc'><p>The scalar beta.</p>\n</div></li><li><span class='pre'>C</span> : Object {Allocation}<div class='sub-desc'><p>The input allocation contains matrix C, supported elements type Element.F32_2.</p>\n</div></li></ul></div></div></div><div id='method-CTBMV' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='androidx.renderscript.ScriptIntrinsicBLAS'>androidx.renderscript.ScriptIntrinsicBLAS</span><br/><a href='source/ScriptIntrinsicBLAS.html#androidx-renderscript-ScriptIntrinsicBLAS-method-CTBMV' target='_blank' class='view-source'>view source</a></div><a href='#!/api/androidx.renderscript.ScriptIntrinsicBLAS-method-CTBMV' class='name expandable'>CTBMV</a>( <span class='pre'>Uplo, TransA, Diag, K, A, X, incX</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>CTBMV performs one of the matrix-vector operations\n x := Ax   or   x := A**Tx   or   x := A*Hx\n\n Details: http://www....</div><div class='long'><p>CTBMV performs one of the matrix-vector operations\n x := A<em>x   or   x := A**T</em>x   or   x := A<em>*H</em>x</p>\n\n<p> Details: http://www.netlib.org/lapack/explore-html/d3/dcd/ctbmv_8f.html</p>\n\n<p> Note: For a N<em>N matrix, the input Allocation should also be of size N</em>N (dimY = N, dimX = N),\n       but only the region N*(K+1) will be referenced. The following subroutine can is an\n       example showing how to convert a UPPER trianglar matrix 'a' to row-based band matrix 'b'.\n           for i in range(0, n):\n              for j in range(i, min(i+k+1, n)):\n                  b[i, j-i] = a[i, j]</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>Uplo</span> : Number<div class='sub-desc'><p>Specifies whether the matrix is an upper or lower triangular matrix.</p>\n</div></li><li><span class='pre'>TransA</span> : Number<div class='sub-desc'><p>The type of transpose applied to matrix A.</p>\n</div></li><li><span class='pre'>Diag</span> : Number<div class='sub-desc'><p>Specifies whether or not A is unit triangular.</p>\n</div></li><li><span class='pre'>K</span> : Number<div class='sub-desc'><p>The number of off-diagonals of the matrix A</p>\n</div></li><li><span class='pre'>A</span> : Object {Allocation}<div class='sub-desc'><p>The input allocation contains matrix A, supported elements type Element.F32_2.</p>\n</div></li><li><span class='pre'>X</span> : Object {Allocation}<div class='sub-desc'><p>The input allocation contains vector x, supported elements type Element.F32_2.</p>\n</div></li><li><span class='pre'>incX</span> : Number<div class='sub-desc'><p>The increment for the elements of vector x, must be larger than zero.</p>\n</div></li></ul></div></div></div><div id='method-CTBSV' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='androidx.renderscript.ScriptIntrinsicBLAS'>androidx.renderscript.ScriptIntrinsicBLAS</span><br/><a href='source/ScriptIntrinsicBLAS.html#androidx-renderscript-ScriptIntrinsicBLAS-method-CTBSV' target='_blank' class='view-source'>view source</a></div><a href='#!/api/androidx.renderscript.ScriptIntrinsicBLAS-method-CTBSV' class='name expandable'>CTBSV</a>( <span class='pre'>Uplo, TransA, Diag, K, A, X, incX</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>CTBSV solves one of the systems of equations\n Ax = b   or   A**Tx = b   or   A*Hx = b\n\n Details: http://www.netlib.or...</div><div class='long'><p>CTBSV solves one of the systems of equations\n A<em>x = b   or   A**T</em>x = b   or   A<em>*H</em>x = b</p>\n\n<p> Details: http://www.netlib.org/lapack/explore-html/d9/d5f/ctbsv_8f.html</p>\n\n<p> Note: For a N<em>N matrix, the input Allocation should also be of size N</em>N (dimY = N, dimX = N),\n       but only the region N*(K+1) will be referenced. The following subroutine can is an\n       example showing how to convert a UPPER trianglar matrix 'a' to row-based band matrix 'b'.\n           for i in range(0, n):\n              for j in range(i, min(i+k+1, n)):\n                  b[i, j-i] = a[i, j]</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>Uplo</span> : Number<div class='sub-desc'><p>Specifies whether the matrix is an upper or lower triangular matrix.</p>\n</div></li><li><span class='pre'>TransA</span> : Number<div class='sub-desc'><p>The type of transpose applied to matrix A.</p>\n</div></li><li><span class='pre'>Diag</span> : Number<div class='sub-desc'><p>Specifies whether or not A is unit triangular.</p>\n</div></li><li><span class='pre'>K</span> : Number<div class='sub-desc'><p>The number of off-diagonals of the matrix A</p>\n</div></li><li><span class='pre'>A</span> : Object {Allocation}<div class='sub-desc'><p>The input allocation contains matrix A, supported elements type Element.F32_2.</p>\n</div></li><li><span class='pre'>X</span> : Object {Allocation}<div class='sub-desc'><p>The input allocation contains vector x, supported elements type Element.F32_2.</p>\n</div></li><li><span class='pre'>incX</span> : Number<div class='sub-desc'><p>The increment for the elements of vector x, must be larger than zero.</p>\n</div></li></ul></div></div></div><div id='method-CTPMV' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='androidx.renderscript.ScriptIntrinsicBLAS'>androidx.renderscript.ScriptIntrinsicBLAS</span><br/><a href='source/ScriptIntrinsicBLAS.html#androidx-renderscript-ScriptIntrinsicBLAS-method-CTPMV' target='_blank' class='view-source'>view source</a></div><a href='#!/api/androidx.renderscript.ScriptIntrinsicBLAS-method-CTPMV' class='name expandable'>CTPMV</a>( <span class='pre'>Uplo, TransA, Diag, Ap, X, incX</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>CTPMV performs one of the matrix-vector operations\n x := Ax   or   x := A**Tx   or   x := A*Hx\n\n Details: http://www....</div><div class='long'><p>CTPMV performs one of the matrix-vector operations\n x := A<em>x   or   x := A**T</em>x   or   x := A<em>*H</em>x</p>\n\n<p> Details: http://www.netlib.org/lapack/explore-html/d4/dbb/ctpmv_8f.html</p>\n\n<p> Note: For a N<em>N matrix, the input Allocation should be a 1D allocation of size dimX = N</em>(N+1)/2,\n       The following subroutine can is an example showing how to convert a UPPER trianglar matrix\n       'a' to packed matrix 'b'.\n           k = 0\n           for i in range(0, n):\n              for j in range(i, n):\n                  b[k++] = a[i, j]</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>Uplo</span> : Number<div class='sub-desc'><p>Specifies whether the matrix is an upper or lower triangular matrix.</p>\n</div></li><li><span class='pre'>TransA</span> : Number<div class='sub-desc'><p>The type of transpose applied to matrix A.</p>\n</div></li><li><span class='pre'>Diag</span> : Number<div class='sub-desc'><p>Specifies whether or not A is unit triangular.</p>\n</div></li><li><span class='pre'>Ap</span> : Object {Allocation}<div class='sub-desc'><p>The input allocation contains packed matrix A, supported elements type Element.F32_2.</p>\n</div></li><li><span class='pre'>X</span> : Object {Allocation}<div class='sub-desc'><p>The input allocation contains vector x, supported elements type Element.F32_2.</p>\n</div></li><li><span class='pre'>incX</span> : Number<div class='sub-desc'><p>The increment for the elements of vector x, must be larger than zero.</p>\n</div></li></ul></div></div></div><div id='method-CTPSV' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='androidx.renderscript.ScriptIntrinsicBLAS'>androidx.renderscript.ScriptIntrinsicBLAS</span><br/><a href='source/ScriptIntrinsicBLAS.html#androidx-renderscript-ScriptIntrinsicBLAS-method-CTPSV' target='_blank' class='view-source'>view source</a></div><a href='#!/api/androidx.renderscript.ScriptIntrinsicBLAS-method-CTPSV' class='name expandable'>CTPSV</a>( <span class='pre'>Uplo, TransA, Diag, Ap, X, incX</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>CTPSV solves one of the systems of equations\n Ax = b   or   A**Tx = b   or   A*Hx = b\n\n Details: http://www.netlib.or...</div><div class='long'><p>CTPSV solves one of the systems of equations\n A<em>x = b   or   A**T</em>x = b   or   A<em>*H</em>x = b</p>\n\n<p> Details: http://www.netlib.org/lapack/explore-html/d8/d56/ctpsv_8f.html</p>\n\n<p> Note: For a N<em>N matrix, the input Allocation should be a 1D allocation of size dimX = N</em>(N+1)/2,\n       The following subroutine can is an example showing how to convert a UPPER trianglar matrix\n       'a' to packed matrix 'b'.\n           k = 0\n           for i in range(0, n):\n              for j in range(i, n):\n                  b[k++] = a[i, j]</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>Uplo</span> : Number<div class='sub-desc'><p>Specifies whether the matrix is an upper or lower triangular matrix.</p>\n</div></li><li><span class='pre'>TransA</span> : Number<div class='sub-desc'><p>The type of transpose applied to matrix A.</p>\n</div></li><li><span class='pre'>Diag</span> : Number<div class='sub-desc'><p>Specifies whether or not A is unit triangular.</p>\n</div></li><li><span class='pre'>Ap</span> : Object {Allocation}<div class='sub-desc'><p>The input allocation contains packed matrix A, supported elements type Element.F32_2.</p>\n</div></li><li><span class='pre'>X</span> : Object {Allocation}<div class='sub-desc'><p>The input allocation contains vector x, supported elements type Element.F32_2.</p>\n</div></li><li><span class='pre'>incX</span> : Number<div class='sub-desc'><p>The increment for the elements of vector x, must be larger than zero.</p>\n</div></li></ul></div></div></div><div id='method-CTRMM' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='androidx.renderscript.ScriptIntrinsicBLAS'>androidx.renderscript.ScriptIntrinsicBLAS</span><br/><a href='source/ScriptIntrinsicBLAS.html#androidx-renderscript-ScriptIntrinsicBLAS-method-CTRMM' target='_blank' class='view-source'>view source</a></div><a href='#!/api/androidx.renderscript.ScriptIntrinsicBLAS-method-CTRMM' class='name expandable'>CTRMM</a>( <span class='pre'>Side, Uplo, TransA, Diag, alpha, A, B</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>CTRMM performs one of the matrix-matrix operations\n B := alphaop(A)B   or   B := alphaBop(A)\n op(A) is one of  op(A) ...</div><div class='long'><p>CTRMM performs one of the matrix-matrix operations\n B := alpha<em>op(A)</em>B   or   B := alpha<em>B</em>op(A)\n op(A) is one of  op(A) = A  or  op(A) = A<strong>T  or  op(A) = A</strong>H</p>\n\n<p> Details: http://www.netlib.org/lapack/explore-html/d4/d9b/ctrmm_8f.html</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>Side</span> : Number<div class='sub-desc'><p>Specifies whether the symmetric matrix A appears on the left or right.</p>\n</div></li><li><span class='pre'>Uplo</span> : Number<div class='sub-desc'><p>Specifies whether matrix A is upper or lower triangular.</p>\n</div></li><li><span class='pre'>TransA</span> : Number<div class='sub-desc'><p>The type of transpose applied to matrix A.</p>\n</div></li><li><span class='pre'>Diag</span> : Number<div class='sub-desc'><p>Specifies whether or not A is unit triangular.</p>\n</div></li><li><span class='pre'>alpha</span> : Object {Float2}<div class='sub-desc'><p>The scalar alpha.</p>\n</div></li><li><span class='pre'>A</span> : Object {Allocation}<div class='sub-desc'><p>The input allocation contains matrix A, supported elements type Element.F32_2.</p>\n</div></li><li><span class='pre'>B</span> : Object {Allocation}<div class='sub-desc'><p>The input allocation contains matrix B, supported elements type Element.F32_2.</p>\n</div></li></ul></div></div></div><div id='method-CTRMV' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='androidx.renderscript.ScriptIntrinsicBLAS'>androidx.renderscript.ScriptIntrinsicBLAS</span><br/><a href='source/ScriptIntrinsicBLAS.html#androidx-renderscript-ScriptIntrinsicBLAS-method-CTRMV' target='_blank' class='view-source'>view source</a></div><a href='#!/api/androidx.renderscript.ScriptIntrinsicBLAS-method-CTRMV' class='name expandable'>CTRMV</a>( <span class='pre'>Uplo, TransA, Diag, A, X, incX</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>CTRMV performs one of the matrix-vector operations\n x := Ax   or   x := A**Tx   or   x := A*Hx\n\n Details: http://www....</div><div class='long'><p>CTRMV performs one of the matrix-vector operations\n x := A<em>x   or   x := A**T</em>x   or   x := A<em>*H</em>x</p>\n\n<p> Details: http://www.netlib.org/lapack/explore-html/df/d78/ctrmv_8f.html</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>Uplo</span> : Number<div class='sub-desc'><p>Specifies whether the matrix is an upper or lower triangular matrix.</p>\n</div></li><li><span class='pre'>TransA</span> : Number<div class='sub-desc'><p>The type of transpose applied to matrix A.</p>\n</div></li><li><span class='pre'>Diag</span> : Number<div class='sub-desc'><p>Specifies whether or not A is unit triangular.</p>\n</div></li><li><span class='pre'>A</span> : Object {Allocation}<div class='sub-desc'><p>The input allocation contains matrix A, supported elements type Element.F32_2.</p>\n</div></li><li><span class='pre'>X</span> : Object {Allocation}<div class='sub-desc'><p>The input allocation contains vector x, supported elements type Element.F32_2.</p>\n</div></li><li><span class='pre'>incX</span> : Number<div class='sub-desc'><p>The increment for the elements of vector x, must be larger than zero.</p>\n</div></li></ul></div></div></div><div id='method-CTRSM' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='androidx.renderscript.ScriptIntrinsicBLAS'>androidx.renderscript.ScriptIntrinsicBLAS</span><br/><a href='source/ScriptIntrinsicBLAS.html#androidx-renderscript-ScriptIntrinsicBLAS-method-CTRSM' target='_blank' class='view-source'>view source</a></div><a href='#!/api/androidx.renderscript.ScriptIntrinsicBLAS-method-CTRSM' class='name expandable'>CTRSM</a>( <span class='pre'>Side, Uplo, TransA, Diag, alpha, A, B</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>CTRSM solves one of the matrix equations\n op(A)X := alphaB   or   Xop(A) := alphaB\n op(A) is one of  op(A) = A  or  o...</div><div class='long'><p>CTRSM solves one of the matrix equations\n op(A)<em>X := alpha</em>B   or   X<em>op(A) := alpha</em>B\n op(A) is one of  op(A) = A  or  op(A) = A<strong>T  or  op(A) = A</strong>H</p>\n\n<p> Details: http://www.netlib.org/lapack/explore-html/de/d30/ctrsm_8f.html</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>Side</span> : Number<div class='sub-desc'><p>Specifies whether the symmetric matrix A appears on the left or right.</p>\n</div></li><li><span class='pre'>Uplo</span> : Number<div class='sub-desc'><p>Specifies whether matrix A is upper or lower triangular.</p>\n</div></li><li><span class='pre'>TransA</span> : Number<div class='sub-desc'><p>The type of transpose applied to matrix A.</p>\n</div></li><li><span class='pre'>Diag</span> : Number<div class='sub-desc'><p>Specifies whether or not A is unit triangular.</p>\n</div></li><li><span class='pre'>alpha</span> : Object {Float2}<div class='sub-desc'><p>The scalar alpha.</p>\n</div></li><li><span class='pre'>A</span> : Object {Allocation}<div class='sub-desc'><p>The input allocation contains matrix A, supported elements type Element.F32_2.</p>\n</div></li><li><span class='pre'>B</span> : Object {Allocation}<div class='sub-desc'><p>The input allocation contains matrix B, supported elements type Element.F32_2.</p>\n</div></li></ul></div></div></div><div id='method-CTRSV' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='androidx.renderscript.ScriptIntrinsicBLAS'>androidx.renderscript.ScriptIntrinsicBLAS</span><br/><a href='source/ScriptIntrinsicBLAS.html#androidx-renderscript-ScriptIntrinsicBLAS-method-CTRSV' target='_blank' class='view-source'>view source</a></div><a href='#!/api/androidx.renderscript.ScriptIntrinsicBLAS-method-CTRSV' class='name expandable'>CTRSV</a>( <span class='pre'>Uplo, TransA, Diag, A, X, incX</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>CTRSV solves one of the systems of equations\n Ax = b   or   A**Tx = b   or   A*Hx = b\n\n Details: http://www.netlib.or...</div><div class='long'><p>CTRSV solves one of the systems of equations\n A<em>x = b   or   A**T</em>x = b   or   A<em>*H</em>x = b</p>\n\n<p> Details: http://www.netlib.org/lapack/explore-html/d4/dc8/ctrsv_8f.html</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>Uplo</span> : Number<div class='sub-desc'><p>Specifies whether the matrix is an upper or lower triangular matrix.</p>\n</div></li><li><span class='pre'>TransA</span> : Number<div class='sub-desc'><p>The type of transpose applied to matrix A.</p>\n</div></li><li><span class='pre'>Diag</span> : Number<div class='sub-desc'><p>Specifies whether or not A is unit triangular.</p>\n</div></li><li><span class='pre'>A</span> : Object {Allocation}<div class='sub-desc'><p>The input allocation contains matrix A, supported elements type Element.F32_2.</p>\n</div></li><li><span class='pre'>X</span> : Object {Allocation}<div class='sub-desc'><p>The input allocation contains vector x, supported elements type Element.F32_2.</p>\n</div></li><li><span class='pre'>incX</span> : Number<div class='sub-desc'><p>The increment for the elements of vector x, must be larger than zero.</p>\n</div></li></ul></div></div></div><div id='method-DGBMV' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='androidx.renderscript.ScriptIntrinsicBLAS'>androidx.renderscript.ScriptIntrinsicBLAS</span><br/><a href='source/ScriptIntrinsicBLAS.html#androidx-renderscript-ScriptIntrinsicBLAS-method-DGBMV' target='_blank' class='view-source'>view source</a></div><a href='#!/api/androidx.renderscript.ScriptIntrinsicBLAS-method-DGBMV' class='name expandable'>DGBMV</a>( <span class='pre'>TransA, KL, KU, alpha, A, X, incX, beta, Y, incY</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>DGBMV performs one of the matrix-vector operations\n y := alphaAx + betay   or   y := alphaATx + betay\n\n Details: http...</div><div class='long'><p>DGBMV performs one of the matrix-vector operations\n y := alpha<em>A</em>x + beta<em>y   or   y := alpha</em>A<em><em>T</em>x + beta</em>y</p>\n\n<p> Details: http://www.netlib.org/lapack/explore-html/d2/d3f/dgbmv_8f.html</p>\n\n<p> Note: For a M<em>N matrix, the input Allocation should also be of size M</em>N (dimY = M, dimX = N),\n       but only the region M*(KL+KU+1) will be referenced. The following subroutine can is an\n       example showing how to convert the original matrix 'a' to row-based band matrix 'b'.\n           for i in range(0, m):\n              for j in range(max(0, i-kl), min(i+ku+1, n)):\n                  b[i, j-i+kl] = a[i, j]</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>TransA</span> : Number<div class='sub-desc'><p>The type of transpose applied to matrix A.</p>\n</div></li><li><span class='pre'>KL</span> : Number<div class='sub-desc'><p>The number of sub-diagonals of the matrix A.</p>\n</div></li><li><span class='pre'>KU</span> : Number<div class='sub-desc'><p>The number of super-diagonals of the matrix A.</p>\n</div></li><li><span class='pre'>alpha</span> : Number<div class='sub-desc'><p>The scalar alpha.</p>\n</div></li><li><span class='pre'>A</span> : Object {Allocation}<div class='sub-desc'><p>The input allocation contains the band matrix A, supported elements type Element.F64.</p>\n</div></li><li><span class='pre'>X</span> : Object {Allocation}<div class='sub-desc'><p>The input allocation contains vector x, supported elements type Element.F64.</p>\n</div></li><li><span class='pre'>incX</span> : Number<div class='sub-desc'><p>The increment for the elements of vector x, must be larger than zero.</p>\n</div></li><li><span class='pre'>beta</span> : Number<div class='sub-desc'><p>The scalar beta.</p>\n</div></li><li><span class='pre'>Y</span> : Object {Allocation}<div class='sub-desc'><p>The input allocation contains vector y, supported elements type Element.F64.</p>\n</div></li><li><span class='pre'>incY</span> : Number<div class='sub-desc'><p>The increment for the elements of vector y, must be larger than zero.</p>\n</div></li></ul></div></div></div><div id='method-DGEMM' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='androidx.renderscript.ScriptIntrinsicBLAS'>androidx.renderscript.ScriptIntrinsicBLAS</span><br/><a href='source/ScriptIntrinsicBLAS.html#androidx-renderscript-ScriptIntrinsicBLAS-method-DGEMM' target='_blank' class='view-source'>view source</a></div><a href='#!/api/androidx.renderscript.ScriptIntrinsicBLAS-method-DGEMM' class='name expandable'>DGEMM</a>( <span class='pre'>TransA, TransB, alpha, A, B, beta, C</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>DGEMM performs one of the matrix-matrix operations\n C := alphaop(A)op(B) + beta*C   where op(X) is one of op(X) = X  ...</div><div class='long'><p>DGEMM performs one of the matrix-matrix operations\n C := alpha<em>op(A)</em>op(B) + beta*C   where op(X) is one of op(X) = X  or  op(X) = X**T</p>\n\n<p> Details: http://www.netlib.org/lapack/explore-html/d7/d2b/dgemm_8f.html</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>TransA</span> : Number<div class='sub-desc'><p>The type of transpose applied to matrix A.</p>\n</div></li><li><span class='pre'>TransB</span> : Number<div class='sub-desc'><p>The type of transpose applied to matrix B.</p>\n</div></li><li><span class='pre'>alpha</span> : Number<div class='sub-desc'><p>The scalar alpha.</p>\n</div></li><li><span class='pre'>A</span> : Object {Allocation}<div class='sub-desc'><p>The input allocation contains matrix A, supported elements type Element.F64.</p>\n</div></li><li><span class='pre'>B</span> : Object {Allocation}<div class='sub-desc'><p>The input allocation contains matrix B, supported elements type Element.F64.</p>\n</div></li><li><span class='pre'>beta</span> : Number<div class='sub-desc'><p>The scalar beta.</p>\n</div></li><li><span class='pre'>C</span> : Object {Allocation}<div class='sub-desc'><p>The input allocation contains matrix C, supported elements type Element.F64.</p>\n</div></li></ul></div></div></div><div id='method-DGEMV' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='androidx.renderscript.ScriptIntrinsicBLAS'>androidx.renderscript.ScriptIntrinsicBLAS</span><br/><a href='source/ScriptIntrinsicBLAS.html#androidx-renderscript-ScriptIntrinsicBLAS-method-DGEMV' target='_blank' class='view-source'>view source</a></div><a href='#!/api/androidx.renderscript.ScriptIntrinsicBLAS-method-DGEMV' class='name expandable'>DGEMV</a>( <span class='pre'>TransA, alpha, A, X, incX, beta, Y, incY</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>DGEMV performs one of the matrix-vector operations\n y := alphaAx + betay   or   y := alphaATx + betay\n\n Details: http...</div><div class='long'><p>DGEMV performs one of the matrix-vector operations\n y := alpha<em>A</em>x + beta<em>y   or   y := alpha</em>A<em><em>T</em>x + beta</em>y</p>\n\n<p> Details: http://www.netlib.org/lapack/explore-html/dc/da8/dgemv_8f.html</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>TransA</span> : Number<div class='sub-desc'><p>The type of transpose applied to matrix A.</p>\n</div></li><li><span class='pre'>alpha</span> : Number<div class='sub-desc'><p>The scalar alpha.</p>\n</div></li><li><span class='pre'>A</span> : Object {Allocation}<div class='sub-desc'><p>The input allocation contains matrix A, supported elements type Element.F64.</p>\n</div></li><li><span class='pre'>X</span> : Object {Allocation}<div class='sub-desc'><p>The input allocation contains vector x, supported elements type Element.F64.</p>\n</div></li><li><span class='pre'>incX</span> : Number<div class='sub-desc'><p>The increment for the elements of vector x, must be larger than zero.</p>\n</div></li><li><span class='pre'>beta</span> : Number<div class='sub-desc'><p>The scalar beta.</p>\n</div></li><li><span class='pre'>Y</span> : Object {Allocation}<div class='sub-desc'><p>The input allocation contains vector y, supported elements type Element.F64.</p>\n</div></li><li><span class='pre'>incY</span> : Number<div class='sub-desc'><p>The increment for the elements of vector y, must be larger than zero.</p>\n</div></li></ul></div></div></div><div id='method-DGER' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='androidx.renderscript.ScriptIntrinsicBLAS'>androidx.renderscript.ScriptIntrinsicBLAS</span><br/><a href='source/ScriptIntrinsicBLAS.html#androidx-renderscript-ScriptIntrinsicBLAS-method-DGER' target='_blank' class='view-source'>view source</a></div><a href='#!/api/androidx.renderscript.ScriptIntrinsicBLAS-method-DGER' class='name expandable'>DGER</a>( <span class='pre'>alpha, X, incX, Y, incY, A</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>DGER performs the rank 1 operation\n A := alphaxy**T + A\n\n Details: http://www.netlib.org/lapack/explore-html/dc/da8/d...</div><div class='long'><p>DGER performs the rank 1 operation\n A := alpha<em>x</em>y**T + A</p>\n\n<p> Details: http://www.netlib.org/lapack/explore-html/dc/da8/dger_8f.html</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>alpha</span> : Number<div class='sub-desc'><p>The scalar alpha.</p>\n</div></li><li><span class='pre'>X</span> : Object {Allocation}<div class='sub-desc'><p>The input allocation contains vector x, supported elements type Element.F64.</p>\n</div></li><li><span class='pre'>incX</span> : Number<div class='sub-desc'><p>The increment for the elements of vector x, must be larger than zero.</p>\n</div></li><li><span class='pre'>Y</span> : Object {Allocation}<div class='sub-desc'><p>The input allocation contains vector y, supported elements type Element.F64.</p>\n</div></li><li><span class='pre'>incY</span> : Number<div class='sub-desc'><p>The increment for the elements of vector y, must be larger than zero.</p>\n</div></li><li><span class='pre'>A</span> : Object {Allocation}<div class='sub-desc'><p>The input allocation contains matrix A, supported elements type Element.F64.</p>\n</div></li></ul></div></div></div><div id='method-DSBMV' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='androidx.renderscript.ScriptIntrinsicBLAS'>androidx.renderscript.ScriptIntrinsicBLAS</span><br/><a href='source/ScriptIntrinsicBLAS.html#androidx-renderscript-ScriptIntrinsicBLAS-method-DSBMV' target='_blank' class='view-source'>view source</a></div><a href='#!/api/androidx.renderscript.ScriptIntrinsicBLAS-method-DSBMV' class='name expandable'>DSBMV</a>( <span class='pre'>Uplo, K, alpha, A, X, incX, beta, Y, incY</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>DSBMV performs the matrix-vector operation\n y := alphaAx + beta*y\n\n Details: http://www.netlib.org/lapack/explore-htm...</div><div class='long'><p>DSBMV performs the matrix-vector operation\n y := alpha<em>A</em>x + beta*y</p>\n\n<p> Details: http://www.netlib.org/lapack/explore-html/d8/d1e/dsbmv_8f.html</p>\n\n<p> Note: For a N<em>N matrix, the input Allocation should also be of size N</em>N (dimY = N, dimX = N),\n       but only the region N*(K+1) will be referenced. The following subroutine can is an\n       example showing how to convert a UPPER trianglar matrix 'a' to row-based band matrix 'b'.\n           for i in range(0, n):\n              for j in range(i, min(i+k+1, n)):\n                  b[i, j-i] = a[i, j]</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>Uplo</span> : Number<div class='sub-desc'><p>Specifies whether the upper or lower triangular part of the band matrix A is being supplied.</p>\n</div></li><li><span class='pre'>K</span> : Number<div class='sub-desc'><p>The number of off-diagonals of the matrix A</p>\n</div></li><li><span class='pre'>alpha</span> : Number<div class='sub-desc'><p>The scalar alpha.</p>\n</div></li><li><span class='pre'>A</span> : Object {Allocation}<div class='sub-desc'><p>The input allocation contains matrix A, supported elements type Element.F64.</p>\n</div></li><li><span class='pre'>X</span> : Object {Allocation}<div class='sub-desc'><p>The input allocation contains vector x, supported elements type Element.F64.</p>\n</div></li><li><span class='pre'>incX</span> : Number<div class='sub-desc'><p>The increment for the elements of vector x, must be larger than zero.</p>\n</div></li><li><span class='pre'>beta</span> : Number<div class='sub-desc'><p>The scalar beta.</p>\n</div></li><li><span class='pre'>Y</span> : Object {Allocation}<div class='sub-desc'><p>The input allocation contains vector y, supported elements type Element.F64.</p>\n</div></li><li><span class='pre'>incY</span> : Number<div class='sub-desc'><p>The increment for the elements of vector y, must be larger than zero.</p>\n</div></li></ul></div></div></div><div id='method-DSPMV' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='androidx.renderscript.ScriptIntrinsicBLAS'>androidx.renderscript.ScriptIntrinsicBLAS</span><br/><a href='source/ScriptIntrinsicBLAS.html#androidx-renderscript-ScriptIntrinsicBLAS-method-DSPMV' target='_blank' class='view-source'>view source</a></div><a href='#!/api/androidx.renderscript.ScriptIntrinsicBLAS-method-DSPMV' class='name expandable'>DSPMV</a>( <span class='pre'>Uplo, alpha, Ap, X, incX, beta, Y, incY</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>DSPMV performs the matrix-vector operation\n y := alphaAx + beta*y\n\n Details: http://www.netlib.org/lapack/explore-htm...</div><div class='long'><p>DSPMV performs the matrix-vector operation\n y := alpha<em>A</em>x + beta*y</p>\n\n<p> Details: http://www.netlib.org/lapack/explore-html/d4/d85/dspmv_8f.html</p>\n\n<p> Note: For a N<em>N matrix, the input Allocation should be a 1D allocation of size dimX = N</em>(N+1)/2,\n       The following subroutine can is an example showing how to convert a UPPER trianglar matrix\n       'a' to packed matrix 'b'.\n           k = 0\n           for i in range(0, n):\n              for j in range(i, n):\n                  b[k++] = a[i, j]</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>Uplo</span> : Number<div class='sub-desc'><p>Specifies whether the upper or lower triangular part of the matrix A is supplied in packed form.</p>\n</div></li><li><span class='pre'>alpha</span> : Number<div class='sub-desc'><p>The scalar alpha.</p>\n</div></li><li><span class='pre'>Ap</span> : Object {Allocation}<div class='sub-desc'><p>The input allocation contains matrix A, supported elements type Element.F64.</p>\n</div></li><li><span class='pre'>X</span> : Object {Allocation}<div class='sub-desc'><p>The input allocation contains vector x, supported elements type Element.F64.</p>\n</div></li><li><span class='pre'>incX</span> : Number<div class='sub-desc'><p>The increment for the elements of vector x, must be larger than zero.</p>\n</div></li><li><span class='pre'>beta</span> : Number<div class='sub-desc'><p>The scalar beta.</p>\n</div></li><li><span class='pre'>Y</span> : Object {Allocation}<div class='sub-desc'><p>The input allocation contains vector y, supported elements type Element.F64.</p>\n</div></li><li><span class='pre'>incY</span> : Number<div class='sub-desc'><p>The increment for the elements of vector y, must be larger than zero.</p>\n</div></li></ul></div></div></div><div id='method-DSPR' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='androidx.renderscript.ScriptIntrinsicBLAS'>androidx.renderscript.ScriptIntrinsicBLAS</span><br/><a href='source/ScriptIntrinsicBLAS.html#androidx-renderscript-ScriptIntrinsicBLAS-method-DSPR' target='_blank' class='view-source'>view source</a></div><a href='#!/api/androidx.renderscript.ScriptIntrinsicBLAS-method-DSPR' class='name expandable'>DSPR</a>( <span class='pre'>Uplo, alpha, X, incX, Ap</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>DSPR performs the rank 1 operation\n A := alphaxx**T + A\n\n Details: http://www.netlib.org/lapack/explore-html/dd/dba/d...</div><div class='long'><p>DSPR performs the rank 1 operation\n A := alpha<em>x</em>x**T + A</p>\n\n<p> Details: http://www.netlib.org/lapack/explore-html/dd/dba/dspr_8f.html</p>\n\n<p> Note: For a N<em>N matrix, the input Allocation should be a 1D allocation of size dimX = N</em>(N+1)/2,\n       The following subroutine can is an example showing how to convert a UPPER trianglar matrix\n       'a' to packed matrix 'b'.\n           k = 0\n           for i in range(0, n):\n              for j in range(i, n):\n                  b[k++] = a[i, j]</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>Uplo</span> : Number<div class='sub-desc'><p>Specifies whether the upper or lower triangular part is to be supplied in the packed form.</p>\n</div></li><li><span class='pre'>alpha</span> : Number<div class='sub-desc'><p>The scalar alpha.</p>\n</div></li><li><span class='pre'>X</span> : Object {Allocation}<div class='sub-desc'><p>The input allocation contains vector x, supported elements type Element.F64.</p>\n</div></li><li><span class='pre'>incX</span> : Number<div class='sub-desc'><p>The increment for the elements of vector x, must be larger than zero.</p>\n</div></li><li><span class='pre'>Ap</span> : Object {Allocation}<div class='sub-desc'><p>The input allocation contains matrix A, supported elements type Element.F64.</p>\n</div></li></ul></div></div></div><div id='method-DSPR2' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='androidx.renderscript.ScriptIntrinsicBLAS'>androidx.renderscript.ScriptIntrinsicBLAS</span><br/><a href='source/ScriptIntrinsicBLAS.html#androidx-renderscript-ScriptIntrinsicBLAS-method-DSPR2' target='_blank' class='view-source'>view source</a></div><a href='#!/api/androidx.renderscript.ScriptIntrinsicBLAS-method-DSPR2' class='name expandable'>DSPR2</a>( <span class='pre'>Uplo, alpha, X, incX, Y, incY, Ap</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>DSPR2 performs the symmetric rank 2 operation\n A := alphaxyT + alphayxT + A\n\n Details: http://www.netlib.org/lapack/e...</div><div class='long'><p>DSPR2 performs the symmetric rank 2 operation\n A := alpha<em>x</em>y<strong>T + alpha<em>y</em>x</strong>T + A</p>\n\n<p> Details: http://www.netlib.org/lapack/explore-html/dd/d9e/dspr2_8f.html</p>\n\n<p> Note: For a N<em>N matrix, the input Allocation should be a 1D allocation of size dimX = N</em>(N+1)/2,\n       The following subroutine can is an example showing how to convert a UPPER trianglar matrix\n       'a' to packed matrix 'b'.\n           k = 0\n           for i in range(0, n):\n              for j in range(i, n):\n                  b[k++] = a[i, j]</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>Uplo</span> : Number<div class='sub-desc'><p>Specifies whether the upper or lower triangular part is to be supplied in the packed form.</p>\n</div></li><li><span class='pre'>alpha</span> : Number<div class='sub-desc'><p>The scalar alpha.</p>\n</div></li><li><span class='pre'>X</span> : Object {Allocation}<div class='sub-desc'><p>The input allocation contains vector x, supported elements type Element.F64.</p>\n</div></li><li><span class='pre'>incX</span> : Number<div class='sub-desc'><p>The increment for the elements of vector x, must be larger than zero.</p>\n</div></li><li><span class='pre'>Y</span> : Object {Allocation}<div class='sub-desc'><p>The input allocation contains vector y, supported elements type Element.F64.</p>\n</div></li><li><span class='pre'>incY</span> : Number<div class='sub-desc'><p>The increment for the elements of vector y, must be larger than zero.</p>\n</div></li><li><span class='pre'>Ap</span> : Object {Allocation}<div class='sub-desc'><p>The input allocation contains matrix A, supported elements type Element.F64.</p>\n</div></li></ul></div></div></div><div id='method-DSYMM' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='androidx.renderscript.ScriptIntrinsicBLAS'>androidx.renderscript.ScriptIntrinsicBLAS</span><br/><a href='source/ScriptIntrinsicBLAS.html#androidx-renderscript-ScriptIntrinsicBLAS-method-DSYMM' target='_blank' class='view-source'>view source</a></div><a href='#!/api/androidx.renderscript.ScriptIntrinsicBLAS-method-DSYMM' class='name expandable'>DSYMM</a>( <span class='pre'>Side, Uplo, alpha, A, B, beta, C</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>DSYMM performs one of the matrix-matrix operations\n C := alphaAB + betaC   or   C := alphaBA + betaC\n\n Details: http:...</div><div class='long'><p>DSYMM performs one of the matrix-matrix operations\n C := alpha<em>A</em>B + beta<em>C   or   C := alpha</em>B<em>A + beta</em>C</p>\n\n<p> Details: http://www.netlib.org/lapack/explore-html/d8/db0/dsymm_8f.html</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>Side</span> : Number<div class='sub-desc'><p>Specifies whether the symmetric matrix A appears on the left or right.</p>\n</div></li><li><span class='pre'>Uplo</span> : Number<div class='sub-desc'><p>Specifies whether the upper or lower triangular part is to be referenced.</p>\n</div></li><li><span class='pre'>alpha</span> : Number<div class='sub-desc'><p>The scalar alpha.</p>\n</div></li><li><span class='pre'>A</span> : Object {Allocation}<div class='sub-desc'><p>The input allocation contains matrix A, supported elements type Element.F64.</p>\n</div></li><li><span class='pre'>B</span> : Object {Allocation}<div class='sub-desc'><p>The input allocation contains matrix B, supported elements type Element.F64.</p>\n</div></li><li><span class='pre'>beta</span> : Number<div class='sub-desc'><p>The scalar beta.</p>\n</div></li><li><span class='pre'>C</span> : Object {Allocation}<div class='sub-desc'><p>The input allocation contains matrix C, supported elements type Element.F64.</p>\n</div></li></ul></div></div></div><div id='method-DSYMV' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='androidx.renderscript.ScriptIntrinsicBLAS'>androidx.renderscript.ScriptIntrinsicBLAS</span><br/><a href='source/ScriptIntrinsicBLAS.html#androidx-renderscript-ScriptIntrinsicBLAS-method-DSYMV' target='_blank' class='view-source'>view source</a></div><a href='#!/api/androidx.renderscript.ScriptIntrinsicBLAS-method-DSYMV' class='name expandable'>DSYMV</a>( <span class='pre'>Uplo, alpha, A, X, incX, beta, Y, incY</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>DSYMV performs the matrix-vector operation\n y := alphaAx + beta*y\n\n Details: http://www.netlib.org/lapack/explore-htm...</div><div class='long'><p>DSYMV performs the matrix-vector operation\n y := alpha<em>A</em>x + beta*y</p>\n\n<p> Details: http://www.netlib.org/lapack/explore-html/d8/dbe/dsymv_8f.html</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>Uplo</span> : Number<div class='sub-desc'><p>Specifies whether the upper or lower triangular part is to be referenced.</p>\n</div></li><li><span class='pre'>alpha</span> : Number<div class='sub-desc'><p>The scalar alpha.</p>\n</div></li><li><span class='pre'>A</span> : Object {Allocation}<div class='sub-desc'><p>The input allocation contains matrix A, supported elements type Element.F64.</p>\n</div></li><li><span class='pre'>X</span> : Object {Allocation}<div class='sub-desc'><p>The input allocation contains vector x, supported elements type Element.F64.</p>\n</div></li><li><span class='pre'>incX</span> : Number<div class='sub-desc'><p>The increment for the elements of vector x, must be larger than zero.</p>\n</div></li><li><span class='pre'>beta</span> : Number<div class='sub-desc'><p>The scalar beta.</p>\n</div></li><li><span class='pre'>Y</span> : Object {Allocation}<div class='sub-desc'><p>The input allocation contains vector y, supported elements type Element.F64.</p>\n</div></li><li><span class='pre'>incY</span> : Number<div class='sub-desc'><p>The increment for the elements of vector y, must be larger than zero.</p>\n</div></li></ul></div></div></div><div id='method-DSYR' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='androidx.renderscript.ScriptIntrinsicBLAS'>androidx.renderscript.ScriptIntrinsicBLAS</span><br/><a href='source/ScriptIntrinsicBLAS.html#androidx-renderscript-ScriptIntrinsicBLAS-method-DSYR' target='_blank' class='view-source'>view source</a></div><a href='#!/api/androidx.renderscript.ScriptIntrinsicBLAS-method-DSYR' class='name expandable'>DSYR</a>( <span class='pre'>Uplo, alpha, X, incX, A</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>DSYR performs the rank 1 operation\n A := alphaxx**T + A\n\n Details: http://www.netlib.org/lapack/explore-html/d3/d60/d...</div><div class='long'><p>DSYR performs the rank 1 operation\n A := alpha<em>x</em>x**T + A</p>\n\n<p> Details: http://www.netlib.org/lapack/explore-html/d3/d60/dsyr_8f.html</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>Uplo</span> : Number<div class='sub-desc'><p>Specifies whether the upper or lower triangular part is to be referenced.</p>\n</div></li><li><span class='pre'>alpha</span> : Number<div class='sub-desc'><p>The scalar alpha.</p>\n</div></li><li><span class='pre'>X</span> : Object {Allocation}<div class='sub-desc'><p>The input allocation contains vector x, supported elements type Element.F64.</p>\n</div></li><li><span class='pre'>incX</span> : Number<div class='sub-desc'><p>The increment for the elements of vector x, must be larger than zero.</p>\n</div></li><li><span class='pre'>A</span> : Object {Allocation}<div class='sub-desc'><p>The input allocation contains matrix A, supported elements type Element.F64.</p>\n</div></li></ul></div></div></div><div id='method-DSYR2' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='androidx.renderscript.ScriptIntrinsicBLAS'>androidx.renderscript.ScriptIntrinsicBLAS</span><br/><a href='source/ScriptIntrinsicBLAS.html#androidx-renderscript-ScriptIntrinsicBLAS-method-DSYR2' target='_blank' class='view-source'>view source</a></div><a href='#!/api/androidx.renderscript.ScriptIntrinsicBLAS-method-DSYR2' class='name expandable'>DSYR2</a>( <span class='pre'>Uplo, alpha, X, incX, Y, incY, A</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>DSYR2 performs the symmetric rank 2 operation\n A := alphaxyT + alphayxT + A\n\n Details: http://www.netlib.org/lapack/e...</div><div class='long'><p>DSYR2 performs the symmetric rank 2 operation\n A := alpha<em>x</em>y<strong>T + alpha<em>y</em>x</strong>T + A</p>\n\n<p> Details: http://www.netlib.org/lapack/explore-html/de/d41/dsyr2_8f.html</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>Uplo</span> : Number<div class='sub-desc'><p>Specifies whether the upper or lower triangular part is to be referenced.</p>\n</div></li><li><span class='pre'>alpha</span> : Number<div class='sub-desc'><p>The scalar alpha.</p>\n</div></li><li><span class='pre'>X</span> : Object {Allocation}<div class='sub-desc'><p>The input allocation contains vector x, supported elements type Element.F64.</p>\n</div></li><li><span class='pre'>incX</span> : Number<div class='sub-desc'><p>The increment for the elements of vector x, must be larger than zero.</p>\n</div></li><li><span class='pre'>Y</span> : Object {Allocation}<div class='sub-desc'><p>The input allocation contains vector y, supported elements type Element.F64.</p>\n</div></li><li><span class='pre'>incY</span> : Number<div class='sub-desc'><p>The increment for the elements of vector y, must be larger than zero.</p>\n</div></li><li><span class='pre'>A</span> : Object {Allocation}<div class='sub-desc'><p>The input allocation contains matrix A, supported elements type Element.F64.</p>\n</div></li></ul></div></div></div><div id='method-DSYR2K' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='androidx.renderscript.ScriptIntrinsicBLAS'>androidx.renderscript.ScriptIntrinsicBLAS</span><br/><a href='source/ScriptIntrinsicBLAS.html#androidx-renderscript-ScriptIntrinsicBLAS-method-DSYR2K' target='_blank' class='view-source'>view source</a></div><a href='#!/api/androidx.renderscript.ScriptIntrinsicBLAS-method-DSYR2K' class='name expandable'>DSYR2K</a>( <span class='pre'>Uplo, Trans, alpha, A, B, beta, C</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>DSYR2K performs one of the symmetric rank 2k operations\n C := alphaABT + alphaBAT + betaC   or   C := alphaATB + alph...</div><div class='long'><p>DSYR2K performs one of the symmetric rank 2k operations\n C := alpha<em>A</em>B<strong>T + alpha<em>B</em>A</strong>T + beta<em>C   or   C := alpha</em>A<strong>T<em>B + alpha</em>B</strong>T<em>A + beta</em>C</p>\n\n<p> Details: http://www.netlib.org/lapack/explore-html/d1/dec/dsyr2k_8f.html</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>Uplo</span> : Number<div class='sub-desc'><p>Specifies whether the upper or lower triangular part of C is to be referenced.</p>\n</div></li><li><span class='pre'>Trans</span> : Number<div class='sub-desc'><p>The type of transpose applied to the operation.</p>\n</div></li><li><span class='pre'>alpha</span> : Number<div class='sub-desc'><p>The scalar alpha.</p>\n</div></li><li><span class='pre'>A</span> : Object {Allocation}<div class='sub-desc'><p>The input allocation contains matrix A, supported elements type Element.F64.</p>\n</div></li><li><span class='pre'>B</span> : Object {Allocation}<div class='sub-desc'><p>The input allocation contains matrix B, supported elements type Element.F64.</p>\n</div></li><li><span class='pre'>beta</span> : Number<div class='sub-desc'><p>The scalar beta.</p>\n</div></li><li><span class='pre'>C</span> : Object {Allocation}<div class='sub-desc'><p>The input allocation contains matrix C, supported elements type Element.F64.</p>\n</div></li></ul></div></div></div><div id='method-DSYRK' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='androidx.renderscript.ScriptIntrinsicBLAS'>androidx.renderscript.ScriptIntrinsicBLAS</span><br/><a href='source/ScriptIntrinsicBLAS.html#androidx-renderscript-ScriptIntrinsicBLAS-method-DSYRK' target='_blank' class='view-source'>view source</a></div><a href='#!/api/androidx.renderscript.ScriptIntrinsicBLAS-method-DSYRK' class='name expandable'>DSYRK</a>( <span class='pre'>Uplo, Trans, alpha, A, beta, C</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>DSYRK performs one of the symmetric rank k operations\n C := alphaAAT + betaC   or   C := alphaATA + betaC\n\n Details: ...</div><div class='long'><p>DSYRK performs one of the symmetric rank k operations\n C := alpha<em>A</em>A<strong>T + beta<em>C   or   C := alpha</em>A</strong>T<em>A + beta</em>C</p>\n\n<p> Details: http://www.netlib.org/lapack/explore-html/dc/d05/dsyrk_8f.html</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>Uplo</span> : Number<div class='sub-desc'><p>Specifies whether the upper or lower triangular part of C is to be referenced.</p>\n</div></li><li><span class='pre'>Trans</span> : Number<div class='sub-desc'><p>The type of transpose applied to the operation.</p>\n</div></li><li><span class='pre'>alpha</span> : Number<div class='sub-desc'><p>The scalar alpha.</p>\n</div></li><li><span class='pre'>A</span> : Object {Allocation}<div class='sub-desc'><p>The input allocation contains matrix A, supported elements type Element.F64.</p>\n</div></li><li><span class='pre'>beta</span> : Number<div class='sub-desc'><p>The scalar beta.</p>\n</div></li><li><span class='pre'>C</span> : Object {Allocation}<div class='sub-desc'><p>The input allocation contains matrix C, supported elements type Element.F64.</p>\n</div></li></ul></div></div></div><div id='method-DTBMV' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='androidx.renderscript.ScriptIntrinsicBLAS'>androidx.renderscript.ScriptIntrinsicBLAS</span><br/><a href='source/ScriptIntrinsicBLAS.html#androidx-renderscript-ScriptIntrinsicBLAS-method-DTBMV' target='_blank' class='view-source'>view source</a></div><a href='#!/api/androidx.renderscript.ScriptIntrinsicBLAS-method-DTBMV' class='name expandable'>DTBMV</a>( <span class='pre'>Uplo, TransA, Diag, K, A, X, incX</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>DTBMV performs one of the matrix-vector operations\n x := Ax   or   x := A**Tx\n\n Details: http://www.netlib.org/lapack...</div><div class='long'><p>DTBMV performs one of the matrix-vector operations\n x := A<em>x   or   x := A**T</em>x</p>\n\n<p> Details: http://www.netlib.org/lapack/explore-html/df/d29/dtbmv_8f.html</p>\n\n<p> Note: For a N<em>N matrix, the input Allocation should also be of size N</em>N (dimY = N, dimX = N),\n       but only the region N*(K+1) will be referenced. The following subroutine can is an\n       example showing how to convert a UPPER trianglar matrix 'a' to row-based band matrix 'b'.\n           for i in range(0, n):\n              for j in range(i, min(i+k+1, n)):\n                  b[i, j-i] = a[i, j]</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>Uplo</span> : Number<div class='sub-desc'><p>Specifies whether the matrix is an upper or lower triangular matrix.</p>\n</div></li><li><span class='pre'>TransA</span> : Number<div class='sub-desc'><p>The type of transpose applied to matrix A.</p>\n</div></li><li><span class='pre'>Diag</span> : Number<div class='sub-desc'><p>Specifies whether or not A is unit triangular.</p>\n</div></li><li><span class='pre'>K</span> : Number<div class='sub-desc'><p>The number of off-diagonals of the matrix A</p>\n</div></li><li><span class='pre'>A</span> : Object {Allocation}<div class='sub-desc'><p>The input allocation contains matrix A, supported elements type Element.F64.</p>\n</div></li><li><span class='pre'>X</span> : Object {Allocation}<div class='sub-desc'><p>The input allocation contains vector x, supported elements type Element.F64.</p>\n</div></li><li><span class='pre'>incX</span> : Number<div class='sub-desc'><p>The increment for the elements of vector x, must be larger than zero.</p>\n</div></li></ul></div></div></div><div id='method-DTBSV' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='androidx.renderscript.ScriptIntrinsicBLAS'>androidx.renderscript.ScriptIntrinsicBLAS</span><br/><a href='source/ScriptIntrinsicBLAS.html#androidx-renderscript-ScriptIntrinsicBLAS-method-DTBSV' target='_blank' class='view-source'>view source</a></div><a href='#!/api/androidx.renderscript.ScriptIntrinsicBLAS-method-DTBSV' class='name expandable'>DTBSV</a>( <span class='pre'>Uplo, TransA, Diag, K, A, X, incX</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>DTBSV solves one of the systems of equations\n Ax = b   or   A**Tx = b\n\n Details: http://www.netlib.org/lapack/explore...</div><div class='long'><p>DTBSV solves one of the systems of equations\n A<em>x = b   or   A**T</em>x = b</p>\n\n<p> Details: http://www.netlib.org/lapack/explore-html/d4/dcf/dtbsv_8f.html</p>\n\n<p> Note: For a N<em>N matrix, the input Allocation should also be of size N</em>N (dimY = N, dimX = N),\n       but only the region N*(K+1) will be referenced. The following subroutine can is an\n       example showing how to convert a UPPER trianglar matrix 'a' to row-based band matrix 'b'.\n           for i in range(0, n):\n              for j in range(i, min(i+k+1, n)):\n                  b[i, j-i] = a[i, j]</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>Uplo</span> : Number<div class='sub-desc'><p>Specifies whether the matrix is an upper or lower triangular matrix.</p>\n</div></li><li><span class='pre'>TransA</span> : Number<div class='sub-desc'><p>The type of transpose applied to matrix A.</p>\n</div></li><li><span class='pre'>Diag</span> : Number<div class='sub-desc'><p>Specifies whether or not A is unit triangular.</p>\n</div></li><li><span class='pre'>K</span> : Number<div class='sub-desc'><p>The number of off-diagonals of the matrix A</p>\n</div></li><li><span class='pre'>A</span> : Object {Allocation}<div class='sub-desc'><p>The input allocation contains matrix A, supported elements type Element.F64.</p>\n</div></li><li><span class='pre'>X</span> : Object {Allocation}<div class='sub-desc'><p>The input allocation contains vector x, supported elements type Element.F64.</p>\n</div></li><li><span class='pre'>incX</span> : Number<div class='sub-desc'><p>The increment for the elements of vector x, must be larger than zero.</p>\n</div></li></ul></div></div></div><div id='method-DTPMV' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='androidx.renderscript.ScriptIntrinsicBLAS'>androidx.renderscript.ScriptIntrinsicBLAS</span><br/><a href='source/ScriptIntrinsicBLAS.html#androidx-renderscript-ScriptIntrinsicBLAS-method-DTPMV' target='_blank' class='view-source'>view source</a></div><a href='#!/api/androidx.renderscript.ScriptIntrinsicBLAS-method-DTPMV' class='name expandable'>DTPMV</a>( <span class='pre'>Uplo, TransA, Diag, Ap, X, incX</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>DTPMV performs one of the matrix-vector operations\n x := Ax   or   x := A**Tx\n\n Details: http://www.netlib.org/lapack...</div><div class='long'><p>DTPMV performs one of the matrix-vector operations\n x := A<em>x   or   x := A**T</em>x</p>\n\n<p> Details: http://www.netlib.org/lapack/explore-html/dc/dcd/dtpmv_8f.html</p>\n\n<p> Note: For a N<em>N matrix, the input Allocation should be a 1D allocation of size dimX = N</em>(N+1)/2,\n       The following subroutine can is an example showing how to convert a UPPER trianglar matrix\n       'a' to packed matrix 'b'.\n           k = 0\n           for i in range(0, n):\n              for j in range(i, n):\n                  b[k++] = a[i, j]</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>Uplo</span> : Number<div class='sub-desc'><p>Specifies whether the matrix is an upper or lower triangular matrix.</p>\n</div></li><li><span class='pre'>TransA</span> : Number<div class='sub-desc'><p>The type of transpose applied to matrix A.</p>\n</div></li><li><span class='pre'>Diag</span> : Number<div class='sub-desc'><p>Specifies whether or not A is unit triangular.</p>\n</div></li><li><span class='pre'>Ap</span> : Object {Allocation}<div class='sub-desc'><p>The input allocation contains packed matrix A, supported elements type Element.F64.</p>\n</div></li><li><span class='pre'>X</span> : Object {Allocation}<div class='sub-desc'><p>The input allocation contains vector x, supported elements type Element.F64.</p>\n</div></li><li><span class='pre'>incX</span> : Number<div class='sub-desc'><p>The increment for the elements of vector x, must be larger than zero.</p>\n</div></li></ul></div></div></div><div id='method-DTPSV' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='androidx.renderscript.ScriptIntrinsicBLAS'>androidx.renderscript.ScriptIntrinsicBLAS</span><br/><a href='source/ScriptIntrinsicBLAS.html#androidx-renderscript-ScriptIntrinsicBLAS-method-DTPSV' target='_blank' class='view-source'>view source</a></div><a href='#!/api/androidx.renderscript.ScriptIntrinsicBLAS-method-DTPSV' class='name expandable'>DTPSV</a>( <span class='pre'>Uplo, TransA, Diag, Ap, X, incX</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>DTPSV solves one of the systems of equations\n Ax = b   or   A**Tx = b\n\n Details: http://www.netlib.org/lapack/explore...</div><div class='long'><p>DTPSV solves one of the systems of equations\n A<em>x = b   or   A**T</em>x = b</p>\n\n<p> Details: http://www.netlib.org/lapack/explore-html/d9/d84/dtpsv_8f.html</p>\n\n<p> Note: For a N<em>N matrix, the input Allocation should be a 1D allocation of size dimX = N</em>(N+1)/2,\n       The following subroutine can is an example showing how to convert a UPPER trianglar matrix\n       'a' to packed matrix 'b'.\n           k = 0\n           for i in range(0, n):\n              for j in range(i, n):\n                  b[k++] = a[i, j]</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>Uplo</span> : Number<div class='sub-desc'><p>Specifies whether the matrix is an upper or lower triangular matrix.</p>\n</div></li><li><span class='pre'>TransA</span> : Number<div class='sub-desc'><p>The type of transpose applied to matrix A.</p>\n</div></li><li><span class='pre'>Diag</span> : Number<div class='sub-desc'><p>Specifies whether or not A is unit triangular.</p>\n</div></li><li><span class='pre'>Ap</span> : Object {Allocation}<div class='sub-desc'><p>The input allocation contains packed matrix A, supported elements type Element.F64.</p>\n</div></li><li><span class='pre'>X</span> : Object {Allocation}<div class='sub-desc'><p>The input allocation contains vector x, supported elements type Element.F64.</p>\n</div></li><li><span class='pre'>incX</span> : Number<div class='sub-desc'><p>The increment for the elements of vector x, must be larger than zero.</p>\n</div></li></ul></div></div></div><div id='method-DTRMM' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='androidx.renderscript.ScriptIntrinsicBLAS'>androidx.renderscript.ScriptIntrinsicBLAS</span><br/><a href='source/ScriptIntrinsicBLAS.html#androidx-renderscript-ScriptIntrinsicBLAS-method-DTRMM' target='_blank' class='view-source'>view source</a></div><a href='#!/api/androidx.renderscript.ScriptIntrinsicBLAS-method-DTRMM' class='name expandable'>DTRMM</a>( <span class='pre'>Side, Uplo, TransA, Diag, alpha, A, B</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>DTRMM performs one of the matrix-matrix operations\n B := alphaop(A)B   or   B := alphaBop(A)\n op(A) is one of  op(A) ...</div><div class='long'><p>DTRMM performs one of the matrix-matrix operations\n B := alpha<em>op(A)</em>B   or   B := alpha<em>B</em>op(A)\n op(A) is one of  op(A) = A  or  op(A) = A**T</p>\n\n<p> Details: http://www.netlib.org/lapack/explore-html/dd/d19/dtrmm_8f.html</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>Side</span> : Number<div class='sub-desc'><p>Specifies whether the symmetric matrix A appears on the left or right.</p>\n</div></li><li><span class='pre'>Uplo</span> : Number<div class='sub-desc'><p>Specifies whether matrix A is upper or lower triangular.</p>\n</div></li><li><span class='pre'>TransA</span> : Number<div class='sub-desc'><p>The type of transpose applied to matrix A.</p>\n</div></li><li><span class='pre'>Diag</span> : Number<div class='sub-desc'><p>Specifies whether or not A is unit triangular.</p>\n</div></li><li><span class='pre'>alpha</span> : Number<div class='sub-desc'><p>The scalar alpha.</p>\n</div></li><li><span class='pre'>A</span> : Object {Allocation}<div class='sub-desc'><p>The input allocation contains matrix A, supported elements type Element.F64.</p>\n</div></li><li><span class='pre'>B</span> : Object {Allocation}<div class='sub-desc'><p>The input allocation contains matrix B, supported elements type Element.F64.</p>\n</div></li></ul></div></div></div><div id='method-DTRMV' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='androidx.renderscript.ScriptIntrinsicBLAS'>androidx.renderscript.ScriptIntrinsicBLAS</span><br/><a href='source/ScriptIntrinsicBLAS.html#androidx-renderscript-ScriptIntrinsicBLAS-method-DTRMV' target='_blank' class='view-source'>view source</a></div><a href='#!/api/androidx.renderscript.ScriptIntrinsicBLAS-method-DTRMV' class='name expandable'>DTRMV</a>( <span class='pre'>Uplo, TransA, Diag, A, X, incX</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>DTRMV performs one of the matrix-vector operations\n x := Ax   or   x := A**Tx\n\n Details: http://www.netlib.org/lapack...</div><div class='long'><p>DTRMV performs one of the matrix-vector operations\n x := A<em>x   or   x := A**T</em>x</p>\n\n<p> Details: http://www.netlib.org/lapack/explore-html/dc/d7e/dtrmv_8f.html</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>Uplo</span> : Number<div class='sub-desc'><p>Specifies whether the matrix is an upper or lower triangular matrix.</p>\n</div></li><li><span class='pre'>TransA</span> : Number<div class='sub-desc'><p>The type of transpose applied to matrix A.</p>\n</div></li><li><span class='pre'>Diag</span> : Number<div class='sub-desc'><p>Specifies whether or not A is unit triangular.</p>\n</div></li><li><span class='pre'>A</span> : Object {Allocation}<div class='sub-desc'><p>The input allocation contains matrix A, supported elements type Element.F64.</p>\n</div></li><li><span class='pre'>X</span> : Object {Allocation}<div class='sub-desc'><p>The input allocation contains vector x, supported elements type Element.F64.</p>\n</div></li><li><span class='pre'>incX</span> : Number<div class='sub-desc'><p>The increment for the elements of vector x, must be larger than zero.</p>\n</div></li></ul></div></div></div><div id='method-DTRSM' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='androidx.renderscript.ScriptIntrinsicBLAS'>androidx.renderscript.ScriptIntrinsicBLAS</span><br/><a href='source/ScriptIntrinsicBLAS.html#androidx-renderscript-ScriptIntrinsicBLAS-method-DTRSM' target='_blank' class='view-source'>view source</a></div><a href='#!/api/androidx.renderscript.ScriptIntrinsicBLAS-method-DTRSM' class='name expandable'>DTRSM</a>( <span class='pre'>Side, Uplo, TransA, Diag, alpha, A, B</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>DTRSM solves one of the matrix equations\n op(A)X := alphaB   or   Xop(A) := alphaB\n op(A) is one of  op(A) = A  or  o...</div><div class='long'><p>DTRSM solves one of the matrix equations\n op(A)<em>X := alpha</em>B   or   X<em>op(A) := alpha</em>B\n op(A) is one of  op(A) = A  or  op(A) = A**T</p>\n\n<p> Details: http://www.netlib.org/lapack/explore-html/de/da7/dtrsm_8f.html</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>Side</span> : Number<div class='sub-desc'><p>Specifies whether the symmetric matrix A appears on the left or right.</p>\n</div></li><li><span class='pre'>Uplo</span> : Number<div class='sub-desc'><p>Specifies whether matrix A is upper or lower triangular.</p>\n</div></li><li><span class='pre'>TransA</span> : Number<div class='sub-desc'><p>The type of transpose applied to matrix A.</p>\n</div></li><li><span class='pre'>Diag</span> : Number<div class='sub-desc'><p>Specifies whether or not A is unit triangular.</p>\n</div></li><li><span class='pre'>alpha</span> : Number<div class='sub-desc'><p>The scalar alpha.</p>\n</div></li><li><span class='pre'>A</span> : Object {Allocation}<div class='sub-desc'><p>The input allocation contains matrix A, supported elements type Element.F64.</p>\n</div></li><li><span class='pre'>B</span> : Object {Allocation}<div class='sub-desc'><p>The input allocation contains matrix B, supported elements type Element.F64.</p>\n</div></li></ul></div></div></div><div id='method-DTRSV' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='androidx.renderscript.ScriptIntrinsicBLAS'>androidx.renderscript.ScriptIntrinsicBLAS</span><br/><a href='source/ScriptIntrinsicBLAS.html#androidx-renderscript-ScriptIntrinsicBLAS-method-DTRSV' target='_blank' class='view-source'>view source</a></div><a href='#!/api/androidx.renderscript.ScriptIntrinsicBLAS-method-DTRSV' class='name expandable'>DTRSV</a>( <span class='pre'>Uplo, TransA, Diag, A, X, incX</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>DTRSV solves one of the systems of equations\n Ax = b   or   A**Tx = b\n\n Details: http://www.netlib.org/lapack/explore...</div><div class='long'><p>DTRSV solves one of the systems of equations\n A<em>x = b   or   A**T</em>x = b</p>\n\n<p> Details: http://www.netlib.org/lapack/explore-html/d6/d96/dtrsv_8f.html</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>Uplo</span> : Number<div class='sub-desc'><p>Specifies whether the matrix is an upper or lower triangular matrix.</p>\n</div></li><li><span class='pre'>TransA</span> : Number<div class='sub-desc'><p>The type of transpose applied to matrix A.</p>\n</div></li><li><span class='pre'>Diag</span> : Number<div class='sub-desc'><p>Specifies whether or not A is unit triangular.</p>\n</div></li><li><span class='pre'>A</span> : Object {Allocation}<div class='sub-desc'><p>The input allocation contains matrix A, supported elements type Element.F64.</p>\n</div></li><li><span class='pre'>X</span> : Object {Allocation}<div class='sub-desc'><p>The input allocation contains vector x, supported elements type Element.F64.</p>\n</div></li><li><span class='pre'>incX</span> : Number<div class='sub-desc'><p>The increment for the elements of vector x, must be larger than zero.</p>\n</div></li></ul></div></div></div><div id='method-SGBMV' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='androidx.renderscript.ScriptIntrinsicBLAS'>androidx.renderscript.ScriptIntrinsicBLAS</span><br/><a href='source/ScriptIntrinsicBLAS.html#androidx-renderscript-ScriptIntrinsicBLAS-method-SGBMV' target='_blank' class='view-source'>view source</a></div><a href='#!/api/androidx.renderscript.ScriptIntrinsicBLAS-method-SGBMV' class='name expandable'>SGBMV</a>( <span class='pre'>TransA, KL, KU, alpha, A, X, incX, beta, Y, incY</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>SGBMV performs one of the matrix-vector operations\n y := alphaAx + betay   or   y := alphaATx + betay\n\n Details: http...</div><div class='long'><p>SGBMV performs one of the matrix-vector operations\n y := alpha<em>A</em>x + beta<em>y   or   y := alpha</em>A<em><em>T</em>x + beta</em>y</p>\n\n<p> Details: http://www.netlib.org/lapack/explore-html/d6/d46/sgbmv_8f.html</p>\n\n<p> Note: For a M<em>N matrix, the input Allocation should also be of size M</em>N (dimY = M, dimX = N),\n       but only the region M*(KL+KU+1) will be referenced. The following subroutine can is an\n       example showing how to convert the original matrix 'a' to row-based band matrix 'b'.\n           for i in range(0, m):\n              for j in range(max(0, i-kl), min(i+ku+1, n)):\n                  b[i, j-i+kl] = a[i, j]</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>TransA</span> : Number<div class='sub-desc'><p>The type of transpose applied to matrix A.</p>\n</div></li><li><span class='pre'>KL</span> : Number<div class='sub-desc'><p>The number of sub-diagonals of the matrix A.</p>\n</div></li><li><span class='pre'>KU</span> : Number<div class='sub-desc'><p>The number of super-diagonals of the matrix A.</p>\n</div></li><li><span class='pre'>alpha</span> : Number<div class='sub-desc'><p>The scalar alpha.</p>\n</div></li><li><span class='pre'>A</span> : Object {Allocation}<div class='sub-desc'><p>The input allocation contains the band matrix A, supported elements type Element.F32.</p>\n</div></li><li><span class='pre'>X</span> : Object {Allocation}<div class='sub-desc'><p>The input allocation contains vector x, supported elements type Element.F32.</p>\n</div></li><li><span class='pre'>incX</span> : Number<div class='sub-desc'><p>The increment for the elements of vector x, must be larger than zero.</p>\n</div></li><li><span class='pre'>beta</span> : Number<div class='sub-desc'><p>The scalar beta.</p>\n</div></li><li><span class='pre'>Y</span> : Object {Allocation}<div class='sub-desc'><p>The input allocation contains vector y, supported elements type Element.F32.</p>\n</div></li><li><span class='pre'>incY</span> : Number<div class='sub-desc'><p>The increment for the elements of vector y, must be larger than zero.</p>\n</div></li></ul></div></div></div><div id='method-SGEMM' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='androidx.renderscript.ScriptIntrinsicBLAS'>androidx.renderscript.ScriptIntrinsicBLAS</span><br/><a href='source/ScriptIntrinsicBLAS.html#androidx-renderscript-ScriptIntrinsicBLAS-method-SGEMM' target='_blank' class='view-source'>view source</a></div><a href='#!/api/androidx.renderscript.ScriptIntrinsicBLAS-method-SGEMM' class='name expandable'>SGEMM</a>( <span class='pre'>TransA, TransB, alpha, A, B, beta, C</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>SGEMM performs one of the matrix-matrix operations\n C := alphaop(A)op(B) + beta*C   where op(X) is one of op(X) = X  ...</div><div class='long'><p>SGEMM performs one of the matrix-matrix operations\n C := alpha<em>op(A)</em>op(B) + beta*C   where op(X) is one of op(X) = X  or  op(X) = X**T</p>\n\n<p> Details: http://www.netlib.org/lapack/explore-html/d4/de2/sgemm_8f.html</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>TransA</span> : Number<div class='sub-desc'><p>The type of transpose applied to matrix A.</p>\n</div></li><li><span class='pre'>TransB</span> : Number<div class='sub-desc'><p>The type of transpose applied to matrix B.</p>\n</div></li><li><span class='pre'>alpha</span> : Number<div class='sub-desc'><p>The scalar alpha.</p>\n</div></li><li><span class='pre'>A</span> : Object {Allocation}<div class='sub-desc'><p>The input allocation contains matrix A, supported elements type Element.F32.</p>\n</div></li><li><span class='pre'>B</span> : Object {Allocation}<div class='sub-desc'><p>The input allocation contains matrix B, supported elements type Element.F32.</p>\n</div></li><li><span class='pre'>beta</span> : Number<div class='sub-desc'><p>The scalar beta.</p>\n</div></li><li><span class='pre'>C</span> : Object {Allocation}<div class='sub-desc'><p>The input allocation contains matrix C, supported elements type Element.F32.</p>\n</div></li></ul></div></div></div><div id='method-SGEMV' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='androidx.renderscript.ScriptIntrinsicBLAS'>androidx.renderscript.ScriptIntrinsicBLAS</span><br/><a href='source/ScriptIntrinsicBLAS.html#androidx-renderscript-ScriptIntrinsicBLAS-method-SGEMV' target='_blank' class='view-source'>view source</a></div><a href='#!/api/androidx.renderscript.ScriptIntrinsicBLAS-method-SGEMV' class='name expandable'>SGEMV</a>( <span class='pre'>TransA, alpha, A, X, incX, beta, Y, incY</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>SGEMV performs one of the matrix-vector operations\n y := alphaAx + betay   or   y := alphaATx + betay\n\n Details: http...</div><div class='long'><p>SGEMV performs one of the matrix-vector operations\n y := alpha<em>A</em>x + beta<em>y   or   y := alpha</em>A<em><em>T</em>x + beta</em>y</p>\n\n<p> Details: http://www.netlib.org/lapack/explore-html/db/d58/sgemv_8f.html</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>TransA</span> : Number<div class='sub-desc'><p>The type of transpose applied to matrix A.</p>\n</div></li><li><span class='pre'>alpha</span> : Number<div class='sub-desc'><p>The scalar alpha.</p>\n</div></li><li><span class='pre'>A</span> : Object {Allocation}<div class='sub-desc'><p>The input allocation contains matrix A, supported elements type Element.F32.</p>\n</div></li><li><span class='pre'>X</span> : Object {Allocation}<div class='sub-desc'><p>The input allocation contains vector x, supported elements type Element.F32.</p>\n</div></li><li><span class='pre'>incX</span> : Number<div class='sub-desc'><p>The increment for the elements of vector x, must be larger than zero.</p>\n</div></li><li><span class='pre'>beta</span> : Number<div class='sub-desc'><p>The scalar beta.</p>\n</div></li><li><span class='pre'>Y</span> : Object {Allocation}<div class='sub-desc'><p>The input allocation contains vector y, supported elements type Element.F32.</p>\n</div></li><li><span class='pre'>incY</span> : Number<div class='sub-desc'><p>The increment for the elements of vector y, must be larger than zero.</p>\n</div></li></ul></div></div></div><div id='method-SGER' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='androidx.renderscript.ScriptIntrinsicBLAS'>androidx.renderscript.ScriptIntrinsicBLAS</span><br/><a href='source/ScriptIntrinsicBLAS.html#androidx-renderscript-ScriptIntrinsicBLAS-method-SGER' target='_blank' class='view-source'>view source</a></div><a href='#!/api/androidx.renderscript.ScriptIntrinsicBLAS-method-SGER' class='name expandable'>SGER</a>( <span class='pre'>alpha, X, incX, Y, incY, A</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>SGER performs the rank 1 operation\n A := alphaxy**T + A\n\n Details: http://www.netlib.org/lapack/explore-html/db/d5c/s...</div><div class='long'><p>SGER performs the rank 1 operation\n A := alpha<em>x</em>y**T + A</p>\n\n<p> Details: http://www.netlib.org/lapack/explore-html/db/d5c/sger_8f.html</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>alpha</span> : Number<div class='sub-desc'><p>The scalar alpha.</p>\n</div></li><li><span class='pre'>X</span> : Object {Allocation}<div class='sub-desc'><p>The input allocation contains vector x, supported elements type Element.F32.</p>\n</div></li><li><span class='pre'>incX</span> : Number<div class='sub-desc'><p>The increment for the elements of vector x, must be larger than zero.</p>\n</div></li><li><span class='pre'>Y</span> : Object {Allocation}<div class='sub-desc'><p>The input allocation contains vector y, supported elements type Element.F32.</p>\n</div></li><li><span class='pre'>incY</span> : Number<div class='sub-desc'><p>The increment for the elements of vector y, must be larger than zero.</p>\n</div></li><li><span class='pre'>A</span> : Object {Allocation}<div class='sub-desc'><p>The input allocation contains matrix A, supported elements type Element.F32.</p>\n</div></li></ul></div></div></div><div id='method-SSBMV' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='androidx.renderscript.ScriptIntrinsicBLAS'>androidx.renderscript.ScriptIntrinsicBLAS</span><br/><a href='source/ScriptIntrinsicBLAS.html#androidx-renderscript-ScriptIntrinsicBLAS-method-SSBMV' target='_blank' class='view-source'>view source</a></div><a href='#!/api/androidx.renderscript.ScriptIntrinsicBLAS-method-SSBMV' class='name expandable'>SSBMV</a>( <span class='pre'>Uplo, K, alpha, A, X, incX, beta, Y, incY</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>SSBMV performs the matrix-vector operation\n y := alphaAx + beta*y\n\n Details: http://www.netlib.org/lapack/explore-htm...</div><div class='long'><p>SSBMV performs the matrix-vector operation\n y := alpha<em>A</em>x + beta*y</p>\n\n<p> Details: http://www.netlib.org/lapack/explore-html/d3/da1/ssbmv_8f.html</p>\n\n<p> Note: For a N<em>N matrix, the input Allocation should also be of size N</em>N (dimY = N, dimX = N),\n       but only the region N*(K+1) will be referenced. The following subroutine can is an\n       example showing how to convert a UPPER trianglar matrix 'a' to row-based band matrix 'b'.\n           for i in range(0, n):\n              for j in range(i, min(i+k+1, n)):\n                  b[i, j-i] = a[i, j]</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>Uplo</span> : Number<div class='sub-desc'><p>Specifies whether the upper or lower triangular part of the band matrix A is being supplied.</p>\n</div></li><li><span class='pre'>K</span> : Number<div class='sub-desc'><p>The number of off-diagonals of the matrix A</p>\n</div></li><li><span class='pre'>alpha</span> : Number<div class='sub-desc'><p>The scalar alpha.</p>\n</div></li><li><span class='pre'>A</span> : Object {Allocation}<div class='sub-desc'><p>The input allocation contains matrix A, supported elements type Element.F32.</p>\n</div></li><li><span class='pre'>X</span> : Object {Allocation}<div class='sub-desc'><p>The input allocation contains vector x, supported elements type Element.F32.</p>\n</div></li><li><span class='pre'>incX</span> : Number<div class='sub-desc'><p>The increment for the elements of vector x, must be larger than zero.</p>\n</div></li><li><span class='pre'>beta</span> : Number<div class='sub-desc'><p>The scalar beta.</p>\n</div></li><li><span class='pre'>Y</span> : Object {Allocation}<div class='sub-desc'><p>The input allocation contains vector y, supported elements type Element.F32.</p>\n</div></li><li><span class='pre'>incY</span> : Number<div class='sub-desc'><p>The increment for the elements of vector y, must be larger than zero.</p>\n</div></li></ul></div></div></div><div id='method-SSPMV' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='androidx.renderscript.ScriptIntrinsicBLAS'>androidx.renderscript.ScriptIntrinsicBLAS</span><br/><a href='source/ScriptIntrinsicBLAS.html#androidx-renderscript-ScriptIntrinsicBLAS-method-SSPMV' target='_blank' class='view-source'>view source</a></div><a href='#!/api/androidx.renderscript.ScriptIntrinsicBLAS-method-SSPMV' class='name expandable'>SSPMV</a>( <span class='pre'>Uplo, alpha, Ap, X, incX, beta, Y, incY</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>SSPMV performs the matrix-vector operation\n y := alphaAx + beta*y\n\n Details: http://www.netlib.org/lapack/explore-htm...</div><div class='long'><p>SSPMV performs the matrix-vector operation\n y := alpha<em>A</em>x + beta*y</p>\n\n<p> Details: http://www.netlib.org/lapack/explore-html/d8/d68/sspmv_8f.html</p>\n\n<p> Note: For a N<em>N matrix, the input Allocation should be a 1D allocation of size dimX = N</em>(N+1)/2,\n       The following subroutine can is an example showing how to convert a UPPER trianglar matrix\n       'a' to packed matrix 'b'.\n           k = 0\n           for i in range(0, n):\n              for j in range(i, n):\n                  b[k++] = a[i, j]</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>Uplo</span> : Number<div class='sub-desc'><p>Specifies whether the upper or lower triangular part of the matrix A is supplied in packed form.</p>\n</div></li><li><span class='pre'>alpha</span> : Number<div class='sub-desc'><p>The scalar alpha.</p>\n</div></li><li><span class='pre'>Ap</span> : Object {Allocation}<div class='sub-desc'><p>The input allocation contains matrix A, supported elements type Element.F32.</p>\n</div></li><li><span class='pre'>X</span> : Object {Allocation}<div class='sub-desc'><p>The input allocation contains vector x, supported elements type Element.F32.</p>\n</div></li><li><span class='pre'>incX</span> : Number<div class='sub-desc'><p>The increment for the elements of vector x, must be larger than zero.</p>\n</div></li><li><span class='pre'>beta</span> : Number<div class='sub-desc'><p>The scalar beta.</p>\n</div></li><li><span class='pre'>Y</span> : Object {Allocation}<div class='sub-desc'><p>The input allocation contains vector y, supported elements type Element.F32.</p>\n</div></li><li><span class='pre'>incY</span> : Number<div class='sub-desc'><p>The increment for the elements of vector y, must be larger than zero.</p>\n</div></li></ul></div></div></div><div id='method-SSPR' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='androidx.renderscript.ScriptIntrinsicBLAS'>androidx.renderscript.ScriptIntrinsicBLAS</span><br/><a href='source/ScriptIntrinsicBLAS.html#androidx-renderscript-ScriptIntrinsicBLAS-method-SSPR' target='_blank' class='view-source'>view source</a></div><a href='#!/api/androidx.renderscript.ScriptIntrinsicBLAS-method-SSPR' class='name expandable'>SSPR</a>( <span class='pre'>Uplo, alpha, X, incX, Ap</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>SSPR performs the rank 1 operation\n A := alphaxx**T + A\n\n Details: http://www.netlib.org/lapack/explore-html/d2/d9b/s...</div><div class='long'><p>SSPR performs the rank 1 operation\n A := alpha<em>x</em>x**T + A</p>\n\n<p> Details: http://www.netlib.org/lapack/explore-html/d2/d9b/sspr_8f.html</p>\n\n<p> Note: For a N<em>N matrix, the input Allocation should be a 1D allocation of size dimX = N</em>(N+1)/2,\n       The following subroutine can is an example showing how to convert a UPPER trianglar matrix\n       'a' to packed matrix 'b'.\n           k = 0\n           for i in range(0, n):\n              for j in range(i, n):\n                  b[k++] = a[i, j]</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>Uplo</span> : Number<div class='sub-desc'><p>Specifies whether the upper or lower triangular part is to be supplied in the packed form.</p>\n</div></li><li><span class='pre'>alpha</span> : Number<div class='sub-desc'><p>The scalar alpha.</p>\n</div></li><li><span class='pre'>X</span> : Object {Allocation}<div class='sub-desc'><p>The input allocation contains vector x, supported elements type Element.F32.</p>\n</div></li><li><span class='pre'>incX</span> : Number<div class='sub-desc'><p>The increment for the elements of vector x, must be larger than zero.</p>\n</div></li><li><span class='pre'>Ap</span> : Object {Allocation}<div class='sub-desc'><p>The input allocation contains matrix A, supported elements type Element.F32.</p>\n</div></li></ul></div></div></div><div id='method-SSPR2' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='androidx.renderscript.ScriptIntrinsicBLAS'>androidx.renderscript.ScriptIntrinsicBLAS</span><br/><a href='source/ScriptIntrinsicBLAS.html#androidx-renderscript-ScriptIntrinsicBLAS-method-SSPR2' target='_blank' class='view-source'>view source</a></div><a href='#!/api/androidx.renderscript.ScriptIntrinsicBLAS-method-SSPR2' class='name expandable'>SSPR2</a>( <span class='pre'>Uplo, alpha, X, incX, Y, incY, Ap</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>SSPR2 performs the symmetric rank 2 operation\n A := alphaxyT + alphayxT + A\n\n Details: http://www.netlib.org/lapack/e...</div><div class='long'><p>SSPR2 performs the symmetric rank 2 operation\n A := alpha<em>x</em>y<strong>T + alpha<em>y</em>x</strong>T + A</p>\n\n<p> Details: http://www.netlib.org/lapack/explore-html/db/d3e/sspr2_8f.html</p>\n\n<p> Note: For a N<em>N matrix, the input Allocation should be a 1D allocation of size dimX = N</em>(N+1)/2,\n       The following subroutine can is an example showing how to convert a UPPER trianglar matrix\n       'a' to packed matrix 'b'.\n           k = 0\n           for i in range(0, n):\n              for j in range(i, n):\n                  b[k++] = a[i, j]</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>Uplo</span> : Number<div class='sub-desc'><p>Specifies whether the upper or lower triangular part is to be supplied in the packed form.</p>\n</div></li><li><span class='pre'>alpha</span> : Number<div class='sub-desc'><p>The scalar alpha.</p>\n</div></li><li><span class='pre'>X</span> : Object {Allocation}<div class='sub-desc'><p>The input allocation contains vector x, supported elements type Element.F32.</p>\n</div></li><li><span class='pre'>incX</span> : Number<div class='sub-desc'><p>The increment for the elements of vector x, must be larger than zero.</p>\n</div></li><li><span class='pre'>Y</span> : Object {Allocation}<div class='sub-desc'><p>The input allocation contains vector y, supported elements type Element.F32.</p>\n</div></li><li><span class='pre'>incY</span> : Number<div class='sub-desc'><p>The increment for the elements of vector y, must be larger than zero.</p>\n</div></li><li><span class='pre'>Ap</span> : Object {Allocation}<div class='sub-desc'><p>The input allocation contains matrix A, supported elements type Element.F32.</p>\n</div></li></ul></div></div></div><div id='method-SSYMM' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='androidx.renderscript.ScriptIntrinsicBLAS'>androidx.renderscript.ScriptIntrinsicBLAS</span><br/><a href='source/ScriptIntrinsicBLAS.html#androidx-renderscript-ScriptIntrinsicBLAS-method-SSYMM' target='_blank' class='view-source'>view source</a></div><a href='#!/api/androidx.renderscript.ScriptIntrinsicBLAS-method-SSYMM' class='name expandable'>SSYMM</a>( <span class='pre'>Side, Uplo, alpha, A, B, beta, C</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>SSYMM performs one of the matrix-matrix operations\n C := alphaAB + betaC   or   C := alphaBA + betaC\n\n Details: http:...</div><div class='long'><p>SSYMM performs one of the matrix-matrix operations\n C := alpha<em>A</em>B + beta<em>C   or   C := alpha</em>B<em>A + beta</em>C</p>\n\n<p> Details: http://www.netlib.org/lapack/explore-html/d7/d42/ssymm_8f.html</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>Side</span> : Number<div class='sub-desc'><p>Specifies whether the symmetric matrix A appears on the left or right.</p>\n</div></li><li><span class='pre'>Uplo</span> : Number<div class='sub-desc'><p>Specifies whether the upper or lower triangular part is to be referenced.</p>\n</div></li><li><span class='pre'>alpha</span> : Number<div class='sub-desc'><p>The scalar alpha.</p>\n</div></li><li><span class='pre'>A</span> : Object {Allocation}<div class='sub-desc'><p>The input allocation contains matrix A, supported elements type Element.F32.</p>\n</div></li><li><span class='pre'>B</span> : Object {Allocation}<div class='sub-desc'><p>The input allocation contains matrix B, supported elements type Element.F32.</p>\n</div></li><li><span class='pre'>beta</span> : Number<div class='sub-desc'><p>The scalar beta.</p>\n</div></li><li><span class='pre'>C</span> : Object {Allocation}<div class='sub-desc'><p>The input allocation contains matrix C, supported elements type Element.F32.</p>\n</div></li></ul></div></div></div><div id='method-SSYMV' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='androidx.renderscript.ScriptIntrinsicBLAS'>androidx.renderscript.ScriptIntrinsicBLAS</span><br/><a href='source/ScriptIntrinsicBLAS.html#androidx-renderscript-ScriptIntrinsicBLAS-method-SSYMV' target='_blank' class='view-source'>view source</a></div><a href='#!/api/androidx.renderscript.ScriptIntrinsicBLAS-method-SSYMV' class='name expandable'>SSYMV</a>( <span class='pre'>Uplo, alpha, A, X, incX, beta, Y, incY</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>SSYMV performs the matrix-vector operation\n y := alphaAx + beta*y\n\n Details: http://www.netlib.org/lapack/explore-htm...</div><div class='long'><p>SSYMV performs the matrix-vector operation\n y := alpha<em>A</em>x + beta*y</p>\n\n<p> Details: http://www.netlib.org/lapack/explore-html/d2/d94/ssymv_8f.html</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>Uplo</span> : Number<div class='sub-desc'><p>Specifies whether the upper or lower triangular part is to be referenced.</p>\n</div></li><li><span class='pre'>alpha</span> : Number<div class='sub-desc'><p>The scalar alpha.</p>\n</div></li><li><span class='pre'>A</span> : Object {Allocation}<div class='sub-desc'><p>The input allocation contains matrix A, supported elements type Element.F32.</p>\n</div></li><li><span class='pre'>X</span> : Object {Allocation}<div class='sub-desc'><p>The input allocation contains vector x, supported elements type Element.F32.</p>\n</div></li><li><span class='pre'>incX</span> : Number<div class='sub-desc'><p>The increment for the elements of vector x, must be larger than zero.</p>\n</div></li><li><span class='pre'>beta</span> : Number<div class='sub-desc'><p>The scalar beta.</p>\n</div></li><li><span class='pre'>Y</span> : Object {Allocation}<div class='sub-desc'><p>The input allocation contains vector y, supported elements type Element.F32.</p>\n</div></li><li><span class='pre'>incY</span> : Number<div class='sub-desc'><p>The increment for the elements of vector y, must be larger than zero.</p>\n</div></li></ul></div></div></div><div id='method-SSYR' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='androidx.renderscript.ScriptIntrinsicBLAS'>androidx.renderscript.ScriptIntrinsicBLAS</span><br/><a href='source/ScriptIntrinsicBLAS.html#androidx-renderscript-ScriptIntrinsicBLAS-method-SSYR' target='_blank' class='view-source'>view source</a></div><a href='#!/api/androidx.renderscript.ScriptIntrinsicBLAS-method-SSYR' class='name expandable'>SSYR</a>( <span class='pre'>Uplo, alpha, X, incX, A</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>SSYR performs the rank 1 operation\n A := alphaxx**T + A\n\n Details: http://www.netlib.org/lapack/explore-html/d6/dac/s...</div><div class='long'><p>SSYR performs the rank 1 operation\n A := alpha<em>x</em>x**T + A</p>\n\n<p> Details: http://www.netlib.org/lapack/explore-html/d6/dac/ssyr_8f.html</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>Uplo</span> : Number<div class='sub-desc'><p>Specifies whether the upper or lower triangular part is to be referenced.</p>\n</div></li><li><span class='pre'>alpha</span> : Number<div class='sub-desc'><p>The scalar alpha.</p>\n</div></li><li><span class='pre'>X</span> : Object {Allocation}<div class='sub-desc'><p>The input allocation contains vector x, supported elements type Element.F32.</p>\n</div></li><li><span class='pre'>incX</span> : Number<div class='sub-desc'><p>The increment for the elements of vector x, must be larger than zero.</p>\n</div></li><li><span class='pre'>A</span> : Object {Allocation}<div class='sub-desc'><p>The input allocation contains matrix A, supported elements type Element.F32.</p>\n</div></li></ul></div></div></div><div id='method-SSYR2' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='androidx.renderscript.ScriptIntrinsicBLAS'>androidx.renderscript.ScriptIntrinsicBLAS</span><br/><a href='source/ScriptIntrinsicBLAS.html#androidx-renderscript-ScriptIntrinsicBLAS-method-SSYR2' target='_blank' class='view-source'>view source</a></div><a href='#!/api/androidx.renderscript.ScriptIntrinsicBLAS-method-SSYR2' class='name expandable'>SSYR2</a>( <span class='pre'>Uplo, alpha, X, incX, Y, incY, A</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>SSYR2 performs the symmetric rank 2 operation\n A := alphaxyT + alphayxT + A\n\n Details: http://www.netlib.org/lapack/e...</div><div class='long'><p>SSYR2 performs the symmetric rank 2 operation\n A := alpha<em>x</em>y<strong>T + alpha<em>y</em>x</strong>T + A</p>\n\n<p> Details: http://www.netlib.org/lapack/explore-html/db/d99/ssyr2_8f.html</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>Uplo</span> : Number<div class='sub-desc'><p>Specifies whether the upper or lower triangular part is to be referenced.</p>\n</div></li><li><span class='pre'>alpha</span> : Number<div class='sub-desc'><p>The scalar alpha.</p>\n</div></li><li><span class='pre'>X</span> : Object {Allocation}<div class='sub-desc'><p>The input allocation contains vector x, supported elements type Element.F32.</p>\n</div></li><li><span class='pre'>incX</span> : Number<div class='sub-desc'><p>The increment for the elements of vector x, must be larger than zero.</p>\n</div></li><li><span class='pre'>Y</span> : Object {Allocation}<div class='sub-desc'><p>The input allocation contains vector y, supported elements type Element.F32.</p>\n</div></li><li><span class='pre'>incY</span> : Number<div class='sub-desc'><p>The increment for the elements of vector y, must be larger than zero.</p>\n</div></li><li><span class='pre'>A</span> : Object {Allocation}<div class='sub-desc'><p>The input allocation contains matrix A, supported elements type Element.F32.</p>\n</div></li></ul></div></div></div><div id='method-SSYR2K' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='androidx.renderscript.ScriptIntrinsicBLAS'>androidx.renderscript.ScriptIntrinsicBLAS</span><br/><a href='source/ScriptIntrinsicBLAS.html#androidx-renderscript-ScriptIntrinsicBLAS-method-SSYR2K' target='_blank' class='view-source'>view source</a></div><a href='#!/api/androidx.renderscript.ScriptIntrinsicBLAS-method-SSYR2K' class='name expandable'>SSYR2K</a>( <span class='pre'>Uplo, Trans, alpha, A, B, beta, C</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>SSYR2K performs one of the symmetric rank 2k operations\n C := alphaABT + alphaBAT + betaC   or   C := alphaATB + alph...</div><div class='long'><p>SSYR2K performs one of the symmetric rank 2k operations\n C := alpha<em>A</em>B<strong>T + alpha<em>B</em>A</strong>T + beta<em>C   or   C := alpha</em>A<strong>T<em>B + alpha</em>B</strong>T<em>A + beta</em>C</p>\n\n<p> Details: http://www.netlib.org/lapack/explore-html/df/d3d/ssyr2k_8f.html</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>Uplo</span> : Number<div class='sub-desc'><p>Specifies whether the upper or lower triangular part of C is to be referenced.</p>\n</div></li><li><span class='pre'>Trans</span> : Number<div class='sub-desc'><p>The type of transpose applied to the operation.</p>\n</div></li><li><span class='pre'>alpha</span> : Number<div class='sub-desc'><p>The scalar alpha.</p>\n</div></li><li><span class='pre'>A</span> : Object {Allocation}<div class='sub-desc'><p>The input allocation contains matrix A, supported elements type Element.F32.</p>\n</div></li><li><span class='pre'>B</span> : Object {Allocation}<div class='sub-desc'><p>The input allocation contains matrix B, supported elements type Element.F32.</p>\n</div></li><li><span class='pre'>beta</span> : Number<div class='sub-desc'><p>The scalar beta.</p>\n</div></li><li><span class='pre'>C</span> : Object {Allocation}<div class='sub-desc'><p>The input allocation contains matrix C, supported elements type Element.F32.</p>\n</div></li></ul></div></div></div><div id='method-SSYRK' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='androidx.renderscript.ScriptIntrinsicBLAS'>androidx.renderscript.ScriptIntrinsicBLAS</span><br/><a href='source/ScriptIntrinsicBLAS.html#androidx-renderscript-ScriptIntrinsicBLAS-method-SSYRK' target='_blank' class='view-source'>view source</a></div><a href='#!/api/androidx.renderscript.ScriptIntrinsicBLAS-method-SSYRK' class='name expandable'>SSYRK</a>( <span class='pre'>Uplo, Trans, alpha, A, beta, C</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>SSYRK performs one of the symmetric rank k operations\n C := alphaAAT + betaC   or   C := alphaATA + betaC\n\n Details: ...</div><div class='long'><p>SSYRK performs one of the symmetric rank k operations\n C := alpha<em>A</em>A<strong>T + beta<em>C   or   C := alpha</em>A</strong>T<em>A + beta</em>C</p>\n\n<p> Details: http://www.netlib.org/lapack/explore-html/d0/d40/ssyrk_8f.html</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>Uplo</span> : Number<div class='sub-desc'><p>Specifies whether the upper or lower triangular part of C is to be referenced.</p>\n</div></li><li><span class='pre'>Trans</span> : Number<div class='sub-desc'><p>The type of transpose applied to the operation.</p>\n</div></li><li><span class='pre'>alpha</span> : Number<div class='sub-desc'><p>The scalar alpha.</p>\n</div></li><li><span class='pre'>A</span> : Object {Allocation}<div class='sub-desc'><p>The input allocation contains matrix A, supported elements type Element.F32.</p>\n</div></li><li><span class='pre'>beta</span> : Number<div class='sub-desc'><p>The scalar beta.</p>\n</div></li><li><span class='pre'>C</span> : Object {Allocation}<div class='sub-desc'><p>The input allocation contains matrix C, supported elements type Element.F32.</p>\n</div></li></ul></div></div></div><div id='method-STBMV' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='androidx.renderscript.ScriptIntrinsicBLAS'>androidx.renderscript.ScriptIntrinsicBLAS</span><br/><a href='source/ScriptIntrinsicBLAS.html#androidx-renderscript-ScriptIntrinsicBLAS-method-STBMV' target='_blank' class='view-source'>view source</a></div><a href='#!/api/androidx.renderscript.ScriptIntrinsicBLAS-method-STBMV' class='name expandable'>STBMV</a>( <span class='pre'>Uplo, TransA, Diag, K, A, X, incX</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>STBMV performs one of the matrix-vector operations\n x := Ax   or   x := A**Tx\n\n Details: http://www.netlib.org/lapack...</div><div class='long'><p>STBMV performs one of the matrix-vector operations\n x := A<em>x   or   x := A**T</em>x</p>\n\n<p> Details: http://www.netlib.org/lapack/explore-html/d6/d7d/stbmv_8f.html</p>\n\n<p> Note: For a N<em>N matrix, the input Allocation should also be of size N</em>N (dimY = N, dimX = N),\n       but only the region N*(K+1) will be referenced. The following subroutine can is an\n       example showing how to convert a UPPER trianglar matrix 'a' to row-based band matrix 'b'.\n           for i in range(0, n):\n              for j in range(i, min(i+k+1, n)):\n                  b[i, j-i] = a[i, j]</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>Uplo</span> : Number<div class='sub-desc'><p>Specifies whether the matrix is an upper or lower triangular matrix.</p>\n</div></li><li><span class='pre'>TransA</span> : Number<div class='sub-desc'><p>The type of transpose applied to matrix A.</p>\n</div></li><li><span class='pre'>Diag</span> : Number<div class='sub-desc'><p>Specifies whether or not A is unit triangular.</p>\n</div></li><li><span class='pre'>K</span> : Number<div class='sub-desc'><p>The number of off-diagonals of the matrix A</p>\n</div></li><li><span class='pre'>A</span> : Object {Allocation}<div class='sub-desc'><p>The input allocation contains matrix A, supported elements type Element.F32.</p>\n</div></li><li><span class='pre'>X</span> : Object {Allocation}<div class='sub-desc'><p>The input allocation contains vector x, supported elements type Element.F32.</p>\n</div></li><li><span class='pre'>incX</span> : Number<div class='sub-desc'><p>The increment for the elements of vector x, must be larger than zero.</p>\n</div></li></ul></div></div></div><div id='method-STBSV' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='androidx.renderscript.ScriptIntrinsicBLAS'>androidx.renderscript.ScriptIntrinsicBLAS</span><br/><a href='source/ScriptIntrinsicBLAS.html#androidx-renderscript-ScriptIntrinsicBLAS-method-STBSV' target='_blank' class='view-source'>view source</a></div><a href='#!/api/androidx.renderscript.ScriptIntrinsicBLAS-method-STBSV' class='name expandable'>STBSV</a>( <span class='pre'>Uplo, TransA, Diag, K, A, X, incX</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>STBSV solves one of the systems of equations\n Ax = b   or   A**Tx = b\n\n Details: http://www.netlib.org/lapack/explore...</div><div class='long'><p>STBSV solves one of the systems of equations\n A<em>x = b   or   A**T</em>x = b</p>\n\n<p> Details: http://www.netlib.org/lapack/explore-html/d0/d1f/stbsv_8f.html</p>\n\n<p> Note: For a N<em>N matrix, the input Allocation should also be of size N</em>N (dimY = N, dimX = N),\n       but only the region N*(K+1) will be referenced. The following subroutine can is an\n       example showing how to convert a UPPER trianglar matrix 'a' to row-based band matrix 'b'.\n           for i in range(0, n):\n              for j in range(i, min(i+k+1, n)):\n                  b[i, j-i] = a[i, j]</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>Uplo</span> : Number<div class='sub-desc'><p>Specifies whether the matrix is an upper or lower triangular matrix.</p>\n</div></li><li><span class='pre'>TransA</span> : Number<div class='sub-desc'><p>The type of transpose applied to matrix A.</p>\n</div></li><li><span class='pre'>Diag</span> : Number<div class='sub-desc'><p>Specifies whether or not A is unit triangular.</p>\n</div></li><li><span class='pre'>K</span> : Number<div class='sub-desc'><p>The number of off-diagonals of the matrix A</p>\n</div></li><li><span class='pre'>A</span> : Object {Allocation}<div class='sub-desc'><p>The input allocation contains matrix A, supported elements type Element.F32.</p>\n</div></li><li><span class='pre'>X</span> : Object {Allocation}<div class='sub-desc'><p>The input allocation contains vector x, supported elements type Element.F32.</p>\n</div></li><li><span class='pre'>incX</span> : Number<div class='sub-desc'><p>The increment for the elements of vector x, must be larger than zero.</p>\n</div></li></ul></div></div></div><div id='method-STPMV' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='androidx.renderscript.ScriptIntrinsicBLAS'>androidx.renderscript.ScriptIntrinsicBLAS</span><br/><a href='source/ScriptIntrinsicBLAS.html#androidx-renderscript-ScriptIntrinsicBLAS-method-STPMV' target='_blank' class='view-source'>view source</a></div><a href='#!/api/androidx.renderscript.ScriptIntrinsicBLAS-method-STPMV' class='name expandable'>STPMV</a>( <span class='pre'>Uplo, TransA, Diag, Ap, X, incX</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>STPMV performs one of the matrix-vector operations\n x := Ax   or   x := A**Tx\n\n Details: http://www.netlib.org/lapack...</div><div class='long'><p>STPMV performs one of the matrix-vector operations\n x := A<em>x   or   x := A**T</em>x</p>\n\n<p> Details: http://www.netlib.org/lapack/explore-html/db/db1/stpmv_8f.html</p>\n\n<p> Note: For a N<em>N matrix, the input Allocation should be a 1D allocation of size dimX = N</em>(N+1)/2,\n       The following subroutine can is an example showing how to convert a UPPER trianglar matrix\n       'a' to packed matrix 'b'.\n           k = 0\n           for i in range(0, n):\n              for j in range(i, n):\n                  b[k++] = a[i, j]</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>Uplo</span> : Number<div class='sub-desc'><p>Specifies whether the matrix is an upper or lower triangular matrix.</p>\n</div></li><li><span class='pre'>TransA</span> : Number<div class='sub-desc'><p>The type of transpose applied to matrix A.</p>\n</div></li><li><span class='pre'>Diag</span> : Number<div class='sub-desc'><p>Specifies whether or not A is unit triangular.</p>\n</div></li><li><span class='pre'>Ap</span> : Object {Allocation}<div class='sub-desc'><p>The input allocation contains packed matrix A, supported elements type Element.F32.</p>\n</div></li><li><span class='pre'>X</span> : Object {Allocation}<div class='sub-desc'><p>The input allocation contains vector x, supported elements type Element.F32.</p>\n</div></li><li><span class='pre'>incX</span> : Number<div class='sub-desc'><p>The increment for the elements of vector x, must be larger than zero.</p>\n</div></li></ul></div></div></div><div id='method-STPSV' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='androidx.renderscript.ScriptIntrinsicBLAS'>androidx.renderscript.ScriptIntrinsicBLAS</span><br/><a href='source/ScriptIntrinsicBLAS.html#androidx-renderscript-ScriptIntrinsicBLAS-method-STPSV' target='_blank' class='view-source'>view source</a></div><a href='#!/api/androidx.renderscript.ScriptIntrinsicBLAS-method-STPSV' class='name expandable'>STPSV</a>( <span class='pre'>Uplo, TransA, Diag, Ap, X, incX</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>STPSV solves one of the systems of equations\n Ax = b   or   A**Tx = b\n\n Details: http://www.netlib.org/lapack/explore...</div><div class='long'><p>STPSV solves one of the systems of equations\n A<em>x = b   or   A**T</em>x = b</p>\n\n<p> Details: http://www.netlib.org/lapack/explore-html/d0/d7c/stpsv_8f.html</p>\n\n<p> Note: For a N<em>N matrix, the input Allocation should be a 1D allocation of size dimX = N</em>(N+1)/2,\n       The following subroutine can is an example showing how to convert a UPPER trianglar matrix\n       'a' to packed matrix 'b'.\n           k = 0\n           for i in range(0, n):\n              for j in range(i, n):\n                  b[k++] = a[i, j]</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>Uplo</span> : Number<div class='sub-desc'><p>Specifies whether the matrix is an upper or lower triangular matrix.</p>\n</div></li><li><span class='pre'>TransA</span> : Number<div class='sub-desc'><p>The type of transpose applied to matrix A.</p>\n</div></li><li><span class='pre'>Diag</span> : Number<div class='sub-desc'><p>Specifies whether or not A is unit triangular.</p>\n</div></li><li><span class='pre'>Ap</span> : Object {Allocation}<div class='sub-desc'><p>The input allocation contains packed matrix A, supported elements type Element.F32.</p>\n</div></li><li><span class='pre'>X</span> : Object {Allocation}<div class='sub-desc'><p>The input allocation contains vector x, supported elements type Element.F32.</p>\n</div></li><li><span class='pre'>incX</span> : Number<div class='sub-desc'><p>The increment for the elements of vector x, must be larger than zero.</p>\n</div></li></ul></div></div></div><div id='method-STRMM' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='androidx.renderscript.ScriptIntrinsicBLAS'>androidx.renderscript.ScriptIntrinsicBLAS</span><br/><a href='source/ScriptIntrinsicBLAS.html#androidx-renderscript-ScriptIntrinsicBLAS-method-STRMM' target='_blank' class='view-source'>view source</a></div><a href='#!/api/androidx.renderscript.ScriptIntrinsicBLAS-method-STRMM' class='name expandable'>STRMM</a>( <span class='pre'>Side, Uplo, TransA, Diag, alpha, A, B</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>STRMM performs one of the matrix-matrix operations\n B := alphaop(A)B   or   B := alphaBop(A)\n op(A) is one of  op(A) ...</div><div class='long'><p>STRMM performs one of the matrix-matrix operations\n B := alpha<em>op(A)</em>B   or   B := alpha<em>B</em>op(A)\n op(A) is one of  op(A) = A  or  op(A) = A**T</p>\n\n<p> Details: http://www.netlib.org/lapack/explore-html/df/d01/strmm_8f.html</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>Side</span> : Number<div class='sub-desc'><p>Specifies whether the symmetric matrix A appears on the left or right.</p>\n</div></li><li><span class='pre'>Uplo</span> : Number<div class='sub-desc'><p>Specifies whether matrix A is upper or lower triangular.</p>\n</div></li><li><span class='pre'>TransA</span> : Number<div class='sub-desc'><p>The type of transpose applied to matrix A.</p>\n</div></li><li><span class='pre'>Diag</span> : Number<div class='sub-desc'><p>Specifies whether or not A is unit triangular.</p>\n</div></li><li><span class='pre'>alpha</span> : Number<div class='sub-desc'><p>The scalar alpha.</p>\n</div></li><li><span class='pre'>A</span> : Object {Allocation}<div class='sub-desc'><p>The input allocation contains matrix A, supported elements type Element.F32.</p>\n</div></li><li><span class='pre'>B</span> : Object {Allocation}<div class='sub-desc'><p>The input allocation contains matrix B, supported elements type Element.F32.</p>\n</div></li></ul></div></div></div><div id='method-STRMV' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='androidx.renderscript.ScriptIntrinsicBLAS'>androidx.renderscript.ScriptIntrinsicBLAS</span><br/><a href='source/ScriptIntrinsicBLAS.html#androidx-renderscript-ScriptIntrinsicBLAS-method-STRMV' target='_blank' class='view-source'>view source</a></div><a href='#!/api/androidx.renderscript.ScriptIntrinsicBLAS-method-STRMV' class='name expandable'>STRMV</a>( <span class='pre'>Uplo, TransA, Diag, A, X, incX</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>STRMV performs one of the matrix-vector operations\n x := Ax   or   x := A**Tx\n\n Details: http://www.netlib.org/lapack...</div><div class='long'><p>STRMV performs one of the matrix-vector operations\n x := A<em>x   or   x := A**T</em>x</p>\n\n<p> Details: http://www.netlib.org/lapack/explore-html/de/d45/strmv_8f.html</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>Uplo</span> : Number<div class='sub-desc'><p>Specifies whether the matrix is an upper or lower triangular matrix.</p>\n</div></li><li><span class='pre'>TransA</span> : Number<div class='sub-desc'><p>The type of transpose applied to matrix A.</p>\n</div></li><li><span class='pre'>Diag</span> : Number<div class='sub-desc'><p>Specifies whether or not A is unit triangular.</p>\n</div></li><li><span class='pre'>A</span> : Object {Allocation}<div class='sub-desc'><p>The input allocation contains matrix A, supported elements type Element.F32.</p>\n</div></li><li><span class='pre'>X</span> : Object {Allocation}<div class='sub-desc'><p>The input allocation contains vector x, supported elements type Element.F32.</p>\n</div></li><li><span class='pre'>incX</span> : Number<div class='sub-desc'><p>The increment for the elements of vector x, must be larger than zero.</p>\n</div></li></ul></div></div></div><div id='method-STRSM' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='androidx.renderscript.ScriptIntrinsicBLAS'>androidx.renderscript.ScriptIntrinsicBLAS</span><br/><a href='source/ScriptIntrinsicBLAS.html#androidx-renderscript-ScriptIntrinsicBLAS-method-STRSM' target='_blank' class='view-source'>view source</a></div><a href='#!/api/androidx.renderscript.ScriptIntrinsicBLAS-method-STRSM' class='name expandable'>STRSM</a>( <span class='pre'>Side, Uplo, TransA, Diag, alpha, A, B</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>STRSM solves one of the matrix equations\n op(A)X := alphaB   or   Xop(A) := alphaB\n op(A) is one of  op(A) = A  or  o...</div><div class='long'><p>STRSM solves one of the matrix equations\n op(A)<em>X := alpha</em>B   or   X<em>op(A) := alpha</em>B\n op(A) is one of  op(A) = A  or  op(A) = A**T</p>\n\n<p> Details: http://www.netlib.org/lapack/explore-html/d2/d8b/strsm_8f.html</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>Side</span> : Number<div class='sub-desc'><p>Specifies whether the symmetric matrix A appears on the left or right.</p>\n</div></li><li><span class='pre'>Uplo</span> : Number<div class='sub-desc'><p>Specifies whether matrix A is upper or lower triangular.</p>\n</div></li><li><span class='pre'>TransA</span> : Number<div class='sub-desc'><p>The type of transpose applied to matrix A.</p>\n</div></li><li><span class='pre'>Diag</span> : Number<div class='sub-desc'><p>Specifies whether or not A is unit triangular.</p>\n</div></li><li><span class='pre'>alpha</span> : Number<div class='sub-desc'><p>The scalar alpha.</p>\n</div></li><li><span class='pre'>A</span> : Object {Allocation}<div class='sub-desc'><p>The input allocation contains matrix A, supported elements type Element.F32.</p>\n</div></li><li><span class='pre'>B</span> : Object {Allocation}<div class='sub-desc'><p>The input allocation contains matrix B, supported elements type Element.F32.</p>\n</div></li></ul></div></div></div><div id='method-STRSV' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='androidx.renderscript.ScriptIntrinsicBLAS'>androidx.renderscript.ScriptIntrinsicBLAS</span><br/><a href='source/ScriptIntrinsicBLAS.html#androidx-renderscript-ScriptIntrinsicBLAS-method-STRSV' target='_blank' class='view-source'>view source</a></div><a href='#!/api/androidx.renderscript.ScriptIntrinsicBLAS-method-STRSV' class='name expandable'>STRSV</a>( <span class='pre'>Uplo, TransA, Diag, A, X, incX</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>STRSV solves one of the systems of equations\n Ax = b   or   A**Tx = b\n\n Details: http://www.netlib.org/lapack/explore...</div><div class='long'><p>STRSV solves one of the systems of equations\n A<em>x = b   or   A**T</em>x = b</p>\n\n<p> Details: http://www.netlib.org/lapack/explore-html/d0/d2a/strsv_8f.html</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>Uplo</span> : Number<div class='sub-desc'><p>Specifies whether the matrix is an upper or lower triangular matrix.</p>\n</div></li><li><span class='pre'>TransA</span> : Number<div class='sub-desc'><p>The type of transpose applied to matrix A.</p>\n</div></li><li><span class='pre'>Diag</span> : Number<div class='sub-desc'><p>Specifies whether or not A is unit triangular.</p>\n</div></li><li><span class='pre'>A</span> : Object {Allocation}<div class='sub-desc'><p>The input allocation contains matrix A, supported elements type Element.F32.</p>\n</div></li><li><span class='pre'>X</span> : Object {Allocation}<div class='sub-desc'><p>The input allocation contains vector x, supported elements type Element.F32.</p>\n</div></li><li><span class='pre'>incX</span> : Number<div class='sub-desc'><p>The increment for the elements of vector x, must be larger than zero.</p>\n</div></li></ul></div></div></div><div id='method-ZGBMV' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='androidx.renderscript.ScriptIntrinsicBLAS'>androidx.renderscript.ScriptIntrinsicBLAS</span><br/><a href='source/ScriptIntrinsicBLAS.html#androidx-renderscript-ScriptIntrinsicBLAS-method-ZGBMV' target='_blank' class='view-source'>view source</a></div><a href='#!/api/androidx.renderscript.ScriptIntrinsicBLAS-method-ZGBMV' class='name expandable'>ZGBMV</a>( <span class='pre'>TransA, KL, KU, alpha, A, X, incX, beta, Y, incY</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>ZGBMV performs one of the matrix-vector operations\n y := alphaAx + betay   or   y := alphaATx + betay   or   y := alp...</div><div class='long'><p>ZGBMV performs one of the matrix-vector operations\n y := alpha<em>A</em>x + beta<em>y   or   y := alpha</em>A<strong>T<em>x + beta</em>y   or   y := alpha*A</strong>H<em>x + beta</em>y</p>\n\n<p> Details: http://www.netlib.org/lapack/explore-html/d9/d46/zgbmv_8f.html</p>\n\n<p> Note: For a M<em>N matrix, the input Allocation should also be of size M</em>N (dimY = M, dimX = N),\n       but only the region M*(KL+KU+1) will be referenced. The following subroutine can is an\n       example showing how to convert the original matrix 'a' to row-based band matrix 'b'.\n           for i in range(0, m):\n              for j in range(max(0, i-kl), min(i+ku+1, n)):\n                  b[i, j-i+kl] = a[i, j]</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>TransA</span> : Number<div class='sub-desc'><p>The type of transpose applied to matrix A.</p>\n</div></li><li><span class='pre'>KL</span> : Number<div class='sub-desc'><p>The number of sub-diagonals of the matrix A.</p>\n</div></li><li><span class='pre'>KU</span> : Number<div class='sub-desc'><p>The number of super-diagonals of the matrix A.</p>\n</div></li><li><span class='pre'>alpha</span> : Object {Double2}<div class='sub-desc'><p>The scalar alpha.</p>\n</div></li><li><span class='pre'>A</span> : Object {Allocation}<div class='sub-desc'><p>The input allocation contains the band matrix A, supported elements type Element.F64_2.</p>\n</div></li><li><span class='pre'>X</span> : Object {Allocation}<div class='sub-desc'><p>The input allocation contains vector x, supported elements type Element.F64_2.</p>\n</div></li><li><span class='pre'>incX</span> : Number<div class='sub-desc'><p>The increment for the elements of vector x, must be larger than zero.</p>\n</div></li><li><span class='pre'>beta</span> : Object {Double2}<div class='sub-desc'><p>The scalar beta.</p>\n</div></li><li><span class='pre'>Y</span> : Object {Allocation}<div class='sub-desc'><p>The input allocation contains vector y, supported elements type Element.F64_2.</p>\n</div></li><li><span class='pre'>incY</span> : Number<div class='sub-desc'><p>The increment for the elements of vector y, must be larger than zero.</p>\n</div></li></ul></div></div></div><div id='method-ZGEMM' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='androidx.renderscript.ScriptIntrinsicBLAS'>androidx.renderscript.ScriptIntrinsicBLAS</span><br/><a href='source/ScriptIntrinsicBLAS.html#androidx-renderscript-ScriptIntrinsicBLAS-method-ZGEMM' target='_blank' class='view-source'>view source</a></div><a href='#!/api/androidx.renderscript.ScriptIntrinsicBLAS-method-ZGEMM' class='name expandable'>ZGEMM</a>( <span class='pre'>TransA, TransB, alpha, A, B, beta, C</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>ZGEMM performs one of the matrix-matrix operations\n C := alphaop(A)op(B) + beta*C   where op(X) is one of op(X) = X  ...</div><div class='long'><p>ZGEMM performs one of the matrix-matrix operations\n C := alpha<em>op(A)</em>op(B) + beta*C   where op(X) is one of op(X) = X  or  op(X) = X<strong>T  or  op(X) = X</strong>H</p>\n\n<p> Details: http://www.netlib.org/lapack/explore-html/d7/d76/zgemm_8f.html</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>TransA</span> : Number<div class='sub-desc'><p>The type of transpose applied to matrix A.</p>\n</div></li><li><span class='pre'>TransB</span> : Number<div class='sub-desc'><p>The type of transpose applied to matrix B.</p>\n</div></li><li><span class='pre'>alpha</span> : Object {Double2}<div class='sub-desc'><p>The scalar alpha.</p>\n</div></li><li><span class='pre'>A</span> : Object {Allocation}<div class='sub-desc'><p>The input allocation contains matrix A, supported elements type {@link Element#F64_2</p>\n</div></li><li><span class='pre'>B</span> : Object {Allocation}<div class='sub-desc'><p>The input allocation contains matrix B, supported elements type {@link Element#F64_2</p>\n</div></li><li><span class='pre'>beta</span> : Object {Double2}<div class='sub-desc'><p>The scalar beta.</p>\n</div></li><li><span class='pre'>C</span> : Object {Allocation}<div class='sub-desc'><p>The input allocation contains matrix C, supported elements type {@link Element#F64_2</p>\n</div></li></ul></div></div></div><div id='method-ZGEMV' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='androidx.renderscript.ScriptIntrinsicBLAS'>androidx.renderscript.ScriptIntrinsicBLAS</span><br/><a href='source/ScriptIntrinsicBLAS.html#androidx-renderscript-ScriptIntrinsicBLAS-method-ZGEMV' target='_blank' class='view-source'>view source</a></div><a href='#!/api/androidx.renderscript.ScriptIntrinsicBLAS-method-ZGEMV' class='name expandable'>ZGEMV</a>( <span class='pre'>TransA, alpha, A, X, incX, beta, Y, incY</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>ZGEMV performs one of the matrix-vector operations\n y := alphaAx + betay   or   y := alphaATx + betay   or   y := alp...</div><div class='long'><p>ZGEMV performs one of the matrix-vector operations\n y := alpha<em>A</em>x + beta<em>y   or   y := alpha</em>A<strong>T<em>x + beta</em>y   or   y := alpha*A</strong>H<em>x + beta</em>y</p>\n\n<p> Details: http://www.netlib.org/lapack/explore-html/db/d40/zgemv_8f.html</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>TransA</span> : Number<div class='sub-desc'><p>The type of transpose applied to matrix A.</p>\n</div></li><li><span class='pre'>alpha</span> : Object {Double2}<div class='sub-desc'><p>The scalar alpha.</p>\n</div></li><li><span class='pre'>A</span> : Object {Allocation}<div class='sub-desc'><p>The input allocation contains matrix A, supported elements type Element.F64_2.</p>\n</div></li><li><span class='pre'>X</span> : Object {Allocation}<div class='sub-desc'><p>The input allocation contains vector x, supported elements type Element.F64_2.</p>\n</div></li><li><span class='pre'>incX</span> : Number<div class='sub-desc'><p>The increment for the elements of vector x, must be larger than zero.</p>\n</div></li><li><span class='pre'>beta</span> : Object {Double2}<div class='sub-desc'><p>The scalar beta.</p>\n</div></li><li><span class='pre'>Y</span> : Object {Allocation}<div class='sub-desc'><p>The input allocation contains vector y, supported elements type Element.F64_2.</p>\n</div></li><li><span class='pre'>incY</span> : Number<div class='sub-desc'><p>The increment for the elements of vector y, must be larger than zero.</p>\n</div></li></ul></div></div></div><div id='method-ZGERC' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='androidx.renderscript.ScriptIntrinsicBLAS'>androidx.renderscript.ScriptIntrinsicBLAS</span><br/><a href='source/ScriptIntrinsicBLAS.html#androidx-renderscript-ScriptIntrinsicBLAS-method-ZGERC' target='_blank' class='view-source'>view source</a></div><a href='#!/api/androidx.renderscript.ScriptIntrinsicBLAS-method-ZGERC' class='name expandable'>ZGERC</a>( <span class='pre'>alpha, X, incX, Y, incY, A</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>ZGERC performs the rank 1 operation\n A := alphaxy**H + A\n\n Details: http://www.netlib.org/lapack/explore-html/d3/dad/...</div><div class='long'><p>ZGERC performs the rank 1 operation\n A := alpha<em>x</em>y**H + A</p>\n\n<p> Details: http://www.netlib.org/lapack/explore-html/d3/dad/zgerc_8f.html</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>alpha</span> : Object {Double2}<div class='sub-desc'><p>The scalar alpha.</p>\n</div></li><li><span class='pre'>X</span> : Object {Allocation}<div class='sub-desc'><p>The input allocation contains vector x, supported elements type Element.F64_2.</p>\n</div></li><li><span class='pre'>incX</span> : Number<div class='sub-desc'><p>The increment for the elements of vector x, must be larger than zero.</p>\n</div></li><li><span class='pre'>Y</span> : Object {Allocation}<div class='sub-desc'><p>The input allocation contains vector y, supported elements type Element.F64_2.</p>\n</div></li><li><span class='pre'>incY</span> : Number<div class='sub-desc'><p>The increment for the elements of vector y, must be larger than zero.</p>\n</div></li><li><span class='pre'>A</span> : Object {Allocation}<div class='sub-desc'><p>The input allocation contains matrix A, supported elements type Element.F64_2.</p>\n</div></li></ul></div></div></div><div id='method-ZGERU' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='androidx.renderscript.ScriptIntrinsicBLAS'>androidx.renderscript.ScriptIntrinsicBLAS</span><br/><a href='source/ScriptIntrinsicBLAS.html#androidx-renderscript-ScriptIntrinsicBLAS-method-ZGERU' target='_blank' class='view-source'>view source</a></div><a href='#!/api/androidx.renderscript.ScriptIntrinsicBLAS-method-ZGERU' class='name expandable'>ZGERU</a>( <span class='pre'>alpha, X, incX, Y, incY, A</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>ZGERU performs the rank 1 operation\n A := alphaxy**T + A\n\n Details: http://www.netlib.org/lapack/explore-html/d7/d12/...</div><div class='long'><p>ZGERU performs the rank 1 operation\n A := alpha<em>x</em>y**T + A</p>\n\n<p> Details: http://www.netlib.org/lapack/explore-html/d7/d12/zgeru_8f.html</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>alpha</span> : Object {Double2}<div class='sub-desc'><p>The scalar alpha.</p>\n</div></li><li><span class='pre'>X</span> : Object {Allocation}<div class='sub-desc'><p>The input allocation contains vector x, supported elements type Element.F64_2.</p>\n</div></li><li><span class='pre'>incX</span> : Number<div class='sub-desc'><p>The increment for the elements of vector x, must be larger than zero.</p>\n</div></li><li><span class='pre'>Y</span> : Object {Allocation}<div class='sub-desc'><p>The input allocation contains vector y, supported elements type Element.F64_2.</p>\n</div></li><li><span class='pre'>incY</span> : Number<div class='sub-desc'><p>The increment for the elements of vector y, must be larger than zero.</p>\n</div></li><li><span class='pre'>A</span> : Object {Allocation}<div class='sub-desc'><p>The input allocation contains matrix A, supported elements type Element.F64_2.</p>\n</div></li></ul></div></div></div><div id='method-ZHBMV' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='androidx.renderscript.ScriptIntrinsicBLAS'>androidx.renderscript.ScriptIntrinsicBLAS</span><br/><a href='source/ScriptIntrinsicBLAS.html#androidx-renderscript-ScriptIntrinsicBLAS-method-ZHBMV' target='_blank' class='view-source'>view source</a></div><a href='#!/api/androidx.renderscript.ScriptIntrinsicBLAS-method-ZHBMV' class='name expandable'>ZHBMV</a>( <span class='pre'>Uplo, K, alpha, A, X, incX, beta, Y, incY</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>ZHBMV performs the matrix-vector operation\n y := alphaAx + beta*y\n\n Details: http://www.netlib.org/lapack/explore-htm...</div><div class='long'><p>ZHBMV performs the matrix-vector operation\n y := alpha<em>A</em>x + beta*y</p>\n\n<p> Details: http://www.netlib.org/lapack/explore-html/d3/d1a/zhbmv_8f.html</p>\n\n<p> Note: For a N<em>N matrix, the input Allocation should also be of size N</em>N (dimY = N, dimX = N),\n       but only the region N*(K+1) will be referenced. The following subroutine can is an\n       example showing how to convert a UPPER trianglar matrix 'a' to row-based band matrix 'b'.\n           for i in range(0, n):\n              for j in range(i, min(i+k+1, n)):\n                  b[i, j-i] = a[i, j]</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>Uplo</span> : Number<div class='sub-desc'><p>Specifies whether the upper or lower triangular part of the band matrix A is being supplied.</p>\n</div></li><li><span class='pre'>K</span> : Number<div class='sub-desc'><p>The number of off-diagonals of the matrix A</p>\n</div></li><li><span class='pre'>alpha</span> : Object {Double2}<div class='sub-desc'><p>The scalar alpha.</p>\n</div></li><li><span class='pre'>A</span> : Object {Allocation}<div class='sub-desc'><p>The input allocation contains matrix A, supported elements type Element.F64_2.</p>\n</div></li><li><span class='pre'>X</span> : Object {Allocation}<div class='sub-desc'><p>The input allocation contains vector x, supported elements type Element.F64_2.</p>\n</div></li><li><span class='pre'>incX</span> : Number<div class='sub-desc'><p>The increment for the elements of vector x, must be larger than zero.</p>\n</div></li><li><span class='pre'>beta</span> : Object {Double2}<div class='sub-desc'><p>The scalar beta.</p>\n</div></li><li><span class='pre'>Y</span> : Object {Allocation}<div class='sub-desc'><p>The input allocation contains vector y, supported elements type Element.F64_2.</p>\n</div></li><li><span class='pre'>incY</span> : Number<div class='sub-desc'><p>The increment for the elements of vector y, must be larger than zero.</p>\n</div></li></ul></div></div></div><div id='method-ZHEMM' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='androidx.renderscript.ScriptIntrinsicBLAS'>androidx.renderscript.ScriptIntrinsicBLAS</span><br/><a href='source/ScriptIntrinsicBLAS.html#androidx-renderscript-ScriptIntrinsicBLAS-method-ZHEMM' target='_blank' class='view-source'>view source</a></div><a href='#!/api/androidx.renderscript.ScriptIntrinsicBLAS-method-ZHEMM' class='name expandable'>ZHEMM</a>( <span class='pre'>Side, Uplo, alpha, A, B, beta, C</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>ZHEMM performs one of the matrix-matrix operations\n C := alphaAB + betaC   or   C := alphaBA + betaC\n\n Details: http:...</div><div class='long'><p>ZHEMM performs one of the matrix-matrix operations\n C := alpha<em>A</em>B + beta<em>C   or   C := alpha</em>B<em>A + beta</em>C</p>\n\n<p> Details: http://www.netlib.org/lapack/explore-html/d6/d3e/zhemm_8f.html</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>Side</span> : Number<div class='sub-desc'><p>Specifies whether the symmetric matrix A appears on the left or right.</p>\n</div></li><li><span class='pre'>Uplo</span> : Number<div class='sub-desc'><p>Specifies whether the upper or lower triangular part is to be referenced.</p>\n</div></li><li><span class='pre'>alpha</span> : Object {Double2}<div class='sub-desc'><p>The scalar alpha.</p>\n</div></li><li><span class='pre'>A</span> : Object {Allocation}<div class='sub-desc'><p>The input allocation contains matrix A, supported elements type Element.F64_2.</p>\n</div></li><li><span class='pre'>B</span> : Object {Allocation}<div class='sub-desc'><p>The input allocation contains matrix B, supported elements type Element.F64_2.</p>\n</div></li><li><span class='pre'>beta</span> : Object {Double2}<div class='sub-desc'><p>The scalar beta.</p>\n</div></li><li><span class='pre'>C</span> : Object {Allocation}<div class='sub-desc'><p>The input allocation contains matrix C, supported elements type Element.F64_2.</p>\n</div></li></ul></div></div></div><div id='method-ZHEMV' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='androidx.renderscript.ScriptIntrinsicBLAS'>androidx.renderscript.ScriptIntrinsicBLAS</span><br/><a href='source/ScriptIntrinsicBLAS.html#androidx-renderscript-ScriptIntrinsicBLAS-method-ZHEMV' target='_blank' class='view-source'>view source</a></div><a href='#!/api/androidx.renderscript.ScriptIntrinsicBLAS-method-ZHEMV' class='name expandable'>ZHEMV</a>( <span class='pre'>Uplo, alpha, A, X, incX, beta, Y, incY</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>ZHEMV performs the matrix-vector operation\n y := alphaAx + beta*y\n\n Details: http://www.netlib.org/lapack/explore-htm...</div><div class='long'><p>ZHEMV performs the matrix-vector operation\n y := alpha<em>A</em>x + beta*y</p>\n\n<p> Details: http://www.netlib.org/lapack/explore-html/d0/ddd/zhemv_8f.html</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>Uplo</span> : Number<div class='sub-desc'><p>Specifies whether the upper or lower triangular part is to be referenced.</p>\n</div></li><li><span class='pre'>alpha</span> : Object {Double2}<div class='sub-desc'><p>The scalar alpha.</p>\n</div></li><li><span class='pre'>A</span> : Object {Allocation}<div class='sub-desc'><p>The input allocation contains matrix A, supported elements type Element.F64_2.</p>\n</div></li><li><span class='pre'>X</span> : Object {Allocation}<div class='sub-desc'><p>The input allocation contains vector x, supported elements type Element.F64_2.</p>\n</div></li><li><span class='pre'>incX</span> : Number<div class='sub-desc'><p>The increment for the elements of vector x, must be larger than zero.</p>\n</div></li><li><span class='pre'>beta</span> : Object {Double2}<div class='sub-desc'><p>The scalar beta.</p>\n</div></li><li><span class='pre'>Y</span> : Object {Allocation}<div class='sub-desc'><p>The input allocation contains vector y, supported elements type Element.F64_2.</p>\n</div></li><li><span class='pre'>incY</span> : Number<div class='sub-desc'><p>The increment for the elements of vector y, must be larger than zero.</p>\n</div></li></ul></div></div></div><div id='method-ZHER' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='androidx.renderscript.ScriptIntrinsicBLAS'>androidx.renderscript.ScriptIntrinsicBLAS</span><br/><a href='source/ScriptIntrinsicBLAS.html#androidx-renderscript-ScriptIntrinsicBLAS-method-ZHER' target='_blank' class='view-source'>view source</a></div><a href='#!/api/androidx.renderscript.ScriptIntrinsicBLAS-method-ZHER' class='name expandable'>ZHER</a>( <span class='pre'>Uplo, alpha, X, incX, A</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>ZHER performs the rank 1 operation\n A := alphaxx**H + A\n\n Details: http://www.netlib.org/lapack/explore-html/de/d0e/z...</div><div class='long'><p>ZHER performs the rank 1 operation\n A := alpha<em>x</em>x**H + A</p>\n\n<p> Details: http://www.netlib.org/lapack/explore-html/de/d0e/zher_8f.html</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>Uplo</span> : Number<div class='sub-desc'><p>Specifies whether the upper or lower triangular part is to be referenced.</p>\n</div></li><li><span class='pre'>alpha</span> : Number<div class='sub-desc'><p>The scalar alpha.</p>\n</div></li><li><span class='pre'>X</span> : Object {Allocation}<div class='sub-desc'><p>The input allocation contains vector x, supported elements type Element.F64_2.</p>\n</div></li><li><span class='pre'>incX</span> : Number<div class='sub-desc'><p>The increment for the elements of vector x, must be larger than zero.</p>\n</div></li><li><span class='pre'>A</span> : Object {Allocation}<div class='sub-desc'><p>The input allocation contains matrix A, supported elements type Element.F64_2.</p>\n</div></li></ul></div></div></div><div id='method-ZHER2' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='androidx.renderscript.ScriptIntrinsicBLAS'>androidx.renderscript.ScriptIntrinsicBLAS</span><br/><a href='source/ScriptIntrinsicBLAS.html#androidx-renderscript-ScriptIntrinsicBLAS-method-ZHER2' target='_blank' class='view-source'>view source</a></div><a href='#!/api/androidx.renderscript.ScriptIntrinsicBLAS-method-ZHER2' class='name expandable'>ZHER2</a>( <span class='pre'>Uplo, alpha, X, incX, Y, incY, A</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>ZHER2 performs the symmetric rank 2 operation\n A := alphaxyH + alphayxH + A\n\n Details: http://www.netlib.org/lapack/e...</div><div class='long'><p>ZHER2 performs the symmetric rank 2 operation\n A := alpha<em>x</em>y<strong>H + alpha<em>y</em>x</strong>H + A</p>\n\n<p> Details: http://www.netlib.org/lapack/explore-html/da/d8a/zher2_8f.html</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>Uplo</span> : Number<div class='sub-desc'><p>Specifies whether the upper or lower triangular part is to be referenced.</p>\n</div></li><li><span class='pre'>alpha</span> : Object {Double2}<div class='sub-desc'><p>The scalar alpha.</p>\n</div></li><li><span class='pre'>X</span> : Object {Allocation}<div class='sub-desc'><p>The input allocation contains vector x, supported elements type Element.F64_2.</p>\n</div></li><li><span class='pre'>incX</span> : Number<div class='sub-desc'><p>The increment for the elements of vector x, must be larger than zero.</p>\n</div></li><li><span class='pre'>Y</span> : Object {Allocation}<div class='sub-desc'><p>The input allocation contains vector y, supported elements type Element.F64_2.</p>\n</div></li><li><span class='pre'>incY</span> : Number<div class='sub-desc'><p>The increment for the elements of vector y, must be larger than zero.</p>\n</div></li><li><span class='pre'>A</span> : Object {Allocation}<div class='sub-desc'><p>The input allocation contains matrix A, supported elements type Element.F64_2.</p>\n</div></li></ul></div></div></div><div id='method-ZHER2K' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='androidx.renderscript.ScriptIntrinsicBLAS'>androidx.renderscript.ScriptIntrinsicBLAS</span><br/><a href='source/ScriptIntrinsicBLAS.html#androidx-renderscript-ScriptIntrinsicBLAS-method-ZHER2K' target='_blank' class='view-source'>view source</a></div><a href='#!/api/androidx.renderscript.ScriptIntrinsicBLAS-method-ZHER2K' class='name expandable'>ZHER2K</a>( <span class='pre'>Uplo, Trans, alpha, A, B, beta, C</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>ZHER2K performs one of the hermitian rank 2k operations\n C := alphaABH + conjg( alpha )BAH + betaC   or   C := alphaA...</div><div class='long'><p>ZHER2K performs one of the hermitian rank 2k operations\n C := alpha<em>A</em>B<strong>H + conjg( alpha )<em>B</em>A</strong>H + beta<em>C   or   C := alpha</em>A<strong>H<em>B + conjg( alpha )</em>B</strong>H<em>A + beta</em>C</p>\n\n<p> Details: http://www.netlib.org/lapack/explore-html/d7/dfa/zher2k_8f.html</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>Uplo</span> : Number<div class='sub-desc'><p>Specifies whether the upper or lower triangular part of C is to be referenced.</p>\n</div></li><li><span class='pre'>Trans</span> : Number<div class='sub-desc'><p>The type of transpose applied to the operation.</p>\n</div></li><li><span class='pre'>alpha</span> : Object {Double2}<div class='sub-desc'><p>The scalar alpha.</p>\n</div></li><li><span class='pre'>A</span> : Object {Allocation}<div class='sub-desc'><p>The input allocation contains matrix A, supported elements type Element.F64_2.</p>\n</div></li><li><span class='pre'>B</span> : Object {Allocation}<div class='sub-desc'><p>The input allocation contains matrix B, supported elements type Element.F64_2.</p>\n</div></li><li><span class='pre'>beta</span> : Number<div class='sub-desc'><p>The scalar beta.</p>\n</div></li><li><span class='pre'>C</span> : Object {Allocation}<div class='sub-desc'><p>The input allocation contains matrix C, supported elements type Element.F64_2.</p>\n</div></li></ul></div></div></div><div id='method-ZHERK' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='androidx.renderscript.ScriptIntrinsicBLAS'>androidx.renderscript.ScriptIntrinsicBLAS</span><br/><a href='source/ScriptIntrinsicBLAS.html#androidx-renderscript-ScriptIntrinsicBLAS-method-ZHERK' target='_blank' class='view-source'>view source</a></div><a href='#!/api/androidx.renderscript.ScriptIntrinsicBLAS-method-ZHERK' class='name expandable'>ZHERK</a>( <span class='pre'>Uplo, Trans, alpha, A, beta, C</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>ZHERK performs one of the hermitian rank k operations\n C := alphaAAH + betaC   or   C := alphaAHA + betaC\n\n Details: ...</div><div class='long'><p>ZHERK performs one of the hermitian rank k operations\n C := alpha<em>A</em>A<strong>H + beta<em>C   or   C := alpha</em>A</strong>H<em>A + beta</em>C</p>\n\n<p> Details: http://www.netlib.org/lapack/explore-html/d1/db1/zherk_8f.html</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>Uplo</span> : Number<div class='sub-desc'><p>Specifies whether the upper or lower triangular part of C is to be referenced.</p>\n</div></li><li><span class='pre'>Trans</span> : Number<div class='sub-desc'><p>The type of transpose applied to the operation.</p>\n</div></li><li><span class='pre'>alpha</span> : Number<div class='sub-desc'><p>The scalar alpha.</p>\n</div></li><li><span class='pre'>A</span> : Object {Allocation}<div class='sub-desc'><p>The input allocation contains matrix A, supported elements type Element.F64_2.</p>\n</div></li><li><span class='pre'>beta</span> : Number<div class='sub-desc'><p>The scalar beta.</p>\n</div></li><li><span class='pre'>C</span> : Object {Allocation}<div class='sub-desc'><p>The input allocation contains matrix C, supported elements type Element.F64_2.</p>\n</div></li></ul></div></div></div><div id='method-ZHPMV' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='androidx.renderscript.ScriptIntrinsicBLAS'>androidx.renderscript.ScriptIntrinsicBLAS</span><br/><a href='source/ScriptIntrinsicBLAS.html#androidx-renderscript-ScriptIntrinsicBLAS-method-ZHPMV' target='_blank' class='view-source'>view source</a></div><a href='#!/api/androidx.renderscript.ScriptIntrinsicBLAS-method-ZHPMV' class='name expandable'>ZHPMV</a>( <span class='pre'>Uplo, alpha, Ap, X, incX, beta, Y, incY</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>ZHPMV performs the matrix-vector operation\n y := alphaAx + beta*y\n\n Details: http://www.netlib.org/lapack/explore-htm...</div><div class='long'><p>ZHPMV performs the matrix-vector operation\n y := alpha<em>A</em>x + beta*y</p>\n\n<p> Details: http://www.netlib.org/lapack/explore-html/d0/d60/zhpmv_8f.html</p>\n\n<p> Note: For a N<em>N matrix, the input Allocation should be a 1D allocation of size dimX = N</em>(N+1)/2,\n       The following subroutine can is an example showing how to convert a UPPER trianglar matrix\n       'a' to packed matrix 'b'.\n           k = 0\n           for i in range(0, n):\n              for j in range(i, n):\n                  b[k++] = a[i, j]</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>Uplo</span> : Number<div class='sub-desc'><p>Specifies whether the upper or lower triangular part of the matrix A is supplied in packed form.</p>\n</div></li><li><span class='pre'>alpha</span> : Object {Double2}<div class='sub-desc'><p>The scalar alpha.</p>\n</div></li><li><span class='pre'>Ap</span> : Object {Allocation}<div class='sub-desc'><p>The input allocation contains matrix A, supported elements type Element.F64_2.</p>\n</div></li><li><span class='pre'>X</span> : Object {Allocation}<div class='sub-desc'><p>The input allocation contains vector x, supported elements type Element.F64_2.</p>\n</div></li><li><span class='pre'>incX</span> : Number<div class='sub-desc'><p>The increment for the elements of vector x, must be larger than zero.</p>\n</div></li><li><span class='pre'>beta</span> : Object {Double2}<div class='sub-desc'><p>The scalar beta.</p>\n</div></li><li><span class='pre'>Y</span> : Object {Allocation}<div class='sub-desc'><p>The input allocation contains vector y, supported elements type Element.F64_2.</p>\n</div></li><li><span class='pre'>incY</span> : Number<div class='sub-desc'><p>The increment for the elements of vector y, must be larger than zero.</p>\n</div></li></ul></div></div></div><div id='method-ZHPR' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='androidx.renderscript.ScriptIntrinsicBLAS'>androidx.renderscript.ScriptIntrinsicBLAS</span><br/><a href='source/ScriptIntrinsicBLAS.html#androidx-renderscript-ScriptIntrinsicBLAS-method-ZHPR' target='_blank' class='view-source'>view source</a></div><a href='#!/api/androidx.renderscript.ScriptIntrinsicBLAS-method-ZHPR' class='name expandable'>ZHPR</a>( <span class='pre'>Uplo, alpha, X, incX, Ap</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>ZHPR performs the rank 1 operation\n A := alphaxx**H + A\n\n Details: http://www.netlib.org/lapack/explore-html/de/de1/z...</div><div class='long'><p>ZHPR performs the rank 1 operation\n A := alpha<em>x</em>x**H + A</p>\n\n<p> Details: http://www.netlib.org/lapack/explore-html/de/de1/zhpr_8f.html</p>\n\n<p> Note: For a N<em>N matrix, the input Allocation should be a 1D allocation of size dimX = N</em>(N+1)/2,\n       The following subroutine can is an example showing how to convert a UPPER trianglar matrix\n       'a' to packed matrix 'b'.\n           k = 0\n           for i in range(0, n):\n              for j in range(i, n):\n                  b[k++] = a[i, j]</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>Uplo</span> : Number<div class='sub-desc'><p>Specifies whether the upper or lower triangular part is to be supplied in the packed form.</p>\n</div></li><li><span class='pre'>alpha</span> : Number<div class='sub-desc'><p>The scalar alpha.</p>\n</div></li><li><span class='pre'>X</span> : Object {Allocation}<div class='sub-desc'><p>The input allocation contains vector x, supported elements type Element.F64_2.</p>\n</div></li><li><span class='pre'>incX</span> : Number<div class='sub-desc'><p>The increment for the elements of vector x, must be larger than zero.</p>\n</div></li><li><span class='pre'>Ap</span> : Object {Allocation}<div class='sub-desc'><p>The input allocation contains matrix A, supported elements type Element.F64_2.</p>\n</div></li></ul></div></div></div><div id='method-ZHPR2' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='androidx.renderscript.ScriptIntrinsicBLAS'>androidx.renderscript.ScriptIntrinsicBLAS</span><br/><a href='source/ScriptIntrinsicBLAS.html#androidx-renderscript-ScriptIntrinsicBLAS-method-ZHPR2' target='_blank' class='view-source'>view source</a></div><a href='#!/api/androidx.renderscript.ScriptIntrinsicBLAS-method-ZHPR2' class='name expandable'>ZHPR2</a>( <span class='pre'>Uplo, alpha, X, incX, Y, incY, Ap</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>ZHPR2 performs the symmetric rank 2 operation\n A := alphaxyH + alphayxH + A\n\n Details: http://www.netlib.org/lapack/e...</div><div class='long'><p>ZHPR2 performs the symmetric rank 2 operation\n A := alpha<em>x</em>y<strong>H + alpha<em>y</em>x</strong>H + A</p>\n\n<p> Details: http://www.netlib.org/lapack/explore-html/d5/d52/zhpr2_8f.html</p>\n\n<p> Note: For a N<em>N matrix, the input Allocation should be a 1D allocation of size dimX = N</em>(N+1)/2,\n       The following subroutine can is an example showing how to convert a UPPER trianglar matrix\n       'a' to packed matrix 'b'.\n           k = 0\n           for i in range(0, n):\n              for j in range(i, n):\n                  b[k++] = a[i, j]</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>Uplo</span> : Number<div class='sub-desc'><p>Specifies whether the upper or lower triangular part is to be supplied in the packed form.</p>\n</div></li><li><span class='pre'>alpha</span> : Object {Double2}<div class='sub-desc'><p>The scalar alpha.</p>\n</div></li><li><span class='pre'>X</span> : Object {Allocation}<div class='sub-desc'><p>The input allocation contains vector x, supported elements type Element.F64_2.</p>\n</div></li><li><span class='pre'>incX</span> : Number<div class='sub-desc'><p>The increment for the elements of vector x, must be larger than zero.</p>\n</div></li><li><span class='pre'>Y</span> : Object {Allocation}<div class='sub-desc'><p>The input allocation contains vector y, supported elements type Element.F64_2.</p>\n</div></li><li><span class='pre'>incY</span> : Number<div class='sub-desc'><p>The increment for the elements of vector y, must be larger than zero.</p>\n</div></li><li><span class='pre'>Ap</span> : Object {Allocation}<div class='sub-desc'><p>The input allocation contains matrix A, supported elements type Element.F64_2.</p>\n</div></li></ul></div></div></div><div id='method-ZSYMM' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='androidx.renderscript.ScriptIntrinsicBLAS'>androidx.renderscript.ScriptIntrinsicBLAS</span><br/><a href='source/ScriptIntrinsicBLAS.html#androidx-renderscript-ScriptIntrinsicBLAS-method-ZSYMM' target='_blank' class='view-source'>view source</a></div><a href='#!/api/androidx.renderscript.ScriptIntrinsicBLAS-method-ZSYMM' class='name expandable'>ZSYMM</a>( <span class='pre'>Side, Uplo, alpha, A, B, beta, C</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>ZSYMM performs one of the matrix-matrix operations\n C := alphaAB + betaC   or   C := alphaBA + betaC\n\n Details: http:...</div><div class='long'><p>ZSYMM performs one of the matrix-matrix operations\n C := alpha<em>A</em>B + beta<em>C   or   C := alpha</em>B<em>A + beta</em>C</p>\n\n<p> Details: http://www.netlib.org/lapack/explore-html/df/d51/zsymm_8f.html</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>Side</span> : Number<div class='sub-desc'><p>Specifies whether the symmetric matrix A appears on the left or right.</p>\n</div></li><li><span class='pre'>Uplo</span> : Number<div class='sub-desc'><p>Specifies whether the upper or lower triangular part is to be referenced.</p>\n</div></li><li><span class='pre'>alpha</span> : Object {Double2}<div class='sub-desc'><p>The scalar alpha.</p>\n</div></li><li><span class='pre'>A</span> : Object {Allocation}<div class='sub-desc'><p>The input allocation contains matrix A, supported elements type Element.F64_2.</p>\n</div></li><li><span class='pre'>B</span> : Object {Allocation}<div class='sub-desc'><p>The input allocation contains matrix B, supported elements type Element.F64_2.</p>\n</div></li><li><span class='pre'>beta</span> : Object {Double2}<div class='sub-desc'><p>The scalar beta.</p>\n</div></li><li><span class='pre'>C</span> : Object {Allocation}<div class='sub-desc'><p>The input allocation contains matrix C, supported elements type Element.F64_2.</p>\n</div></li></ul></div></div></div><div id='method-ZSYR2K' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='androidx.renderscript.ScriptIntrinsicBLAS'>androidx.renderscript.ScriptIntrinsicBLAS</span><br/><a href='source/ScriptIntrinsicBLAS.html#androidx-renderscript-ScriptIntrinsicBLAS-method-ZSYR2K' target='_blank' class='view-source'>view source</a></div><a href='#!/api/androidx.renderscript.ScriptIntrinsicBLAS-method-ZSYR2K' class='name expandable'>ZSYR2K</a>( <span class='pre'>Uplo, Trans, alpha, A, B, beta, C</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>ZSYR2K performs one of the symmetric rank 2k operations\n C := alphaABT + alphaBAT + betaC   or   C := alphaATB + alph...</div><div class='long'><p>ZSYR2K performs one of the symmetric rank 2k operations\n C := alpha<em>A</em>B<strong>T + alpha<em>B</em>A</strong>T + beta<em>C   or   C := alpha</em>A<strong>T<em>B + alpha</em>B</strong>T<em>A + beta</em>C</p>\n\n<p> Details: http://www.netlib.org/lapack/explore-html/df/d20/zsyr2k_8f.html</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>Uplo</span> : Number<div class='sub-desc'><p>Specifies whether the upper or lower triangular part of C is to be referenced.</p>\n</div></li><li><span class='pre'>Trans</span> : Number<div class='sub-desc'><p>The type of transpose applied to the operation.</p>\n</div></li><li><span class='pre'>alpha</span> : Object {Double2}<div class='sub-desc'><p>The scalar alpha.</p>\n</div></li><li><span class='pre'>A</span> : Object {Allocation}<div class='sub-desc'><p>The input allocation contains matrix A, supported elements type Element.F64_2.</p>\n</div></li><li><span class='pre'>B</span> : Object {Allocation}<div class='sub-desc'><p>The input allocation contains matrix B, supported elements type Element.F64_2.</p>\n</div></li><li><span class='pre'>beta</span> : Object {Double2}<div class='sub-desc'><p>The scalar beta.</p>\n</div></li><li><span class='pre'>C</span> : Object {Allocation}<div class='sub-desc'><p>The input allocation contains matrix C, supported elements type Element.F64_2.</p>\n</div></li></ul></div></div></div><div id='method-ZSYRK' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='androidx.renderscript.ScriptIntrinsicBLAS'>androidx.renderscript.ScriptIntrinsicBLAS</span><br/><a href='source/ScriptIntrinsicBLAS.html#androidx-renderscript-ScriptIntrinsicBLAS-method-ZSYRK' target='_blank' class='view-source'>view source</a></div><a href='#!/api/androidx.renderscript.ScriptIntrinsicBLAS-method-ZSYRK' class='name expandable'>ZSYRK</a>( <span class='pre'>Uplo, Trans, alpha, A, beta, C</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>ZSYRK performs one of the symmetric rank k operations\n C := alphaAAT + betaC   or   C := alphaATA + betaC\n\n Details: ...</div><div class='long'><p>ZSYRK performs one of the symmetric rank k operations\n C := alpha<em>A</em>A<strong>T + beta<em>C   or   C := alpha</em>A</strong>T<em>A + beta</em>C</p>\n\n<p> Details: http://www.netlib.org/lapack/explore-html/de/d54/zsyrk_8f.html</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>Uplo</span> : Number<div class='sub-desc'><p>Specifies whether the upper or lower triangular part of C is to be referenced.</p>\n</div></li><li><span class='pre'>Trans</span> : Number<div class='sub-desc'><p>The type of transpose applied to the operation.</p>\n</div></li><li><span class='pre'>alpha</span> : Object {Double2}<div class='sub-desc'><p>The scalar alpha.</p>\n</div></li><li><span class='pre'>A</span> : Object {Allocation}<div class='sub-desc'><p>The input allocation contains matrix A, supported elements type Element.F64_2.</p>\n</div></li><li><span class='pre'>beta</span> : Object {Double2}<div class='sub-desc'><p>The scalar beta.</p>\n</div></li><li><span class='pre'>C</span> : Object {Allocation}<div class='sub-desc'><p>The input allocation contains matrix C, supported elements type Element.F64_2.</p>\n</div></li></ul></div></div></div><div id='method-ZTBMV' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='androidx.renderscript.ScriptIntrinsicBLAS'>androidx.renderscript.ScriptIntrinsicBLAS</span><br/><a href='source/ScriptIntrinsicBLAS.html#androidx-renderscript-ScriptIntrinsicBLAS-method-ZTBMV' target='_blank' class='view-source'>view source</a></div><a href='#!/api/androidx.renderscript.ScriptIntrinsicBLAS-method-ZTBMV' class='name expandable'>ZTBMV</a>( <span class='pre'>Uplo, TransA, Diag, K, A, X, incX</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>ZTBMV performs one of the matrix-vector operations\n x := Ax   or   x := A**Tx   or   x := A*Hx\n\n Details: http://www....</div><div class='long'><p>ZTBMV performs one of the matrix-vector operations\n x := A<em>x   or   x := A**T</em>x   or   x := A<em>*H</em>x</p>\n\n<p> Details: http://www.netlib.org/lapack/explore-html/d3/d39/ztbmv_8f.html</p>\n\n<p> Note: For a N<em>N matrix, the input Allocation should also be of size N</em>N (dimY = N, dimX = N),\n       but only the region N*(K+1) will be referenced. The following subroutine can is an\n       example showing how to convert a UPPER trianglar matrix 'a' to row-based band matrix 'b'.\n           for i in range(0, n):\n              for j in range(i, min(i+k+1, n)):\n                  b[i, j-i] = a[i, j]</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>Uplo</span> : Number<div class='sub-desc'><p>Specifies whether the matrix is an upper or lower triangular matrix.</p>\n</div></li><li><span class='pre'>TransA</span> : Number<div class='sub-desc'><p>The type of transpose applied to matrix A.</p>\n</div></li><li><span class='pre'>Diag</span> : Number<div class='sub-desc'><p>Specifies whether or not A is unit triangular.</p>\n</div></li><li><span class='pre'>K</span> : Number<div class='sub-desc'><p>The number of off-diagonals of the matrix A</p>\n</div></li><li><span class='pre'>A</span> : Object {Allocation}<div class='sub-desc'><p>The input allocation contains matrix A, supported elements type Element.F64_2.</p>\n</div></li><li><span class='pre'>X</span> : Object {Allocation}<div class='sub-desc'><p>The input allocation contains vector x, supported elements type Element.F64_2.</p>\n</div></li><li><span class='pre'>incX</span> : Number<div class='sub-desc'><p>The increment for the elements of vector x, must be larger than zero.</p>\n</div></li></ul></div></div></div><div id='method-ZTBSV' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='androidx.renderscript.ScriptIntrinsicBLAS'>androidx.renderscript.ScriptIntrinsicBLAS</span><br/><a href='source/ScriptIntrinsicBLAS.html#androidx-renderscript-ScriptIntrinsicBLAS-method-ZTBSV' target='_blank' class='view-source'>view source</a></div><a href='#!/api/androidx.renderscript.ScriptIntrinsicBLAS-method-ZTBSV' class='name expandable'>ZTBSV</a>( <span class='pre'>Uplo, TransA, Diag, K, A, X, incX</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>ZTBSV solves one of the systems of equations\n Ax = b   or   A**Tx = b   or   A*Hx = b\n\n Details: http://www.netlib.or...</div><div class='long'><p>ZTBSV solves one of the systems of equations\n A<em>x = b   or   A**T</em>x = b   or   A<em>*H</em>x = b</p>\n\n<p> Details: http://www.netlib.org/lapack/explore-html/d4/d5a/ztbsv_8f.html</p>\n\n<p> Note: For a N<em>N matrix, the input Allocation should also be of size N</em>N (dimY = N, dimX = N),\n       but only the region N*(K+1) will be referenced. The following subroutine can is an\n       example showing how to convert a UPPER trianglar matrix 'a' to row-based band matrix 'b'.\n           for i in range(0, n):\n              for j in range(i, min(i+k+1, n)):\n                  b[i, j-i] = a[i, j]</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>Uplo</span> : Number<div class='sub-desc'><p>Specifies whether the matrix is an upper or lower triangular matrix.</p>\n</div></li><li><span class='pre'>TransA</span> : Number<div class='sub-desc'><p>The type of transpose applied to matrix A.</p>\n</div></li><li><span class='pre'>Diag</span> : Number<div class='sub-desc'><p>Specifies whether or not A is unit triangular.</p>\n</div></li><li><span class='pre'>K</span> : Number<div class='sub-desc'><p>The number of off-diagonals of the matrix A</p>\n</div></li><li><span class='pre'>A</span> : Object {Allocation}<div class='sub-desc'><p>The input allocation contains matrix A, supported elements type Element.F64_2.</p>\n</div></li><li><span class='pre'>X</span> : Object {Allocation}<div class='sub-desc'><p>The input allocation contains vector x, supported elements type Element.F64_2.</p>\n</div></li><li><span class='pre'>incX</span> : Number<div class='sub-desc'><p>The increment for the elements of vector x, must be larger than zero.</p>\n</div></li></ul></div></div></div><div id='method-ZTPMV' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='androidx.renderscript.ScriptIntrinsicBLAS'>androidx.renderscript.ScriptIntrinsicBLAS</span><br/><a href='source/ScriptIntrinsicBLAS.html#androidx-renderscript-ScriptIntrinsicBLAS-method-ZTPMV' target='_blank' class='view-source'>view source</a></div><a href='#!/api/androidx.renderscript.ScriptIntrinsicBLAS-method-ZTPMV' class='name expandable'>ZTPMV</a>( <span class='pre'>Uplo, TransA, Diag, Ap, X, incX</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>ZTPMV performs one of the matrix-vector operations\n x := Ax   or   x := A**Tx   or   x := A*Hx\n\n Details: http://www....</div><div class='long'><p>ZTPMV performs one of the matrix-vector operations\n x := A<em>x   or   x := A**T</em>x   or   x := A<em>*H</em>x</p>\n\n<p> Details: http://www.netlib.org/lapack/explore-html/d2/d9e/ztpmv_8f.html</p>\n\n<p> Note: For a N<em>N matrix, the input Allocation should be a 1D allocation of size dimX = N</em>(N+1)/2,\n       The following subroutine can is an example showing how to convert a UPPER trianglar matrix\n       'a' to packed matrix 'b'.\n           k = 0\n           for i in range(0, n):\n              for j in range(i, n):\n                  b[k++] = a[i, j]</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>Uplo</span> : Number<div class='sub-desc'><p>Specifies whether the matrix is an upper or lower triangular matrix.</p>\n</div></li><li><span class='pre'>TransA</span> : Number<div class='sub-desc'><p>The type of transpose applied to matrix A.</p>\n</div></li><li><span class='pre'>Diag</span> : Number<div class='sub-desc'><p>Specifies whether or not A is unit triangular.</p>\n</div></li><li><span class='pre'>Ap</span> : Object {Allocation}<div class='sub-desc'><p>The input allocation contains packed matrix A, supported elements type Element.F64_2.</p>\n</div></li><li><span class='pre'>X</span> : Object {Allocation}<div class='sub-desc'><p>The input allocation contains vector x, supported elements type Element.F64_2.</p>\n</div></li><li><span class='pre'>incX</span> : Number<div class='sub-desc'><p>The increment for the elements of vector x, must be larger than zero.</p>\n</div></li></ul></div></div></div><div id='method-ZTPSV' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='androidx.renderscript.ScriptIntrinsicBLAS'>androidx.renderscript.ScriptIntrinsicBLAS</span><br/><a href='source/ScriptIntrinsicBLAS.html#androidx-renderscript-ScriptIntrinsicBLAS-method-ZTPSV' target='_blank' class='view-source'>view source</a></div><a href='#!/api/androidx.renderscript.ScriptIntrinsicBLAS-method-ZTPSV' class='name expandable'>ZTPSV</a>( <span class='pre'>Uplo, TransA, Diag, Ap, X, incX</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>ZTPSV solves one of the systems of equations\n Ax = b   or   A**Tx = b   or   A*Hx = b\n\n Details: http://www.netlib.or...</div><div class='long'><p>ZTPSV solves one of the systems of equations\n A<em>x = b   or   A**T</em>x = b   or   A<em>*H</em>x = b</p>\n\n<p> Details: http://www.netlib.org/lapack/explore-html/da/d57/ztpsv_8f.html</p>\n\n<p> Note: For a N<em>N matrix, the input Allocation should be a 1D allocation of size dimX = N</em>(N+1)/2,\n       The following subroutine can is an example showing how to convert a UPPER trianglar matrix\n       'a' to packed matrix 'b'.\n           k = 0\n           for i in range(0, n):\n              for j in range(i, n):\n                  b[k++] = a[i, j]</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>Uplo</span> : Number<div class='sub-desc'><p>Specifies whether the matrix is an upper or lower triangular matrix.</p>\n</div></li><li><span class='pre'>TransA</span> : Number<div class='sub-desc'><p>The type of transpose applied to matrix A.</p>\n</div></li><li><span class='pre'>Diag</span> : Number<div class='sub-desc'><p>Specifies whether or not A is unit triangular.</p>\n</div></li><li><span class='pre'>Ap</span> : Object {Allocation}<div class='sub-desc'><p>The input allocation contains packed matrix A, supported elements type Element.F64_2.</p>\n</div></li><li><span class='pre'>X</span> : Object {Allocation}<div class='sub-desc'><p>The input allocation contains vector x, supported elements type Element.F64_2.</p>\n</div></li><li><span class='pre'>incX</span> : Number<div class='sub-desc'><p>The increment for the elements of vector x, must be larger than zero.</p>\n</div></li></ul></div></div></div><div id='method-ZTRMM' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='androidx.renderscript.ScriptIntrinsicBLAS'>androidx.renderscript.ScriptIntrinsicBLAS</span><br/><a href='source/ScriptIntrinsicBLAS.html#androidx-renderscript-ScriptIntrinsicBLAS-method-ZTRMM' target='_blank' class='view-source'>view source</a></div><a href='#!/api/androidx.renderscript.ScriptIntrinsicBLAS-method-ZTRMM' class='name expandable'>ZTRMM</a>( <span class='pre'>Side, Uplo, TransA, Diag, alpha, A, B</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>ZTRMM performs one of the matrix-matrix operations\n B := alphaop(A)B   or   B := alphaBop(A)\n op(A) is one of  op(A) ...</div><div class='long'><p>ZTRMM performs one of the matrix-matrix operations\n B := alpha<em>op(A)</em>B   or   B := alpha<em>B</em>op(A)\n op(A) is one of  op(A) = A  or  op(A) = A<strong>T  or  op(A) = A</strong>H</p>\n\n<p> Details: http://www.netlib.org/lapack/explore-html/d8/de1/ztrmm_8f.html</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>Side</span> : Number<div class='sub-desc'><p>Specifies whether the symmetric matrix A appears on the left or right.</p>\n</div></li><li><span class='pre'>Uplo</span> : Number<div class='sub-desc'><p>Specifies whether matrix A is upper or lower triangular.</p>\n</div></li><li><span class='pre'>TransA</span> : Number<div class='sub-desc'><p>The type of transpose applied to matrix A.</p>\n</div></li><li><span class='pre'>Diag</span> : Number<div class='sub-desc'><p>Specifies whether or not A is unit triangular.</p>\n</div></li><li><span class='pre'>alpha</span> : Object {Double2}<div class='sub-desc'><p>The scalar alpha.</p>\n</div></li><li><span class='pre'>A</span> : Object {Allocation}<div class='sub-desc'><p>The input allocation contains matrix A, supported elements type Element.F64_2.</p>\n</div></li><li><span class='pre'>B</span> : Object {Allocation}<div class='sub-desc'><p>The input allocation contains matrix B, supported elements type Element.F64_2.</p>\n</div></li></ul></div></div></div><div id='method-ZTRMV' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='androidx.renderscript.ScriptIntrinsicBLAS'>androidx.renderscript.ScriptIntrinsicBLAS</span><br/><a href='source/ScriptIntrinsicBLAS.html#androidx-renderscript-ScriptIntrinsicBLAS-method-ZTRMV' target='_blank' class='view-source'>view source</a></div><a href='#!/api/androidx.renderscript.ScriptIntrinsicBLAS-method-ZTRMV' class='name expandable'>ZTRMV</a>( <span class='pre'>Uplo, TransA, Diag, A, X, incX</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>ZTRMV performs one of the matrix-vector operations\n x := Ax   or   x := A**Tx   or   x := A*Hx\n\n Details: http://www....</div><div class='long'><p>ZTRMV performs one of the matrix-vector operations\n x := A<em>x   or   x := A**T</em>x   or   x := A<em>*H</em>x</p>\n\n<p> Details: http://www.netlib.org/lapack/explore-html/d0/dd1/ztrmv_8f.html</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>Uplo</span> : Number<div class='sub-desc'><p>Specifies whether the matrix is an upper or lower triangular matrix.</p>\n</div></li><li><span class='pre'>TransA</span> : Number<div class='sub-desc'><p>The type of transpose applied to matrix A.</p>\n</div></li><li><span class='pre'>Diag</span> : Number<div class='sub-desc'><p>Specifies whether or not A is unit triangular.</p>\n</div></li><li><span class='pre'>A</span> : Object {Allocation}<div class='sub-desc'><p>The input allocation contains matrix A, supported elements type Element.F64_2.</p>\n</div></li><li><span class='pre'>X</span> : Object {Allocation}<div class='sub-desc'><p>The input allocation contains vector x, supported elements type Element.F64_2.</p>\n</div></li><li><span class='pre'>incX</span> : Number<div class='sub-desc'><p>The increment for the elements of vector x, must be larger than zero.</p>\n</div></li></ul></div></div></div><div id='method-ZTRSM' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='androidx.renderscript.ScriptIntrinsicBLAS'>androidx.renderscript.ScriptIntrinsicBLAS</span><br/><a href='source/ScriptIntrinsicBLAS.html#androidx-renderscript-ScriptIntrinsicBLAS-method-ZTRSM' target='_blank' class='view-source'>view source</a></div><a href='#!/api/androidx.renderscript.ScriptIntrinsicBLAS-method-ZTRSM' class='name expandable'>ZTRSM</a>( <span class='pre'>Side, Uplo, TransA, Diag, alpha, A, B</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>ZTRSM solves one of the matrix equations\n op(A)X := alphaB   or   Xop(A) := alphaB\n op(A) is one of  op(A) = A  or  o...</div><div class='long'><p>ZTRSM solves one of the matrix equations\n op(A)<em>X := alpha</em>B   or   X<em>op(A) := alpha</em>B\n op(A) is one of  op(A) = A  or  op(A) = A<strong>T  or  op(A) = A</strong>H</p>\n\n<p> Details: http://www.netlib.org/lapack/explore-html/d1/d39/ztrsm_8f.html</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>Side</span> : Number<div class='sub-desc'><p>Specifies whether the symmetric matrix A appears on the left or right.</p>\n</div></li><li><span class='pre'>Uplo</span> : Number<div class='sub-desc'><p>Specifies whether matrix A is upper or lower triangular.</p>\n</div></li><li><span class='pre'>TransA</span> : Number<div class='sub-desc'><p>The type of transpose applied to matrix A.</p>\n</div></li><li><span class='pre'>Diag</span> : Number<div class='sub-desc'><p>Specifies whether or not A is unit triangular.</p>\n</div></li><li><span class='pre'>alpha</span> : Object {Double2}<div class='sub-desc'><p>The scalar alpha.</p>\n</div></li><li><span class='pre'>A</span> : Object {Allocation}<div class='sub-desc'><p>The input allocation contains matrix A, supported elements type Element.F64_2.</p>\n</div></li><li><span class='pre'>B</span> : Object {Allocation}<div class='sub-desc'><p>The input allocation contains matrix B, supported elements type Element.F64_2.</p>\n</div></li></ul></div></div></div><div id='method-ZTRSV' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='androidx.renderscript.ScriptIntrinsicBLAS'>androidx.renderscript.ScriptIntrinsicBLAS</span><br/><a href='source/ScriptIntrinsicBLAS.html#androidx-renderscript-ScriptIntrinsicBLAS-method-ZTRSV' target='_blank' class='view-source'>view source</a></div><a href='#!/api/androidx.renderscript.ScriptIntrinsicBLAS-method-ZTRSV' class='name expandable'>ZTRSV</a>( <span class='pre'>Uplo, TransA, Diag, A, X, incX</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>ZTRSV solves one of the systems of equations\n Ax = b   or   A**Tx = b   or   A*Hx = b\n\n Details: http://www.netlib.or...</div><div class='long'><p>ZTRSV solves one of the systems of equations\n A<em>x = b   or   A**T</em>x = b   or   A<em>*H</em>x = b</p>\n\n<p> Details: http://www.netlib.org/lapack/explore-html/d1/d2f/ztrsv_8f.html</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>Uplo</span> : Number<div class='sub-desc'><p>Specifies whether the matrix is an upper or lower triangular matrix.</p>\n</div></li><li><span class='pre'>TransA</span> : Number<div class='sub-desc'><p>The type of transpose applied to matrix A.</p>\n</div></li><li><span class='pre'>Diag</span> : Number<div class='sub-desc'><p>Specifies whether or not A is unit triangular.</p>\n</div></li><li><span class='pre'>A</span> : Object {Allocation}<div class='sub-desc'><p>The input allocation contains matrix A, supported elements type Element.F64_2.</p>\n</div></li><li><span class='pre'>X</span> : Object {Allocation}<div class='sub-desc'><p>The input allocation contains vector x, supported elements type Element.F64_2.</p>\n</div></li><li><span class='pre'>incX</span> : Number<div class='sub-desc'><p>The increment for the elements of vector x, must be larger than zero.</p>\n</div></li></ul></div></div></div><div id='method-bindAllocation' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/androidx.renderscript.Script' rel='androidx.renderscript.Script' class='defined-in docClass'>androidx.renderscript.Script</a><br/><a href='source/Script.html#androidx-renderscript-Script-method-bindAllocation' target='_blank' class='view-source'>view source</a></div><a href='#!/api/androidx.renderscript.Script-method-bindAllocation' class='name expandable'>bindAllocation</a>( <span class='pre'>va, slot</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Only intended for use by generated reflected code. ...</div><div class='long'><p>Only intended for use by generated reflected code.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>va</span> : Object {Allocation}<div class='sub-desc'>\n</div></li><li><span class='pre'>slot</span> : Number<div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-create' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='androidx.renderscript.ScriptIntrinsicBLAS'>androidx.renderscript.ScriptIntrinsicBLAS</span><br/><a href='source/ScriptIntrinsicBLAS.html#androidx-renderscript-ScriptIntrinsicBLAS-method-create' target='_blank' class='view-source'>view source</a></div><a href='#!/api/androidx.renderscript.ScriptIntrinsicBLAS-method-create' class='name expandable'>create</a>( <span class='pre'>rs</span> ) : Object {androidx.renderscript.ScriptIntrinsicBLAS}<span class=\"signature\"></span></div><div class='description'><div class='short'>Create an intrinsic to access BLAS subroutines. ...</div><div class='long'><p>Create an intrinsic to access BLAS subroutines.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>rs</span> : Object {RenderScript}<div class='sub-desc'><p>The RenderScript context</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {androidx.renderscript.ScriptIntrinsicBLAS}</span><div class='sub-desc'><p>ScriptIntrinsicBLAS</p>\n</div></li></ul></div></div></div><div id='method-destroy' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/androidx.renderscript.BaseObj' rel='androidx.renderscript.BaseObj' class='defined-in docClass'>androidx.renderscript.BaseObj</a><br/><a href='source/BaseObj.html#androidx-renderscript-BaseObj-method-destroy' target='_blank' class='view-source'>view source</a></div><a href='#!/api/androidx.renderscript.BaseObj-method-destroy' class='name expandable'>destroy</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Frees any native resources associated with this object. ...</div><div class='long'><p>Frees any native resources associated with this object.  The\n primary use is to force immediate cleanup of resources when it is\n believed the GC will not respond quickly enough.</p>\n</div></div></div><div id='method-equals' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/androidx.renderscript.BaseObj' rel='androidx.renderscript.BaseObj' class='defined-in docClass'>androidx.renderscript.BaseObj</a><br/><a href='source/BaseObj.html#androidx-renderscript-BaseObj-method-equals' target='_blank' class='view-source'>view source</a></div><a href='#!/api/androidx.renderscript.BaseObj-method-equals' class='name expandable'>equals</a>( <span class='pre'>obj</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Compare the current BaseObj with another BaseObj for equality. ...</div><div class='long'><p>Compare the current BaseObj with another BaseObj for equality.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>obj</span> : Object {Object}<div class='sub-desc'><p>The object to check equality with.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>boolean</p>\n</div></li></ul></div></div></div><div id='method-hashCode' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/androidx.renderscript.BaseObj' rel='androidx.renderscript.BaseObj' class='defined-in docClass'>androidx.renderscript.BaseObj</a><br/><a href='source/BaseObj.html#androidx-renderscript-BaseObj-method-hashCode' target='_blank' class='view-source'>view source</a></div><a href='#!/api/androidx.renderscript.BaseObj-method-hashCode' class='name expandable'>hashCode</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Calculates the hash code value for a BaseObj. ...</div><div class='long'><p>Calculates the hash code value for a BaseObj.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>int</p>\n</div></li></ul></div></div></div><div id='method-setTimeZone' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/androidx.renderscript.Script' rel='androidx.renderscript.Script' class='defined-in docClass'>androidx.renderscript.Script</a><br/><a href='source/Script.html#androidx-renderscript-Script-method-setTimeZone' target='_blank' class='view-source'>view source</a></div><a href='#!/api/androidx.renderscript.Script-method-setTimeZone' class='name expandable'>setTimeZone</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n</div></div></div><div id='method-setVar' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/androidx.renderscript.Script' rel='androidx.renderscript.Script' class='defined-in docClass'>androidx.renderscript.Script</a><br/><a href='source/Script.html#androidx-renderscript-Script-method-setVar' target='_blank' class='view-source'>view source</a></div><a href='#!/api/androidx.renderscript.Script-method-setVar' class='name expandable'>setVar</a>( <span class='pre'>index, v, e, dims</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Only intended for use by generated reflected code. ...</div><div class='long'><p>Only intended for use by generated reflected code.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>index</span> : Number<div class='sub-desc'>\n</div></li><li><span class='pre'>v</span> : Object {FieldPacker}<div class='sub-desc'>\n</div></li><li><span class='pre'>e</span> : Object {Element}<div class='sub-desc'>\n</div></li><li><span class='pre'>dims</span> : Object {int[]}<div class='sub-desc'>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});