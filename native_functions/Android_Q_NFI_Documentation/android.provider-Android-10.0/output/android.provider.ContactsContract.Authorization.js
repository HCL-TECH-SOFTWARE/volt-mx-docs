Ext.data.JsonP.android_provider_ContactsContract_Authorization({"tagname":"class","name":"android.provider.ContactsContract.Authorization","autodetected":{},"files":[{"filename":"Authorization.js","href":"Authorization.html#android-provider-ContactsContract-Authorization"}],"extends":"java.lang.Object","hide":true,"members":[{"name":"AUTHORIZATION_METHOD","tagname":"property","owner":"android.provider.ContactsContract.Authorization","id":"property-AUTHORIZATION_METHOD","meta":{}},{"name":"KEY_AUTHORIZED_URI","tagname":"property","owner":"android.provider.ContactsContract.Authorization","id":"property-KEY_AUTHORIZED_URI","meta":{}},{"name":"KEY_URI_TO_AUTHORIZE","tagname":"property","owner":"android.provider.ContactsContract.Authorization","id":"property-KEY_URI_TO_AUTHORIZE","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-android.provider.ContactsContract.Authorization","short_doc":"API for obtaining a pre-authorized version of a URI that normally requires special\n permission (beyond READ_CONTACTS)...","classIcon":"icon-class","superclasses":["java.lang.Object"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.lang.Object<div class='subclass '><strong>android.provider.ContactsContract.Authorization</strong></div></div><h4>Files</h4><div class='dependency'><a href='source/Authorization.html#android-provider-ContactsContract-Authorization' target='_blank'>Authorization.js</a></div></pre><div class='doc-contents'><p>\n API for obtaining a pre-authorized version of a URI that normally requires special\n permission (beyond READ_CONTACTS) to read.  The caller obtaining the pre-authorized URI\n must already have the necessary permissions to access the URI; otherwise a\n SecurityException will be thrown. Unlike Context.grantUriPermission,\n this can be used to grant permissions that aren't explicitly required for the URI inside\n AndroidManifest.xml. For example, permissions that are only required when reading URIs\n that refer to the user's profile.\n </p>\n\n\n<p> <p>\n The authorized URI returned in the bundle contains an expiring token that allows the\n caller to execute the query without having the special permissions that would normally\n be required. The token expires in five minutes.\n </p>\n <p>\n This API does not access disk, and should be safe to invoke from the UI thread.\n </p>\n <p>\n Example usage:</p>\n\n<pre> Uri profileUri = ContactsContract.Profile.CONTENT_VCARD_URI;\n Bundle uriBundle = new Bundle();\n uriBundle.putParcelable(ContactsContract.Authorization.KEY_URI_TO_AUTHORIZE, uri);\n Bundle authResponse = getContext().getContentResolver().call(\n         ContactsContract.AUTHORITY_URI,\n         ContactsContract.Authorization.AUTHORIZATION_METHOD,\n         null, // String arg, not used.\n         uriBundle);\n if (authResponse != null) {\n     Uri preauthorizedProfileUri = (Uri) authResponse.getParcelable(\n             ContactsContract.Authorization.KEY_AUTHORIZED_URI);\n     // This pre-authorized URI can be queried by a caller without READ_PROFILE\n     // permission.\n }\n </pre>\n\n\n<p> </p></p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-property'>Properties</h3><div class='subsection'><div id='property-AUTHORIZATION_METHOD' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.provider.ContactsContract.Authorization'>android.provider.ContactsContract.Authorization</span><br/><a href='source/Authorization.html#android-provider-ContactsContract-Authorization-property-AUTHORIZATION_METHOD' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.provider.ContactsContract.Authorization-property-AUTHORIZATION_METHOD' class='name expandable'>AUTHORIZATION_METHOD</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>The method to invoke to create a pre-authorized URI out of the input argument. ...</div><div class='long'><p>The method to invoke to create a pre-authorized URI out of the input argument.</p>\n<p>Defaults to: <code>&quot;authorize&quot;</code></p></div></div></div><div id='property-KEY_AUTHORIZED_URI' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.provider.ContactsContract.Authorization'>android.provider.ContactsContract.Authorization</span><br/><a href='source/Authorization.html#android-provider-ContactsContract-Authorization-property-KEY_AUTHORIZED_URI' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.provider.ContactsContract.Authorization-property-KEY_AUTHORIZED_URI' class='name expandable'>KEY_AUTHORIZED_URI</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>The key to retrieve from the returned Bundle to obtain the pre-authorized URI. ...</div><div class='long'><p>The key to retrieve from the returned Bundle to obtain the pre-authorized URI.</p>\n<p>Defaults to: <code>&quot;authorized_uri&quot;</code></p></div></div></div><div id='property-KEY_URI_TO_AUTHORIZE' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.provider.ContactsContract.Authorization'>android.provider.ContactsContract.Authorization</span><br/><a href='source/Authorization.html#android-provider-ContactsContract-Authorization-property-KEY_URI_TO_AUTHORIZE' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.provider.ContactsContract.Authorization-property-KEY_URI_TO_AUTHORIZE' class='name expandable'>KEY_URI_TO_AUTHORIZE</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>The key to set in the outbound Bundle with the URI that should be authorized. ...</div><div class='long'><p>The key to set in the outbound Bundle with the URI that should be authorized.</p>\n<p>Defaults to: <code>&quot;uri_to_authorize&quot;</code></p></div></div></div></div></div></div></div>","meta":{}});