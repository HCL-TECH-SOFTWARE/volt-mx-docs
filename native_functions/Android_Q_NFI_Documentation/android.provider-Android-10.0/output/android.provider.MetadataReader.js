Ext.data.JsonP.android_provider_MetadataReader({"tagname":"class","name":"android.provider.MetadataReader","autodetected":{},"files":[{"filename":"MetadataReader.js","href":"MetadataReader.html#android-provider-MetadataReader"}],"extends":"java.lang.Object","members":[{"name":"getMetadata","tagname":"method","owner":"android.provider.MetadataReader","id":"method-getMetadata","meta":{}},{"name":"isSupportedMimeType","tagname":"method","owner":"android.provider.MetadataReader","id":"method-isSupportedMimeType","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-android.provider.MetadataReader","short_doc":"Class providing support for extracting metadata from a file as a\n Bundle suitable for use with android.provider.Docum...","classIcon":"icon-class","superclasses":["java.lang.Object"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.lang.Object<div class='subclass '><strong>android.provider.MetadataReader</strong></div></div><h4>Files</h4><div class='dependency'><a href='source/MetadataReader.html#android-provider-MetadataReader' target='_blank'>MetadataReader.js</a></div></pre><div class='doc-contents'><p>Class providing support for extracting metadata from a file as a\n Bundle suitable for use with android.provider.DocumentsContract.DocumentsContract.getandroid.provider.DocumentsContract.DocumentMetadata.\n <p>Currently only EXIF data is supported.\n <p>TODO: Add support for common video and audio types, as well as PDF files.\n {@hide}</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-getMetadata' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.provider.MetadataReader'>android.provider.MetadataReader</span><br/><a href='source/MetadataReader.html#android-provider-MetadataReader-method-getMetadata' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.provider.MetadataReader-method-getMetadata' class='name expandable'>getMetadata</a>( <span class='pre'>metadata, stream, mimeType, tags</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Generic metadata retrieval method that can retrieve any available metadata from a given doc\n Currently only functions...</div><div class='long'><p>Generic metadata retrieval method that can retrieve any available metadata from a given doc\n Currently only functions for exifdata</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>metadata</span> : Object {Bundle}<div class='sub-desc'><p>the bundle to which we add any relevant metadata</p>\n</div></li><li><span class='pre'>stream</span> : Object {InputStream}<div class='sub-desc'><p>InputStream containing a file</p>\n</div></li><li><span class='pre'>mimeType</span> : String<div class='sub-desc'><p>type of the given file</p>\n</div></li><li><span class='pre'>tags</span> : Object {java.lang.String[]}<div class='sub-desc'><p>a variable amount of keys to differentiate which tags the user wants\n             if null, returns a default set of data. See DEFAULT_EXIF_TAGS.</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>IOException when the file doesn't exist</p>\n</div></li></ul></div></div></div><div id='method-isSupportedMimeType' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.provider.MetadataReader'>android.provider.MetadataReader</span><br/><a href='source/MetadataReader.html#android-provider-MetadataReader-method-isSupportedMimeType' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.provider.MetadataReader-method-isSupportedMimeType' class='name expandable'>isSupportedMimeType</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns true if caller can generally expect to get metadata results\n for the supplied mimetype. ...</div><div class='long'><p>Returns true if caller can generally expect to get metadata results\n for the supplied mimetype.</p>\n</div></div></div></div></div></div></div>","meta":{}});