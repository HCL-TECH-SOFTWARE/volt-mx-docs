Ext.data.JsonP.android_provider_FontsContract({"tagname":"class","name":"android.provider.FontsContract","autodetected":{},"files":[{"filename":"FontsContract.js","href":"FontsContract.html#android-provider-FontsContract"}],"extends":"java.lang.Object","members":[{"name":"buildTypeface","tagname":"method","owner":"android.provider.FontsContract","id":"method-buildTypeface","meta":{}},{"name":"fetchFonts","tagname":"method","owner":"android.provider.FontsContract","id":"method-fetchFonts","meta":{}},{"name":"requestFonts","tagname":"method","owner":"android.provider.FontsContract","id":"method-requestFonts","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-android.provider.FontsContract","classIcon":"icon-class","superclasses":["java.lang.Object"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.lang.Object<div class='subclass '><strong>android.provider.FontsContract</strong></div></div><h4>Files</h4><div class='dependency'><a href='source/FontsContract.html#android-provider-FontsContract' target='_blank'>FontsContract.js</a></div></pre><div class='doc-contents'><p>Utility class to deal with Font ContentProviders.</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-buildTypeface' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.provider.FontsContract'>android.provider.FontsContract</span><br/><a href='source/FontsContract.html#android-provider-FontsContract-method-buildTypeface' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.provider.FontsContract-method-buildTypeface' class='name expandable'>buildTypeface</a>( <span class='pre'>context, cancellationSignal, fonts</span> ) : Object {android.graphics.Typeface}<span class=\"signature\"></span></div><div class='description'><div class='short'>Build a Typeface from an array of android.provider.FontsContract.FontInfo\n\n Results that are marked as not ready will...</div><div class='long'><p>Build a Typeface from an array of <a href=\"#!/api/android.provider.FontsContract.FontInfo\" rel=\"android.provider.FontsContract.FontInfo\" class=\"docClass\">android.provider.FontsContract.FontInfo</a></p>\n\n<p> Results that are marked as not ready will be skipped.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>context</span> : Object {Context}<div class='sub-desc'><p>A Context that will be used to fetch the font contents.</p>\n</div></li><li><span class='pre'>cancellationSignal</span> : Object {CancellationSignal}<div class='sub-desc'><p>A signal to cancel the operation in progress, or null if none. If\n                           the operation is canceled, then android.os.OperationCanceledException will be thrown.</p>\n</div></li><li><span class='pre'>fonts</span> : Object {android.provider.FontsContract.FontInfo[]}<div class='sub-desc'><p>An array of FontInfo to be used to create a Typeface.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.graphics.Typeface}</span><div class='sub-desc'><p>A Typeface object. Returns null if typeface creation fails.</p>\n</div></li></ul></div></div></div><div id='method-fetchFonts' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.provider.FontsContract'>android.provider.FontsContract</span><br/><a href='source/FontsContract.html#android-provider-FontsContract-method-fetchFonts' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.provider.FontsContract-method-fetchFonts' class='name expandable'>fetchFonts</a>( <span class='pre'>context, cancellationSignal, request</span> ) : Object {android.provider.FontsContract.FontFamilyResult}<span class=\"signature\"></span></div><div class='description'><div class='short'>Fetch fonts given a font request. ...</div><div class='long'><p>Fetch fonts given a font request.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>context</span> : Object {Context}<div class='sub-desc'><p>A Context to be used for fetching fonts.</p>\n</div></li><li><span class='pre'>cancellationSignal</span> : Object {CancellationSignal}<div class='sub-desc'><p>A signal to cancel the operation in progress, or null if none. If\n                           the operation is canceled, then android.os.OperationCanceledException will be thrown when the\n                           query is executed.</p>\n</div></li><li><span class='pre'>request</span> : Object {FontRequest}<div class='sub-desc'><p>A FontRequest object that identifies the provider and query for the\n                request.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.provider.FontsContract.FontFamilyResult}</span><div class='sub-desc'><p>FontFamilyResult</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>NameNotFoundException If requested package or authority was not found in system.</p>\n</div></li></ul></div></div></div><div id='method-requestFonts' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.provider.FontsContract'>android.provider.FontsContract</span><br/><a href='source/FontsContract.html#android-provider-FontsContract-method-requestFonts' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.provider.FontsContract-method-requestFonts' class='name expandable'>requestFonts</a>( <span class='pre'>context, request, handler, cancellationSignal, callback</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Create a typeface object given a font request. ...</div><div class='long'><p>Create a typeface object given a font request. The font will be asynchronously fetched,\n therefore the result is delivered to the given callback. See <a href=\"#!/api/android.provider.FontRequest\" rel=\"android.provider.FontRequest\" class=\"docClass\">android.provider.FontRequest</a>.\n Only one of the methods in callback will be invoked, depending on whether the request\n succeeds or fails. These calls will happen on the caller thread.</p>\n\n<p> Note that the result Typeface may be cached internally and the same instance will be returned\n the next time you call this method with the same request. If you want to bypass this cache,\n use <a href=\"#!/api/android.provider.FontsContract-method-fetchFonts\" rel=\"android.provider.FontsContract-method-fetchFonts\" class=\"docClass\">fetchFonts</a> and <a href=\"#!/api/android.provider.FontsContract-method-buildTypeface\" rel=\"android.provider.FontsContract-method-buildTypeface\" class=\"docClass\">buildTypeface</a> instead.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>context</span> : Object {Context}<div class='sub-desc'><p>A context to be used for fetching from font provider.</p>\n</div></li><li><span class='pre'>request</span> : Object {FontRequest}<div class='sub-desc'><p>A FontRequest object that identifies the provider and query for the\n                request. May not be null.</p>\n</div></li><li><span class='pre'>handler</span> : Object {Handler}<div class='sub-desc'><p>A handler to be processed the font fetching.</p>\n</div></li><li><span class='pre'>cancellationSignal</span> : Object {CancellationSignal}<div class='sub-desc'><p>A signal to cancel the operation in progress, or null if none. If\n                           the operation is canceled, then android.os.OperationCanceledException will be thrown.</p>\n</div></li><li><span class='pre'>callback</span> : Object {FontsContract.FontRequestCallback}<div class='sub-desc'><p>A callback that will be triggered when results are obtained. May not be null.</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});