Ext.data.JsonP.android_provider_ContactsContract_RawContacts({"tagname":"class","name":"android.provider.ContactsContract.RawContacts","autodetected":{},"files":[{"filename":"RawContacts.js","href":"RawContacts.html#android-provider-ContactsContract-RawContacts"}],"extends":"java.lang.Object","members":[{"name":"AGGREGATION_MODE_DEFAULT","tagname":"property","owner":"android.provider.ContactsContract.RawContacts","id":"property-AGGREGATION_MODE_DEFAULT","meta":{}},{"name":"AGGREGATION_MODE_DISABLED","tagname":"property","owner":"android.provider.ContactsContract.RawContacts","id":"property-AGGREGATION_MODE_DISABLED","meta":{}},{"name":"AGGREGATION_MODE_IMMEDIATE","tagname":"property","owner":"android.provider.ContactsContract.RawContacts","id":"property-AGGREGATION_MODE_IMMEDIATE","meta":{"deprecated":{"text":"<p>Aggregation is synchronous, this historic value is a no-op</p>\n"}}},{"name":"AGGREGATION_MODE_SUSPENDED","tagname":"property","owner":"android.provider.ContactsContract.RawContacts","id":"property-AGGREGATION_MODE_SUSPENDED","meta":{}},{"name":"CONTENT_ITEM_TYPE","tagname":"property","owner":"android.provider.ContactsContract.RawContacts","id":"property-CONTENT_ITEM_TYPE","meta":{}},{"name":"CONTENT_TYPE","tagname":"property","owner":"android.provider.ContactsContract.RawContacts","id":"property-CONTENT_TYPE","meta":{}},{"name":"CONTENT_URI","tagname":"property","owner":"android.provider.ContactsContract.RawContacts","id":"property-CONTENT_URI","meta":{}},{"name":"getContactLookupUri","tagname":"method","owner":"android.provider.ContactsContract.RawContacts","id":"method-getContactLookupUri","meta":{}},{"name":"newEntityIterator","tagname":"method","owner":"android.provider.ContactsContract.RawContacts","id":"method-newEntityIterator","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-android.provider.ContactsContract.RawContacts","short_doc":"implements android.provider.BaseColumns\n\n implements android.provider.ContactsContract.RawContactsColumns\n\n implement...","classIcon":"icon-class","superclasses":["java.lang.Object"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.lang.Object<div class='subclass '><strong>android.provider.ContactsContract.RawContacts</strong></div></div><h4>Files</h4><div class='dependency'><a href='source/RawContacts.html#android-provider-ContactsContract-RawContacts' target='_blank'>RawContacts.js</a></div></pre><div class='doc-contents'><p>implements <a href=\"#!/api/android.provider.BaseColumns\" rel=\"android.provider.BaseColumns\" class=\"docClass\">android.provider.BaseColumns</a></p>\n\n<p> implements android.provider.ContactsContract.RawContactsColumns</p>\n\n<p> implements android.provider.ContactsContract.ContactOptionsColumns</p>\n\n<p> implements android.provider.ContactsContract.ContactNameColumns</p>\n\n<p> implements android.provider.ContactsContract.SyncColumns</p>\n\n<p>Constants for the raw contacts table, which contains one row of contact\n information for each person in each synced account. Sync adapters and\n contact management apps\n are the primary consumers of this API.</p>\n\n<p> <h3>Aggregation</h3>\n <p>\n As soon as a raw contact is inserted or whenever its constituent data\n changes, the provider will check if the raw contact matches other\n existing raw contacts and if so will aggregate it with those. The\n aggregation is reflected in the <a href=\"#!/api/android.provider.ContactsContract.RawContacts\" rel=\"android.provider.ContactsContract.RawContacts\" class=\"docClass\">android.provider.ContactsContract.RawContacts</a> table by the change of the\n CONTACT_ID field, which is the reference to the aggregate contact.\n </p>\n <p>\n Changes to the structured name, organization, phone number, email address,\n or nickname trigger a re-aggregation.\n </p>\n <p>\n See also <a href=\"#!/api/android.provider.ContactsContract.AggregationExceptions\" rel=\"android.provider.ContactsContract.AggregationExceptions\" class=\"docClass\">android.provider.ContactsContract.AggregationExceptions</a> for a mechanism to control\n aggregation programmatically.\n </p></p>\n\n<p> <h3>Operations</h3>\n <dl>\n <dt><b>Insert</b></dt>\n <dd>\n <p>\n Raw contacts can be inserted incrementally or in a batch.\n The incremental method is more traditional but less efficient.\n It should be used\n only if no <a href=\"#!/api/android.provider.ContactsContract.Data\" rel=\"android.provider.ContactsContract.Data\" class=\"docClass\">android.provider.ContactsContract.Data</a> values are available at the time the raw contact is created:</p>\n\n<pre> ContentValues values = new ContentValues();\n values.put(RawContacts.ACCOUNT_TYPE, accountType);\n values.put(RawContacts.ACCOUNT_NAME, accountName);\n Uri rawContactUri = getContentResolver().insert(RawContacts.CONTENT_URI, values);\n long rawContactId = ContentUris.parseId(rawContactUri);\n </pre>\n\n\n<p> </p>\n <p>\n Once <a href=\"#!/api/android.provider.ContactsContract.Data\" rel=\"android.provider.ContactsContract.Data\" class=\"docClass\">android.provider.ContactsContract.Data</a> values become available, insert those.\n For example, here's how you would insert a name:</p>\n\n<pre> values.clear();\n values.put(Data.RAW_CONTACT_ID, rawContactId);\n values.put(Data.MIMETYPE, StructuredName.CONTENT_ITEM_TYPE);\n values.put(StructuredName.DISPLAY_NAME, &quot;Mike Sullivan&quot;);\n getContentResolver().insert(Data.CONTENT_URI, values);\n </pre>\n\n\n<p> </p>\n <p>\n The batch method is by far preferred.  It inserts the raw contact and its\n constituent data rows in a single database transaction\n and causes at most one aggregation pass.</p>\n\n<pre> ArrayList&lt;ContentProviderOperation&gt; ops =\n          new ArrayList&lt;ContentProviderOperation&gt;();\n ...\n int rawContactInsertIndex = ops.size();\n ops.add(ContentProviderOperation.newInsert(RawContacts.CONTENT_URI)\n          .withValue(RawContacts.ACCOUNT_TYPE, accountType)\n          .withValue(RawContacts.ACCOUNT_NAME, accountName)\n          .build());\n\n ops.add(ContentProviderOperation.newInsert(Data.CONTENT_URI)\n          .withValueBackReference(Data.RAW_CONTACT_ID, rawContactInsertIndex)\n          .withValue(Data.MIMETYPE, StructuredName.CONTENT_ITEM_TYPE)\n          .withValue(StructuredName.DISPLAY_NAME, &quot;Mike Sullivan&quot;)\n          .build());\n\n getContentResolver().applyBatch(ContactsContract.AUTHORITY, ops);\n </pre>\n\n\n<p> </p>\n <p>\n Note the use of int)\n to refer to the as-yet-unknown index value of the raw contact inserted in the\n first operation.\n </p></dd></dl></p>\n\n<p> <dt><b>Update</b></dt>\n <dd><p>\n Raw contacts can be updated incrementally or in a batch.\n Batch mode should be used whenever possible.\n The procedures and considerations are analogous to those documented above for inserts.\n </p></dd>\n <dt><b>Delete</b></dt>\n <dd><p>When a raw contact is deleted, all of its Data rows as well as StatusUpdates,\n AggregationExceptions, PhoneLookup rows are deleted automatically. When all raw\n contacts associated with a <a href=\"#!/api/android.provider.Contacts\" rel=\"android.provider.Contacts\" class=\"docClass\">android.provider.Contacts</a> row are deleted, the <a href=\"#!/api/android.provider.Contacts\" rel=\"android.provider.Contacts\" class=\"docClass\">android.provider.Contacts</a> row\n itself is also deleted automatically.\n </p>\n <p>\n The invocation of {@code resolver.delete(...)}, does not immediately delete\n a raw contacts row.\n Instead, it sets the DELETED flag on the raw contact and\n removes the raw contact from its aggregate contact.\n The sync adapter then deletes the raw contact from the server and\n finalizes phone-side deletion by calling {@code resolver.delete(...)}\n again and passing the <a href=\"#!/api/android.provider.ContactsContract-property-CALLER_IS_SYNCADAPTER\" rel=\"android.provider.ContactsContract-property-CALLER_IS_SYNCADAPTER\" class=\"docClass\">android.provider.ContactsContract.CALLER_IS_SYNCADAPTER</a> query parameter.<p>\n <p>Some sync adapters are read-only, meaning that they only sync server-side\n changes to the phone, but not the reverse.  If one of those raw contacts\n is marked for deletion, it will remain on the phone.  However it will be\n effectively invisible, because it will not be part of any aggregate contact.\n </p></p></p></dd></p>\n\n<p> <dt><b>Query</b></dt>\n <dd>\n <p>\n It is easy to find all raw contacts in a Contact:</p>\n\n<pre> Cursor c = getContentResolver().query(RawContacts.CONTENT_URI,\n          new String[]{RawContacts._ID},\n          RawContacts.CONTACT_ID + \"=?\",\n          new String[]{String.valueOf(contactId)}, null);\n </pre>\n\n\n<p> </p>\n <p>\n To find raw contacts within a specific account,\n you can either put the account name and type in the selection or pass them as query\n parameters.  The latter approach is preferable, especially when you can reuse the\n URI:</p>\n\n<pre> Uri rawContactUri = RawContacts.CONTENT_URI.buildUpon()\n          .appendQueryParameter(RawContacts.ACCOUNT_NAME, accountName)\n          .appendQueryParameter(RawContacts.ACCOUNT_TYPE, accountType)\n          .build();\n Cursor c1 = getContentResolver().query(rawContactUri,\n          RawContacts.STARRED + \"&lt;&gt;0\", null, null, null);\n ...\n Cursor c2 = getContentResolver().query(rawContactUri,\n          RawContacts.DELETED + \"&lt;&gt;0\", null, null, null);\n </pre>\n\n\n<p> </p>\n <p>The best way to read a raw contact along with all the data associated with it is\n by using the android.provider.RawContacts.Entity directory. If the raw contact has data rows,\n the Entity cursor will contain a row for each data row.  If the raw contact has no\n data rows, the cursor will still contain one row with the raw contact-level information.</p>\n\n<pre> Uri rawContactUri = ContentUris.withAppendedId(RawContacts.CONTENT_URI, rawContactId);\n Uri entityUri = Uri.withAppendedPath(rawContactUri, Entity.CONTENT_DIRECTORY);\n Cursor c = getContentResolver().query(entityUri,\n          new String[]{RawContacts.SOURCE_ID, Entity.DATA_ID, Entity.MIMETYPE, Entity.DATA1},\n          null, null, null);\n try {\n     while (c.moveToNext()) {\n         String sourceId = c.getString(0);\n         if (!c.isNull(1)) {\n             String mimeType = c.getString(2);\n             String data = c.getString(3);\n             ...\n         }\n     }\n } finally {\n     c.close();\n }\n </pre>\n\n\n<p> </p>\n </dd>\n \n <h2>Columns</h2></p>\n\n<p> <table class=\"jd-sumtable\">\n <tr>\n <th colspan='4'>RawContacts</th>\n </tr>\n <tr>\n <td>long</td>\n <td>_ID</td>\n <td>read-only</td>\n <td>Row ID. Sync adapters should try to preserve row IDs during updates. In other words,\n it is much better for a sync adapter to update a raw contact rather than to delete and\n re-insert it.</td>\n </tr>\n <tr>\n <td>long</td>\n <td>CONTACT_ID</td>\n <td>read-only</td>\n <td>The ID of the row in the android.provider.ContactsContract.Contacts table\n that this raw contact belongs\n to. Raw contacts are linked to contacts by the aggregation process, which can be controlled\n by the AGGREGATION_MODE field and <a href=\"#!/api/android.provider.ContactsContract.AggregationExceptions\" rel=\"android.provider.ContactsContract.AggregationExceptions\" class=\"docClass\">android.provider.ContactsContract.AggregationExceptions</a>.</td>\n </tr>\n <tr>\n <td>int</td>\n <td>AGGREGATION_MODE</td>\n <td>read/write</td>\n <td>A mechanism that allows programmatic control of the aggregation process. The allowed\n values are <a href=\"#!/api/android.provider.ContactsContract.RawContacts-property-AGGREGATION_MODE_DEFAULT\" rel=\"android.provider.ContactsContract.RawContacts-property-AGGREGATION_MODE_DEFAULT\" class=\"docClass\">AGGREGATION_MODE_DEFAULT</a>, <a href=\"#!/api/android.provider.ContactsContract.RawContacts-property-AGGREGATION_MODE_DISABLED\" rel=\"android.provider.ContactsContract.RawContacts-property-AGGREGATION_MODE_DISABLED\" class=\"docClass\">AGGREGATION_MODE_DISABLED</a>\n and <a href=\"#!/api/android.provider.ContactsContract.RawContacts-property-AGGREGATION_MODE_SUSPENDED\" rel=\"android.provider.ContactsContract.RawContacts-property-AGGREGATION_MODE_SUSPENDED\" class=\"docClass\">AGGREGATION_MODE_SUSPENDED</a>. See also <a href=\"#!/api/android.provider.ContactsContract.AggregationExceptions\" rel=\"android.provider.ContactsContract.AggregationExceptions\" class=\"docClass\">android.provider.ContactsContract.AggregationExceptions</a>.</td>\n </tr>\n <tr>\n <td>int</td>\n <td>DELETED</td>\n <td>read/write</td>\n <td>The \"deleted\" flag: \"0\" by default, \"1\" if the row has been marked\n for deletion. When android.content.ContentResolver.delete is\n called on a raw contact, it is marked for deletion and removed from its\n aggregate contact. The sync adaptor deletes the raw contact on the server and\n then calls ContactResolver.delete once more, this time passing the\n <a href=\"#!/api/android.provider.ContactsContract-property-CALLER_IS_SYNCADAPTER\" rel=\"android.provider.ContactsContract-property-CALLER_IS_SYNCADAPTER\" class=\"docClass\">android.provider.ContactsContract.CALLER_IS_SYNCADAPTER</a> query parameter to finalize\n the data removal.</td>\n </tr>\n <tr>\n <td>int</td>\n <td>STARRED</td>\n <td>read/write</td>\n <td>An indicator for favorite contacts: '1' if favorite, '0' otherwise.\n Changing this field immediately affects the corresponding aggregate contact:\n if any raw contacts in that aggregate contact are starred, then the contact\n itself is marked as starred.</td>\n </tr>\n <tr>\n <td>String</td>\n <td>CUSTOM_RINGTONE</td>\n <td>read/write</td>\n <td>A custom ringtone associated with a raw contact. Typically this is the\n URI returned by an activity launched with the\n android.media.RingtoneManager.ACTION_RINGTONE_PICKER intent.\n To have an effect on the corresponding value of the aggregate contact, this field\n should be set at the time the raw contact is inserted. To set a custom\n ringtone on a contact, use the field Contacts.CUSTOM_RINGTONE\n instead.</td>\n </tr>\n <tr>\n <td>int</td>\n <td>SEND_TO_VOICEMAIL</td>\n <td>read/write</td>\n <td>An indicator of whether calls from this raw contact should be forwarded\n directly to voice mail ('1') or not ('0'). To have an effect\n on the corresponding value of the aggregate contact, this field\n should be set at the time the raw contact is inserted.</td>\n </tr>\n <tr>\n <td>String</td>\n <td>ACCOUNT_NAME</td>\n <td>read/write-once</td>\n <td>The name of the account instance to which this row belongs, which when paired with\n ACCOUNT_TYPE identifies a specific account.\n For example, this will be the Gmail address if it is a Google account.\n It should be set at the time the raw contact is inserted and never\n changed afterwards.</td>\n </tr>\n <tr>\n <td>String</td>\n <td>ACCOUNT_TYPE</td>\n <td>read/write-once</td>\n <td>\n <p>\n The type of account to which this row belongs, which when paired with\n ACCOUNT_NAME identifies a specific account.\n It should be set at the time the raw contact is inserted and never\n changed afterwards.\n </p>\n <p>\n To ensure uniqueness, new account types should be chosen according to the\n Java package naming convention.  Thus a Google account is of type \"com.google\".\n </p>\n </td>\n </tr>\n <tr>\n <td>String</td>\n <td>DATA_SET</td>\n <td>read/write-once</td>\n <td>\n <p>\n The data set within the account that this row belongs to.  This allows\n multiple sync adapters for the same account type to distinguish between\n each others' data.  The combination of ACCOUNT_TYPE,\n ACCOUNT_NAME, and DATA_SET identifies a set of data\n that is associated with a single sync adapter.\n </p>\n <p>\n This is empty by default, and is completely optional.  It only needs to\n be populated if multiple sync adapters are entering distinct data for\n the same account type and account name.\n </p>\n <p>\n It should be set at the time the raw contact is inserted and never\n changed afterwards.\n </p>\n </td>\n </tr>\n <tr>\n <td>String</td>\n <td>SOURCE_ID</td>\n <td>read/write</td>\n <td>String that uniquely identifies this row to its source account.\n Typically it is set at the time the raw contact is inserted and never\n changed afterwards. The one notable exception is a new raw contact: it\n will have an account name and type (and possibly a data set), but no\n source id. This indicates to the sync adapter that a new contact needs\n to be created server-side and its ID stored in the corresponding\n SOURCE_ID field on the phone.\n </td>\n </tr>\n <tr>\n <td>int</td>\n <td>VERSION</td>\n <td>read-only</td>\n <td>Version number that is updated whenever this row or its related data\n changes. This field can be used for optimistic locking of a raw contact.\n </td>\n </tr>\n <tr>\n <td>int</td>\n <td>DIRTY</td>\n <td>read/write</td>\n <td>Flag indicating that VERSION has changed, and this row needs\n to be synchronized by its owning account.  The value is set to \"1\" automatically\n whenever the raw contact changes, unless the URI has the\n <a href=\"#!/api/android.provider.ContactsContract-property-CALLER_IS_SYNCADAPTER\" rel=\"android.provider.ContactsContract-property-CALLER_IS_SYNCADAPTER\" class=\"docClass\">android.provider.ContactsContract.CALLER_IS_SYNCADAPTER</a> query parameter specified.\n The sync adapter should always supply this query parameter to prevent\n unnecessary synchronization: user changes some data on the server,\n the sync adapter updates the contact on the phone (without the\n CALLER_IS_SYNCADAPTER flag) flag, which sets the DIRTY flag,\n which triggers a sync to bring the changes to the server.\n </td>\n </tr>\n <tr>\n <td>String</td>\n <td>SYNC1</td>\n <td>read/write</td>\n <td>Generic column provided for arbitrary use by sync adapters.\n The content provider\n stores this information on behalf of the sync adapter but does not\n interpret it in any way.\n </td>\n </tr>\n <tr>\n <td>String</td>\n <td>SYNC2</td>\n <td>read/write</td>\n <td>Generic column for use by sync adapters.\n </td>\n </tr>\n <tr>\n <td>String</td>\n <td>SYNC3</td>\n <td>read/write</td>\n <td>Generic column for use by sync adapters.\n </td>\n </tr>\n <tr>\n <td>String</td>\n <td>SYNC4</td>\n <td>read/write</td>\n <td>Generic column for use by sync adapters.\n </td>\n </tr>\n </table></p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-property'>Properties</h3><div class='subsection'><div id='property-AGGREGATION_MODE_DEFAULT' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.provider.ContactsContract.RawContacts'>android.provider.ContactsContract.RawContacts</span><br/><a href='source/RawContacts.html#android-provider-ContactsContract-RawContacts-property-AGGREGATION_MODE_DEFAULT' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.provider.ContactsContract.RawContacts-property-AGGREGATION_MODE_DEFAULT' class='name expandable'>AGGREGATION_MODE_DEFAULT</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Aggregation mode: aggregate immediately after insert or update operation(s) are complete. ...</div><div class='long'><p>Aggregation mode: aggregate immediately after insert or update operation(s) are complete.</p>\n<p>Defaults to: <code>&quot;0&quot;</code></p></div></div></div><div id='property-AGGREGATION_MODE_DISABLED' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.provider.ContactsContract.RawContacts'>android.provider.ContactsContract.RawContacts</span><br/><a href='source/RawContacts.html#android-provider-ContactsContract-RawContacts-property-AGGREGATION_MODE_DISABLED' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.provider.ContactsContract.RawContacts-property-AGGREGATION_MODE_DISABLED' class='name expandable'>AGGREGATION_MODE_DISABLED</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Aggregation mode: never aggregate this raw contact. ...</div><div class='long'><p>\nAggregation mode: never aggregate this raw contact.  The raw contact will not\nhave a corresponding <a href=\"#!/api/android.provider.Contacts\" rel=\"android.provider.Contacts\" class=\"docClass\">android.provider.Contacts</a> aggregate and therefore will not be included in\n<a href=\"#!/api/android.provider.Contacts\" rel=\"android.provider.Contacts\" class=\"docClass\">android.provider.Contacts</a> query results.\n</p>\n\n\n<p>\nFor example, this mode can be used for a raw contact that is marked for deletion while\nwaiting for the deletion to occur on the server side.\n</p>\n\n\n<p>@see <a href=\"#!/api/android.provider.ContactsContract.RawContacts-property-AGGREGATION_MODE_SUSPENDED\" rel=\"android.provider.ContactsContract.RawContacts-property-AGGREGATION_MODE_SUSPENDED\" class=\"docClass\">AGGREGATION_MODE_SUSPENDED</a></p>\n<p>Defaults to: <code>&quot;3&quot;</code></p></div></div></div><div id='property-AGGREGATION_MODE_IMMEDIATE' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.provider.ContactsContract.RawContacts'>android.provider.ContactsContract.RawContacts</span><br/><a href='source/RawContacts.html#android-provider-ContactsContract-RawContacts-property-AGGREGATION_MODE_IMMEDIATE' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.provider.ContactsContract.RawContacts-property-AGGREGATION_MODE_IMMEDIATE' class='name expandable'>AGGREGATION_MODE_IMMEDIATE</a> : String<span class=\"signature\"><span class='deprecated' >deprecated</span></span></div><div class='description'><div class='short'>Aggregation mode: aggregate at the time the raw contact is inserted/updated. ...</div><div class='long'><p>Aggregation mode: aggregate at the time the raw contact is inserted/updated.</p>\n<p>Defaults to: <code>&quot;1&quot;</code></p>        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This property has been <strong>deprecated</strong> </p>\n        <p>Aggregation is synchronous, this historic value is a no-op</p>\n\n        </div>\n</div></div></div><div id='property-AGGREGATION_MODE_SUSPENDED' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.provider.ContactsContract.RawContacts'>android.provider.ContactsContract.RawContacts</span><br/><a href='source/RawContacts.html#android-provider-ContactsContract-RawContacts-property-AGGREGATION_MODE_SUSPENDED' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.provider.ContactsContract.RawContacts-property-AGGREGATION_MODE_SUSPENDED' class='name expandable'>AGGREGATION_MODE_SUSPENDED</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Aggregation mode: aggregation suspended temporarily, and is likely to be resumed later. ...</div><div class='long'><p>\nAggregation mode: aggregation suspended temporarily, and is likely to be resumed later.\nChanges to the raw contact will update the associated aggregate contact but will not\nresult in any change in how the contact is aggregated. Similar to\n<a href=\"#!/api/android.provider.ContactsContract.RawContacts-property-AGGREGATION_MODE_DISABLED\" rel=\"android.provider.ContactsContract.RawContacts-property-AGGREGATION_MODE_DISABLED\" class=\"docClass\">AGGREGATION_MODE_DISABLED</a>, but maintains a link to the corresponding\n<a href=\"#!/api/android.provider.Contacts\" rel=\"android.provider.Contacts\" class=\"docClass\">android.provider.Contacts</a> aggregate.\n</p>\n\n\n<p>\nThis can be used to postpone aggregation until after a series of updates, for better\nperformance and/or user experience.\n</p>\n\n\n<p>\nNote that changing\nAGGREGATION_MODE from <a href=\"#!/api/android.provider.ContactsContract.RawContacts-property-AGGREGATION_MODE_SUSPENDED\" rel=\"android.provider.ContactsContract.RawContacts-property-AGGREGATION_MODE_SUSPENDED\" class=\"docClass\">AGGREGATION_MODE_SUSPENDED</a> to\n<a href=\"#!/api/android.provider.ContactsContract.RawContacts-property-AGGREGATION_MODE_DEFAULT\" rel=\"android.provider.ContactsContract.RawContacts-property-AGGREGATION_MODE_DEFAULT\" class=\"docClass\">AGGREGATION_MODE_DEFAULT</a> does not trigger an aggregation pass, but any\nsubsequent\nchange to the raw contact's data will.\n</p>\n\n<p>Defaults to: <code>&quot;2&quot;</code></p></div></div></div><div id='property-CONTENT_ITEM_TYPE' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.provider.ContactsContract.RawContacts'>android.provider.ContactsContract.RawContacts</span><br/><a href='source/RawContacts.html#android-provider-ContactsContract-RawContacts-property-CONTENT_ITEM_TYPE' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.provider.ContactsContract.RawContacts-property-CONTENT_ITEM_TYPE' class='name expandable'>CONTENT_ITEM_TYPE</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>The MIME type of the results when a raw contact ID is appended to CONTENT_URI,\nyielding a subdirectory of a single pe...</div><div class='long'><p>The MIME type of the results when a raw contact ID is appended to <a href=\"#!/api/android.provider.ContactsContract.RawContacts-property-CONTENT_URI\" rel=\"android.provider.ContactsContract.RawContacts-property-CONTENT_URI\" class=\"docClass\">CONTENT_URI</a>,\nyielding a subdirectory of a single person.</p>\n<p>Defaults to: <code>&quot;vnd.android.cursor.item/raw_contact&quot;</code></p></div></div></div><div id='property-CONTENT_TYPE' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.provider.ContactsContract.RawContacts'>android.provider.ContactsContract.RawContacts</span><br/><a href='source/RawContacts.html#android-provider-ContactsContract-RawContacts-property-CONTENT_TYPE' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.provider.ContactsContract.RawContacts-property-CONTENT_TYPE' class='name expandable'>CONTENT_TYPE</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>The MIME type of the results from CONTENT_URI when a specific\nID value is not provided, and multiple raw contacts may...</div><div class='long'><p>The MIME type of the results from <a href=\"#!/api/android.provider.ContactsContract.RawContacts-property-CONTENT_URI\" rel=\"android.provider.ContactsContract.RawContacts-property-CONTENT_URI\" class=\"docClass\">CONTENT_URI</a> when a specific\nID value is not provided, and multiple raw contacts may be returned.</p>\n<p>Defaults to: <code>&quot;vnd.android.cursor.dir/raw_contact&quot;</code></p></div></div></div><div id='property-CONTENT_URI' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.provider.ContactsContract.RawContacts'>android.provider.ContactsContract.RawContacts</span><br/><a href='source/RawContacts.html#android-provider-ContactsContract-RawContacts-property-CONTENT_URI' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.provider.ContactsContract.RawContacts-property-CONTENT_URI' class='name expandable'>CONTENT_URI</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>The content:// style URI for this table, which requests a directory of\nraw contact rows matching the selection criteria. ...</div><div class='long'><p>The content:// style URI for this table, which requests a directory of\nraw contact rows matching the selection criteria.</p>\n<p>Defaults to: <code>&quot;null&quot;</code></p></div></div></div></div></div><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-getContactLookupUri' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.provider.ContactsContract.RawContacts'>android.provider.ContactsContract.RawContacts</span><br/><a href='source/RawContacts.html#android-provider-ContactsContract-RawContacts-method-getContactLookupUri' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.provider.ContactsContract.RawContacts-method-getContactLookupUri' class='name expandable'>getContactLookupUri</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Build a android.provider.ContactsContract.Contacts.CONTENT_LOOKUP_URI\n style Uri for the parent android.provider.Cont...</div><div class='long'><p>Build a android.provider.ContactsContract.Contacts.CONTENT_LOOKUP_URI\n style Uri for the parent android.provider.ContactsContract.Contacts\n entry of the given <a href=\"#!/api/android.provider.ContactsContract.RawContacts\" rel=\"android.provider.ContactsContract.RawContacts\" class=\"docClass\">android.provider.ContactsContract.RawContacts</a> entry.</p>\n</div></div></div><div id='method-newEntityIterator' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.provider.ContactsContract.RawContacts'>android.provider.ContactsContract.RawContacts</span><br/><a href='source/RawContacts.html#android-provider-ContactsContract-RawContacts-method-newEntityIterator' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.provider.ContactsContract.RawContacts-method-newEntityIterator' class='name expandable'>newEntityIterator</a>( <span class='pre'>cursor</span> ) : Object {android.content.EntityIterator}<span class=\"signature\"></span></div><div class='description'><div class='short'>TODO: javadoc ...</div><div class='long'><p>TODO: javadoc</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>cursor</span> : Object {Cursor}<div class='sub-desc'>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.content.EntityIterator}</span><div class='sub-desc'>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});