Ext.data.JsonP.android_provider_DocumentsProvider({"tagname":"class","name":"android.provider.DocumentsProvider","autodetected":{},"files":[{"filename":"DocumentsProvider.js","href":"DocumentsProvider.html#android-provider-DocumentsProvider"}],"extends":"android.content.ContentProvider","members":[{"name":"attachInfo","tagname":"method","owner":"android.provider.DocumentsProvider","id":"method-attachInfo","meta":{}},{"name":"attachInfoForTesting","tagname":"method","owner":"android.provider.DocumentsProvider","id":"method-attachInfoForTesting","meta":{}},{"name":"call","tagname":"method","owner":"android.provider.DocumentsProvider","id":"method-call","meta":{}},{"name":"canonicalize","tagname":"method","owner":"android.provider.DocumentsProvider","id":"method-canonicalize","meta":{}},{"name":"copyDocument","tagname":"method","owner":"android.provider.DocumentsProvider","id":"method-copyDocument","meta":{}},{"name":"createDocument","tagname":"method","owner":"android.provider.DocumentsProvider","id":"method-createDocument","meta":{}},{"name":"createWebLinkIntent","tagname":"method","owner":"android.provider.DocumentsProvider","id":"method-createWebLinkIntent","meta":{}},{"name":"delete","tagname":"method","owner":"android.provider.DocumentsProvider","id":"method-delete","meta":{}},{"name":"deleteDocument","tagname":"method","owner":"android.provider.DocumentsProvider","id":"method-deleteDocument","meta":{}},{"name":"ejectRoot","tagname":"method","owner":"android.provider.DocumentsProvider","id":"method-ejectRoot","meta":{}},{"name":"findDocumentPath","tagname":"method","owner":"android.provider.DocumentsProvider","id":"method-findDocumentPath","meta":{}},{"name":"getDocumentMetadata","tagname":"method","owner":"android.provider.DocumentsProvider","id":"method-getDocumentMetadata","meta":{}},{"name":"getDocumentStreamTypes","tagname":"method","owner":"android.provider.DocumentsProvider","id":"method-getDocumentStreamTypes","meta":{}},{"name":"getDocumentType","tagname":"method","owner":"android.provider.DocumentsProvider","id":"method-getDocumentType","meta":{}},{"name":"getStreamTypes","tagname":"method","owner":"android.provider.DocumentsProvider","id":"method-getStreamTypes","meta":{}},{"name":"getType","tagname":"method","owner":"android.provider.DocumentsProvider","id":"method-getType","meta":{}},{"name":"insert","tagname":"method","owner":"android.provider.DocumentsProvider","id":"method-insert","meta":{}},{"name":"isChildDocument","tagname":"method","owner":"android.provider.DocumentsProvider","id":"method-isChildDocument","meta":{}},{"name":"moveDocument","tagname":"method","owner":"android.provider.DocumentsProvider","id":"method-moveDocument","meta":{}},{"name":"openAssetFile","tagname":"method","owner":"android.provider.DocumentsProvider","id":"method-openAssetFile","meta":{}},{"name":"openDocument","tagname":"method","owner":"android.provider.DocumentsProvider","id":"method-openDocument","meta":{}},{"name":"openDocumentThumbnail","tagname":"method","owner":"android.provider.DocumentsProvider","id":"method-openDocumentThumbnail","meta":{}},{"name":"openFile","tagname":"method","owner":"android.provider.DocumentsProvider","id":"method-openFile","meta":{}},{"name":"openTypedAssetFile","tagname":"method","owner":"android.provider.DocumentsProvider","id":"method-openTypedAssetFile","meta":{}},{"name":"openTypedDocument","tagname":"method","owner":"android.provider.DocumentsProvider","id":"method-openTypedDocument","meta":{}},{"name":"query","tagname":"method","owner":"android.provider.DocumentsProvider","id":"method-query","meta":{}},{"name":"queryChildDocuments","tagname":"method","owner":"android.provider.DocumentsProvider","id":"method-queryChildDocuments","meta":{}},{"name":"queryChildDocumentsForManage","tagname":"method","owner":"android.provider.DocumentsProvider","id":"method-queryChildDocumentsForManage","meta":{}},{"name":"queryDocument","tagname":"method","owner":"android.provider.DocumentsProvider","id":"method-queryDocument","meta":{}},{"name":"queryRecentDocuments","tagname":"method","owner":"android.provider.DocumentsProvider","id":"method-queryRecentDocuments","meta":{}},{"name":"queryRoots","tagname":"method","owner":"android.provider.DocumentsProvider","id":"method-queryRoots","meta":{}},{"name":"querySearchDocuments","tagname":"method","owner":"android.provider.DocumentsProvider","id":"method-querySearchDocuments","meta":{}},{"name":"removeDocument","tagname":"method","owner":"android.provider.DocumentsProvider","id":"method-removeDocument","meta":{}},{"name":"renameDocument","tagname":"method","owner":"android.provider.DocumentsProvider","id":"method-renameDocument","meta":{}},{"name":"revokeDocumentPermission","tagname":"method","owner":"android.provider.DocumentsProvider","id":"method-revokeDocumentPermission","meta":{}},{"name":"update","tagname":"method","owner":"android.provider.DocumentsProvider","id":"method-update","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-android.provider.DocumentsProvider","short_doc":"Base class for a document provider. ...","classIcon":"icon-class","superclasses":["android.content.ContentProvider"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>android.content.ContentProvider<div class='subclass '><strong>android.provider.DocumentsProvider</strong></div></div><h4>Files</h4><div class='dependency'><a href='source/DocumentsProvider.html#android-provider-DocumentsProvider' target='_blank'>DocumentsProvider.js</a></div></pre><div class='doc-contents'><p>Base class for a document provider. A document provider offers read and write\n access to durable files, such as files stored on a local disk, or files in a\n cloud storage service. To create a document provider, extend this class,\n implement the abstract methods, and add it to your manifest like this:</p>\n\n<p> <pre class=\"prettyprint\">&lt;manifest&gt;\n    ...\n    &lt;application&gt;\n        ...\n        &lt;provider\n            android:name=\"com.example.MyCloudProvider\"\n            android:authorities=\"com.example.mycloudprovider\"\n            android:exported=\"true\"\n            android:grantUriPermissions=\"true\"\n            android:permission=\"android.permission.MANAGE_DOCUMENTS\"\n            android:enabled=\"@bool/isAtLeastKitKat\"&gt;\n            &lt;intent-filter&gt;\n                &lt;action android:name=\"android.content.action.DOCUMENTS_PROVIDER\" /&gt;\n            &lt;/intent-filter&gt;\n        &lt;/provider&gt;\n        ...\n    &lt;/application&gt;\n&lt;/manifest&gt;</pre>\n <p>\n When defining your provider, you must protect it with\n android.Manifest.permission.MANAGE_DOCUMENTS, which is a permission\n only the system can obtain. Applications cannot use a documents provider\n directly; they must go through Intent.ACTION_OPEN_DOCUMENT or\n Intent.ACTION_CREATE_DOCUMENT which requires a user to actively\n navigate and select documents. When a user selects documents through that UI,\n the system issues narrow URI permission grants to the requesting application.\n </p>\n <h3>Documents</h3>\n <p>\n A document can be either an openable stream (with a specific MIME type), or a\n directory containing additional documents (with the\n <a href=\"#!/api/android.provider.DocumentsContract.Document-property-MIME_TYPE_DIR\" rel=\"android.provider.DocumentsContract.Document-property-MIME_TYPE_DIR\" class=\"docClass\">android.provider.DocumentsContract.Document.MIME_TYPE_DIR</a> MIME type). Each directory represents the top\n of a subtree containing zero or more documents, which can recursively contain\n even more documents and directories.\n </p>\n <p>\n Each document can have different capabilities, as described by\n <a href=\"#!/api/android.provider.DocumentsContract.Document-property-COLUMN_FLAGS\" rel=\"android.provider.DocumentsContract.Document-property-COLUMN_FLAGS\" class=\"docClass\">android.provider.DocumentsContract.Document.COLUMN_FLAGS</a>. For example, if a document can be represented\n as a thumbnail, your provider can set\n <a href=\"#!/api/android.provider.DocumentsContract.Document-property-FLAG_SUPPORTS_THUMBNAIL\" rel=\"android.provider.DocumentsContract.Document-property-FLAG_SUPPORTS_THUMBNAIL\" class=\"docClass\">android.provider.DocumentsContract.Document.FLAG_SUPPORTS_THUMBNAIL</a> and implement\n Point, CancellationSignal) to return\n that thumbnail.\n </p>\n <p>\n Each document under a provider is uniquely referenced by its\n <a href=\"#!/api/android.provider.DocumentsContract.Document-property-COLUMN_DOCUMENT_ID\" rel=\"android.provider.DocumentsContract.Document-property-COLUMN_DOCUMENT_ID\" class=\"docClass\">android.provider.DocumentsContract.Document.COLUMN_DOCUMENT_ID</a>, which must not change once returned. A\n single document can be included in multiple directories when responding to\n String[], String). For example, a\n provider might surface a single photo in multiple locations: once in a\n directory of geographic locations, and again in a directory of dates.\n </p>\n <h3>Roots</h3>\n <p>\n All documents are surfaced through one or more \"roots.\" Each root represents\n the top of a document tree that a user can navigate. For example, a root\n could represent an account or a physical storage device. Similar to\n documents, each root can have capabilities expressed through\n <a href=\"#!/api/android.provider.DocumentsContract.Root-property-COLUMN_FLAGS\" rel=\"android.provider.DocumentsContract.Root-property-COLUMN_FLAGS\" class=\"docClass\">android.provider.DocumentsContract.Root.COLUMN_FLAGS</a>.\n </p></p>\n\n<p> @see Intent#ACTION_OPEN_DOCUMENT\n @see Intent#ACTION_OPEN_DOCUMENT_TREE\n @see Intent#ACTION_CREATE_DOCUMENT</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-attachInfo' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.provider.DocumentsProvider'>android.provider.DocumentsProvider</span><br/><a href='source/DocumentsProvider.html#android-provider-DocumentsProvider-method-attachInfo' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.provider.DocumentsProvider-method-attachInfo' class='name expandable'>attachInfo</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Implementation is provided by the parent class. ...</div><div class='long'><p>Implementation is provided by the parent class.</p>\n</div></div></div><div id='method-attachInfoForTesting' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.provider.DocumentsProvider'>android.provider.DocumentsProvider</span><br/><a href='source/DocumentsProvider.html#android-provider-DocumentsProvider-method-attachInfoForTesting' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.provider.DocumentsProvider-method-attachInfoForTesting' class='name expandable'>attachInfoForTesting</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>{@hide} ...</div><div class='long'><p>{@hide}</p>\n</div></div></div><div id='method-call' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.provider.DocumentsProvider'>android.provider.DocumentsProvider</span><br/><a href='source/DocumentsProvider.html#android-provider-DocumentsProvider-method-call' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.provider.DocumentsProvider-method-call' class='name expandable'>call</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Implementation is provided by the parent class. ...</div><div class='long'><p>Implementation is provided by the parent class. Can be overridden to\n provide additional functionality, but subclasses <em>must</em> always\n call the superclass. If the superclass returns {@code null}, the subclass\n may implement custom behavior.</p>\n</div></div></div><div id='method-canonicalize' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.provider.DocumentsProvider'>android.provider.DocumentsProvider</span><br/><a href='source/DocumentsProvider.html#android-provider-DocumentsProvider-method-canonicalize' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.provider.DocumentsProvider-method-canonicalize' class='name expandable'>canonicalize</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Implementation is provided by the parent class. ...</div><div class='long'><p>Implementation is provided by the parent class. Can be overridden to\n provide additional functionality, but subclasses <em>must</em> always\n call the superclass. If the superclass returns {@code null}, the subclass\n may implement custom behavior.\n <p>\n This is typically used to resolve a subtree URI into a concrete document\n reference, issuing a narrower single-document URI permission grant along\n the way.\n@see DocumentsContract#buildDocumentUriUsingTree(Uri, String)</p>\n</div></div></div><div id='method-copyDocument' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.provider.DocumentsProvider'>android.provider.DocumentsProvider</span><br/><a href='source/DocumentsProvider.html#android-provider-DocumentsProvider-method-copyDocument' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.provider.DocumentsProvider-method-copyDocument' class='name expandable'>copyDocument</a>( <span class='pre'>sourceDocumentId, targetParentDocumentId</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Copy the requested document or a document tree. ...</div><div class='long'><p>Copy the requested document or a document tree.\n <p>\n Copies a document including all child documents to another location within\n the same document provider. Upon completion returns the document id of\n the copied document at the target destination. {@code null} must never\n be returned.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>sourceDocumentId</span> : String<div class='sub-desc'><p>the document to copy.</p>\n</div></li><li><span class='pre'>targetParentDocumentId</span> : String<div class='sub-desc'><p>the target document to be copied into as a child.</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>AuthenticationRequiredException If authentication is required from\n            the user (such as login credentials), but it is not guaranteed\n            that the client will handle this properly.</p>\n</div></li></ul></div></div></div><div id='method-createDocument' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.provider.DocumentsProvider'>android.provider.DocumentsProvider</span><br/><a href='source/DocumentsProvider.html#android-provider-DocumentsProvider-method-createDocument' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.provider.DocumentsProvider-method-createDocument' class='name expandable'>createDocument</a>( <span class='pre'>parentDocumentId, mimeType, displayName</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Create a new document and return its newly generated\n android.provider.DocumentsContract.Document.COLUMN_DOCUMENT_ID. ...</div><div class='long'><p>Create a new document and return its newly generated\n <a href=\"#!/api/android.provider.DocumentsContract.Document-property-COLUMN_DOCUMENT_ID\" rel=\"android.provider.DocumentsContract.Document-property-COLUMN_DOCUMENT_ID\" class=\"docClass\">android.provider.DocumentsContract.Document.COLUMN_DOCUMENT_ID</a>. You must allocate a new\n <a href=\"#!/api/android.provider.DocumentsContract.Document-property-COLUMN_DOCUMENT_ID\" rel=\"android.provider.DocumentsContract.Document-property-COLUMN_DOCUMENT_ID\" class=\"docClass\">android.provider.DocumentsContract.Document.COLUMN_DOCUMENT_ID</a> to represent the document, which must\n not change once returned.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>parentDocumentId</span> : String<div class='sub-desc'><p>the parent directory to create the new document\n            under.</p>\n</div></li><li><span class='pre'>mimeType</span> : String<div class='sub-desc'><p>the concrete MIME type associated with the new document.\n            If the MIME type is not supported, the provider must throw.</p>\n</div></li><li><span class='pre'>displayName</span> : String<div class='sub-desc'><p>the display name of the new document. The provider may\n            alter this name to meet any internal constraints, such as\n            avoiding conflicting names.</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>AuthenticationRequiredException If authentication is required from the user (such as\n             login credentials), but it is not guaranteed that the client will handle this\n             properly.</p>\n</div></li></ul></div></div></div><div id='method-createWebLinkIntent' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.provider.DocumentsProvider'>android.provider.DocumentsProvider</span><br/><a href='source/DocumentsProvider.html#android-provider-DocumentsProvider-method-createWebLinkIntent' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.provider.DocumentsProvider-method-createWebLinkIntent' class='name expandable'>createWebLinkIntent</a>( <span class='pre'>documentId, options</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Creates an intent sender for a web link, if the document is web linkable. ...</div><div class='long'><p>Creates an intent sender for a web link, if the document is web linkable.\n <p>\n AuthenticationRequiredException can be thrown if user does not have\n sufficient permission for the linked document. Before any new permissions\n are granted for the linked document, a visible UI must be shown, so the\n user can explicitly confirm whether the permission grants are expected.\n The user must be able to cancel the operation.\n <p>\n Options passed as an argument may include a list of recipients, such\n as email addresses. The provider should reflect these options if possible,\n but it's acceptable to ignore them. In either case, confirmation UI must\n be shown before any new permission grants are granted.\n <p>\n It is all right to generate a web link without granting new permissions,\n if opening the link would result in a page for requesting permission\n access. If it's impossible then the operation must fail by throwing an exception.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>documentId</span> : String<div class='sub-desc'><p>the document to create a web link intent for.</p>\n</div></li><li><span class='pre'>options</span> : Object {Bundle}<div class='sub-desc'><p>additional information, such as list of recipients. Optional.</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>AuthenticationRequiredException If authentication is required from\n            the user (such as login credentials), but it is not guaranteed\n            that the client will handle this properly.\n@see DocumentsContract.Document#FLAG_WEB_LINKABLE\n@see android.app.PendingIntent#getIntentSender</p>\n</div></li></ul></div></div></div><div id='method-delete' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.provider.DocumentsProvider'>android.provider.DocumentsProvider</span><br/><a href='source/DocumentsProvider.html#android-provider-DocumentsProvider-method-delete' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.provider.DocumentsProvider-method-delete' class='name expandable'>delete</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Implementation is provided by the parent class. ...</div><div class='long'><p>Implementation is provided by the parent class. Throws by default, and\n cannot be overridden.\n@see <a href=\"#!/api/android.provider.DocumentsProvider-method-deleteDocument\" rel=\"android.provider.DocumentsProvider-method-deleteDocument\" class=\"docClass\">deleteDocument</a>(String)</p>\n</div></div></div><div id='method-deleteDocument' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.provider.DocumentsProvider'>android.provider.DocumentsProvider</span><br/><a href='source/DocumentsProvider.html#android-provider-DocumentsProvider-method-deleteDocument' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.provider.DocumentsProvider-method-deleteDocument' class='name expandable'>deleteDocument</a>( <span class='pre'>documentId</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Delete the requested document. ...</div><div class='long'><p>Delete the requested document.\n <p>\n Upon returning, any URI permission grants for the given document will be\n revoked. If additional documents were deleted as a side effect of this\n call (such as documents inside a directory) the implementor is\n responsible for revoking those permissions using\n <a href=\"#!/api/android.provider.DocumentsProvider-method-revokeDocumentPermission\" rel=\"android.provider.DocumentsProvider-method-revokeDocumentPermission\" class=\"docClass\">revokeDocumentPermission</a>(String).</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>documentId</span> : String<div class='sub-desc'><p>the document to delete.</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>AuthenticationRequiredException If authentication is required from\n            the user (such as login credentials), but it is not guaranteed\n            that the client will handle this properly.</p>\n</div></li></ul></div></div></div><div id='method-ejectRoot' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.provider.DocumentsProvider'>android.provider.DocumentsProvider</span><br/><a href='source/DocumentsProvider.html#android-provider-DocumentsProvider-method-ejectRoot' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.provider.DocumentsProvider-method-ejectRoot' class='name expandable'>ejectRoot</a>( <span class='pre'>rootId</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Ejects the root. ...</div><div class='long'><p>Ejects the root. Throws IllegalStateException if ejection failed.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>rootId</span> : String<div class='sub-desc'><p>the root to be ejected.\n@see Root#FLAG_SUPPORTS_EJECT</p>\n</div></li></ul></div></div></div><div id='method-findDocumentPath' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.provider.DocumentsProvider'>android.provider.DocumentsProvider</span><br/><a href='source/DocumentsProvider.html#android-provider-DocumentsProvider-method-findDocumentPath' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.provider.DocumentsProvider-method-findDocumentPath' class='name expandable'>findDocumentPath</a>( <span class='pre'>parentDocumentId, childDocumentId</span> ) : Object {android.provider.DocumentsContract.Path}<span class=\"signature\"></span></div><div class='description'><div class='short'>Finds the canonical path for the requested document. ...</div><div class='long'><p>Finds the canonical path for the requested document. The path must start\n from the parent document if parentDocumentId is not null or the root document\n if parentDocumentId is null. If there are more than one path to this document,\n return the most typical one. Include both the parent document or root document\n and the requested document in the returned path.</p>\n\n<p> <p>This API assumes that document ID has enough info to infer the root.\n Different roots should use different document ID to refer to the same\n document.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>parentDocumentId</span> : String<div class='sub-desc'><p>the document from which the path starts if not null,\n     or null to indicate a path from the root is requested.</p>\n</div></li><li><span class='pre'>childDocumentId</span> : String<div class='sub-desc'><p>the document which path is requested.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.provider.DocumentsContract.Path}</span><div class='sub-desc'><p>the path of the requested document. If parentDocumentId is null\n     returned root ID must not be null. If parentDocumentId is not null\n     returned root ID must be null.</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>AuthenticationRequiredException If authentication is required from\n            the user (such as login credentials), but it is not guaranteed\n            that the client will handle this properly.</p>\n</div></li></ul></div></div></div><div id='method-getDocumentMetadata' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.provider.DocumentsProvider'>android.provider.DocumentsProvider</span><br/><a href='source/DocumentsProvider.html#android-provider-DocumentsProvider-method-getDocumentMetadata' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.provider.DocumentsProvider-method-getDocumentMetadata' class='name expandable'>getDocumentMetadata</a>( <span class='pre'>documentId</span> ) : Object {android.os.Bundle}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns metadata associated with the document. ...</div><div class='long'><p>Returns metadata associated with the document. The type of metadata returned\n is specific to the document type. For example the data returned for an image\n file will likely consist primarily or solely of EXIF metadata.</p>\n\n<p> <p>The returned Bundle will contain zero or more entries depending\n on the type of data supported by the document provider.</p>\n\n<p> <ol>\n <li>A android.provider.DocumentsContract.DocumentsContract.METADATA_TYPES containing a {@code String[]} value.\n     The string array identifies the type or types of metadata returned. Each\n     value in the can be used to access a Bundle of data\n     containing that type of data.\n <li>An entry each for each type of returned metadata. Each set of metadata is\n     itself represented as a bundle and accessible via a string key naming\n     the type of data.\n </li></li></ol></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>documentId</span> : String<div class='sub-desc'><p>get the metadata of the document</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.os.Bundle}</span><div class='sub-desc'><p>a Bundle of Bundles.\n@see DocumentsContract#getDocumentMetadata(ContentResolver, Uri)</p>\n</div></li></ul></div></div></div><div id='method-getDocumentStreamTypes' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.provider.DocumentsProvider'>android.provider.DocumentsProvider</span><br/><a href='source/DocumentsProvider.html#android-provider-DocumentsProvider-method-getDocumentStreamTypes' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.provider.DocumentsProvider-method-getDocumentStreamTypes' class='name expandable'>getDocumentStreamTypes</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Return a list of streamable MIME types matching the filter, which can be passed to\n String, Bundle, CancellationSignal). ...</div><div class='long'><p>Return a list of streamable MIME types matching the filter, which can be passed to\n String, Bundle, CancellationSignal).</p>\n\n<p> <p>The default implementation returns a MIME type provided by\n String[]) as long as it matches the filter and the document\n does not have the <a href=\"#!/api/android.provider.DocumentsContract.Document-property-FLAG_VIRTUAL_DOCUMENT\" rel=\"android.provider.DocumentsContract.Document-property-FLAG_VIRTUAL_DOCUMENT\" class=\"docClass\">android.provider.DocumentsContract.Document.FLAG_VIRTUAL_DOCUMENT</a> flag set.</p>\n\n<p> <p>Virtual documents must have at least one streamable format.\n@see <a href=\"#!/api/android.provider.DocumentsProvider-method-getStreamTypes\" rel=\"android.provider.DocumentsProvider-method-getStreamTypes\" class=\"docClass\">getStreamTypes</a>(Uri, String)\n@see <a href=\"#!/api/android.provider.DocumentsProvider-method-openTypedDocument\" rel=\"android.provider.DocumentsProvider-method-openTypedDocument\" class=\"docClass\">openTypedDocument</a>(String, String, Bundle, CancellationSignal)</p>\n</div></div></div><div id='method-getDocumentType' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.provider.DocumentsProvider'>android.provider.DocumentsProvider</span><br/><a href='source/DocumentsProvider.html#android-provider-DocumentsProvider-method-getDocumentType' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.provider.DocumentsProvider-method-getDocumentType' class='name expandable'>getDocumentType</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Return concrete MIME type of the requested document. ...</div><div class='long'><p>Return concrete MIME type of the requested document. Must match the value\n of <a href=\"#!/api/android.provider.DocumentsContract.Document-property-COLUMN_MIME_TYPE\" rel=\"android.provider.DocumentsContract.Document-property-COLUMN_MIME_TYPE\" class=\"docClass\">android.provider.DocumentsContract.Document.COLUMN_MIME_TYPE</a> for this document. The default\n implementation queries String[]), so\n providers may choose to override this as an optimization.\n <p></p>\n<h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>AuthenticationRequiredException If authentication is required from\n            the user (such as login credentials), but it is not guaranteed\n            that the client will handle this properly.</p>\n</div></li></ul></div></div></div><div id='method-getStreamTypes' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.provider.DocumentsProvider'>android.provider.DocumentsProvider</span><br/><a href='source/DocumentsProvider.html#android-provider-DocumentsProvider-method-getStreamTypes' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.provider.DocumentsProvider-method-getStreamTypes' class='name expandable'>getStreamTypes</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Called by a client to determine the types of data streams that this content provider\n support for the given URI. ...</div><div class='long'><p>Called by a client to determine the types of data streams that this content provider\n support for the given URI.</p>\n\n<p> <p>Overriding this method is deprecated. Override <a href=\"#!/api/android.provider.DocumentsProvider-method-openTypedDocument\" rel=\"android.provider.DocumentsProvider-method-openTypedDocument\" class=\"docClass\">openTypedDocument</a> instead.\n@see <a href=\"#!/api/android.provider.DocumentsProvider-method-getDocumentStreamTypes\" rel=\"android.provider.DocumentsProvider-method-getDocumentStreamTypes\" class=\"docClass\">getDocumentStreamTypes</a>(String, String)</p>\n</div></div></div><div id='method-getType' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.provider.DocumentsProvider'>android.provider.DocumentsProvider</span><br/><a href='source/DocumentsProvider.html#android-provider-DocumentsProvider-method-getType' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.provider.DocumentsProvider-method-getType' class='name expandable'>getType</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Implementation is provided by the parent class. ...</div><div class='long'><p>Implementation is provided by the parent class. Cannot be overridden.\n@see <a href=\"#!/api/android.provider.DocumentsProvider-method-getDocumentType\" rel=\"android.provider.DocumentsProvider-method-getDocumentType\" class=\"docClass\">getDocumentType</a>(String)</p>\n</div></div></div><div id='method-insert' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.provider.DocumentsProvider'>android.provider.DocumentsProvider</span><br/><a href='source/DocumentsProvider.html#android-provider-DocumentsProvider-method-insert' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.provider.DocumentsProvider-method-insert' class='name expandable'>insert</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Implementation is provided by the parent class. ...</div><div class='long'><p>Implementation is provided by the parent class. Throws by default, and\n cannot be overridden.\n@see <a href=\"#!/api/android.provider.DocumentsProvider-method-createDocument\" rel=\"android.provider.DocumentsProvider-method-createDocument\" class=\"docClass\">createDocument</a>(String, String, String)</p>\n</div></div></div><div id='method-isChildDocument' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.provider.DocumentsProvider'>android.provider.DocumentsProvider</span><br/><a href='source/DocumentsProvider.html#android-provider-DocumentsProvider-method-isChildDocument' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.provider.DocumentsProvider-method-isChildDocument' class='name expandable'>isChildDocument</a>( <span class='pre'>parentDocumentId, documentId</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Test if a document is descendant (child, grandchild, etc) from the given\n parent. ...</div><div class='long'><p>Test if a document is descendant (child, grandchild, etc) from the given\n parent. For example, providers must implement this to support\n Intent.ACTION_OPEN_DOCUMENT_TREE. You should avoid making network\n requests to keep this request fast.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>parentDocumentId</span> : String<div class='sub-desc'><p>parent to verify against.</p>\n</div></li><li><span class='pre'>documentId</span> : String<div class='sub-desc'><p>child to verify.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>if given document is a descendant of the given parent.\n@see DocumentsContract.Root#FLAG_SUPPORTS_IS_CHILD</p>\n</div></li></ul></div></div></div><div id='method-moveDocument' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.provider.DocumentsProvider'>android.provider.DocumentsProvider</span><br/><a href='source/DocumentsProvider.html#android-provider-DocumentsProvider-method-moveDocument' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.provider.DocumentsProvider-method-moveDocument' class='name expandable'>moveDocument</a>( <span class='pre'>sourceDocumentId, sourceParentDocumentId, targetParentDocumentId</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Move the requested document or a document tree. ...</div><div class='long'><p>Move the requested document or a document tree.</p>\n\n<p> <p>Moves a document including all child documents to another location within\n the same document provider. Upon completion returns the document id of\n the copied document at the target destination. {@code null} must never\n be returned.</p>\n\n<p> <p>It's the responsibility of the provider to revoke grants if the document\n is no longer accessible using <code>sourceDocumentId</code>.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>sourceDocumentId</span> : String<div class='sub-desc'><p>the document to move.</p>\n</div></li><li><span class='pre'>sourceParentDocumentId</span> : String<div class='sub-desc'><p>the parent of the document to move.</p>\n</div></li><li><span class='pre'>targetParentDocumentId</span> : String<div class='sub-desc'><p>the target document to be a new parent of the\n     source document.</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>AuthenticationRequiredException If authentication is required from\n            the user (such as login credentials), but it is not guaranteed\n            that the client will handle this properly.</p>\n</div></li></ul></div></div></div><div id='method-openAssetFile' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.provider.DocumentsProvider'>android.provider.DocumentsProvider</span><br/><a href='source/DocumentsProvider.html#android-provider-DocumentsProvider-method-openAssetFile' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.provider.DocumentsProvider-method-openAssetFile' class='name expandable'>openAssetFile</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Implementation is provided by the parent class. ...</div><div class='long'><p>Implementation is provided by the parent class. Cannot be overridden.\n@see <a href=\"#!/api/android.provider.DocumentsProvider-method-openDocument\" rel=\"android.provider.DocumentsProvider-method-openDocument\" class=\"docClass\">openDocument</a>(String, String, CancellationSignal)</p>\n</div></div></div><div id='method-openDocument' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.provider.DocumentsProvider'>android.provider.DocumentsProvider</span><br/><a href='source/DocumentsProvider.html#android-provider-DocumentsProvider-method-openDocument' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.provider.DocumentsProvider-method-openDocument' class='name expandable'>openDocument</a>( <span class='pre'>documentId, mode, signal</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Open and return the requested document. ...</div><div class='long'><p>Open and return the requested document.\n <p>\n Your provider should return a reliable ParcelFileDescriptor to\n detect when the remote caller has finished reading or writing the\n document.\n <p>\n Mode \"r\" should always be supported. Provider should throw\n UnsupportedOperationException if the passing mode is not supported.\n You may return a pipe or socket pair if the mode is exclusively \"r\" or\n \"w\", but complex modes like \"rw\" imply a normal file on disk that\n supports seeking.\n <p>\n If you block while downloading content, you should periodically check\n CancellationSignal.isCanceled() to abort abandoned open requests.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>documentId</span> : String<div class='sub-desc'><p>the document to return.</p>\n</div></li><li><span class='pre'>mode</span> : String<div class='sub-desc'><p>the mode to open with, such as 'r', 'w', or 'rw'.</p>\n</div></li><li><span class='pre'>signal</span> : Object {CancellationSignal}<div class='sub-desc'><p>used by the caller to signal if the request should be\n            cancelled. May be null.</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>AuthenticationRequiredException If authentication is required from\n            the user (such as login credentials), but it is not guaranteed\n            that the client will handle this properly.\n@see ParcelFileDescriptor#open(java.io.File, int, android.os.Handler,\n      OnCloseListener)\n@see ParcelFileDescriptor#createReliablePipe()\n@see ParcelFileDescriptor#createReliableSocketPair()\n@see ParcelFileDescriptor#parseMode(String)</p>\n</div></li></ul></div></div></div><div id='method-openDocumentThumbnail' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.provider.DocumentsProvider'>android.provider.DocumentsProvider</span><br/><a href='source/DocumentsProvider.html#android-provider-DocumentsProvider-method-openDocumentThumbnail' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.provider.DocumentsProvider-method-openDocumentThumbnail' class='name expandable'>openDocumentThumbnail</a>( <span class='pre'>documentId, sizeHint, signal</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Open and return a thumbnail of the requested document. ...</div><div class='long'><p>Open and return a thumbnail of the requested document.\n <p>\n A provider should return a thumbnail closely matching the hinted size,\n attempting to serve from a local cache if possible. A provider should\n never return images more than double the hinted size.\n <p>\n If you perform expensive operations to download or generate a thumbnail,\n you should periodically check CancellationSignal.isCanceled() to\n abort abandoned thumbnail requests.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>documentId</span> : String<div class='sub-desc'><p>the document to return.</p>\n</div></li><li><span class='pre'>sizeHint</span> : Object {Point}<div class='sub-desc'><p>hint of the optimal thumbnail dimensions.</p>\n</div></li><li><span class='pre'>signal</span> : Object {CancellationSignal}<div class='sub-desc'><p>used by the caller to signal if the request should be\n            cancelled. May be null.</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>AuthenticationRequiredException If authentication is required from\n            the user (such as login credentials), but it is not guaranteed\n            that the client will handle this properly.\n@see Document#FLAG_SUPPORTS_THUMBNAIL</p>\n</div></li></ul></div></div></div><div id='method-openFile' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.provider.DocumentsProvider'>android.provider.DocumentsProvider</span><br/><a href='source/DocumentsProvider.html#android-provider-DocumentsProvider-method-openFile' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.provider.DocumentsProvider-method-openFile' class='name expandable'>openFile</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Implementation is provided by the parent class. ...</div><div class='long'><p>Implementation is provided by the parent class. Cannot be overridden.\n@see <a href=\"#!/api/android.provider.DocumentsProvider-method-openDocument\" rel=\"android.provider.DocumentsProvider-method-openDocument\" class=\"docClass\">openDocument</a>(String, String, CancellationSignal)</p>\n</div></div></div><div id='method-openTypedAssetFile' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.provider.DocumentsProvider'>android.provider.DocumentsProvider</span><br/><a href='source/DocumentsProvider.html#android-provider-DocumentsProvider-method-openTypedAssetFile' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.provider.DocumentsProvider-method-openTypedAssetFile' class='name expandable'>openTypedAssetFile</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Implementation is provided by the parent class. ...</div><div class='long'><p>Implementation is provided by the parent class. Cannot be overridden.\n@see <a href=\"#!/api/android.provider.DocumentsProvider-method-openDocumentThumbnail\" rel=\"android.provider.DocumentsProvider-method-openDocumentThumbnail\" class=\"docClass\">openDocumentThumbnail</a>(String, Point, CancellationSignal)\n@see <a href=\"#!/api/android.provider.DocumentsProvider-method-openTypedDocument\" rel=\"android.provider.DocumentsProvider-method-openTypedDocument\" class=\"docClass\">openTypedDocument</a>(String, String, Bundle, CancellationSignal)\n@see <a href=\"#!/api/android.provider.DocumentsProvider-method-getDocumentStreamTypes\" rel=\"android.provider.DocumentsProvider-method-getDocumentStreamTypes\" class=\"docClass\">getDocumentStreamTypes</a>(String, String)</p>\n</div></div></div><div id='method-openTypedDocument' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.provider.DocumentsProvider'>android.provider.DocumentsProvider</span><br/><a href='source/DocumentsProvider.html#android-provider-DocumentsProvider-method-openTypedDocument' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.provider.DocumentsProvider-method-openTypedDocument' class='name expandable'>openTypedDocument</a>( <span class='pre'>documentId, mimeTypeFilter, opts, signal</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Open and return the document in a format matching the specified MIME\n type filter. ...</div><div class='long'><p>Open and return the document in a format matching the specified MIME\n type filter.\n <p>\n A provider may perform a conversion if the documents's MIME type is not\n matching the specified MIME type filter.\n <p>\n Virtual documents must have at least one streamable format.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>documentId</span> : String<div class='sub-desc'><p>the document to return.</p>\n</div></li><li><span class='pre'>mimeTypeFilter</span> : String<div class='sub-desc'><p>the MIME type filter for the requested format. May\n            be <em>\\/</em>, which matches any MIME type.</p>\n</div></li><li><span class='pre'>opts</span> : Object {Bundle}<div class='sub-desc'><p>extra options from the client. Specific to the content\n            provider.</p>\n</div></li><li><span class='pre'>signal</span> : Object {CancellationSignal}<div class='sub-desc'><p>used by the caller to signal if the request should be\n            cancelled. May be null.</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>AuthenticationRequiredException If authentication is required from\n            the user (such as login credentials), but it is not guaranteed\n            that the client will handle this properly.\n@see <a href=\"#!/api/android.provider.DocumentsProvider-method-getDocumentStreamTypes\" rel=\"android.provider.DocumentsProvider-method-getDocumentStreamTypes\" class=\"docClass\">getDocumentStreamTypes</a>(String, String)</p>\n</div></li></ul></div></div></div><div id='method-query' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.provider.DocumentsProvider'>android.provider.DocumentsProvider</span><br/><a href='source/DocumentsProvider.html#android-provider-DocumentsProvider-method-query' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.provider.DocumentsProvider-method-query' class='name expandable'>query</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Implementation is provided by the parent class. ...</div><div class='long'><p>Implementation is provided by the parent class. Cannot be overridden.\n@see <a href=\"#!/api/android.provider.DocumentsProvider-method-queryRoots\" rel=\"android.provider.DocumentsProvider-method-queryRoots\" class=\"docClass\">queryRoots</a>(String[])\n@see <a href=\"#!/api/android.provider.DocumentsProvider-method-queryRecentDocuments\" rel=\"android.provider.DocumentsProvider-method-queryRecentDocuments\" class=\"docClass\">queryRecentDocuments</a>(String, String[], Bundle, CancellationSignal)\n@see <a href=\"#!/api/android.provider.DocumentsProvider-method-queryDocument\" rel=\"android.provider.DocumentsProvider-method-queryDocument\" class=\"docClass\">queryDocument</a>(String, String[])\n@see <a href=\"#!/api/android.provider.DocumentsProvider-method-queryChildDocuments\" rel=\"android.provider.DocumentsProvider-method-queryChildDocuments\" class=\"docClass\">queryChildDocuments</a>(String, String[], String)\n@see <a href=\"#!/api/android.provider.DocumentsProvider-method-querySearchDocuments\" rel=\"android.provider.DocumentsProvider-method-querySearchDocuments\" class=\"docClass\">querySearchDocuments</a>(String, String[], Bundle)</p>\n</div></div></div><div id='method-queryChildDocuments' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.provider.DocumentsProvider'>android.provider.DocumentsProvider</span><br/><a href='source/DocumentsProvider.html#android-provider-DocumentsProvider-method-queryChildDocuments' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.provider.DocumentsProvider-method-queryChildDocuments' class='name expandable'>queryChildDocuments</a>( <span class='pre'>parentDocumentId, projection, queryArgs</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Override this method to return the children documents contained\n in the requested directory. ...</div><div class='long'><p>Override this method to return the children documents contained\n in the requested directory. This must return immediate descendants only.</p>\n\n<p> <p>If your provider is cloud-based, and you have data cached\n locally, you may return the local data immediately, setting\n android.provider.DocumentsContract.DocumentsContract.EXTRA_LOADING on Cursor extras to indicate that\n you are still fetching additional data. Then, when the network data is\n available, you can send a change notification to trigger a requery and\n return the complete contents. To return a Cursor with extras, you need to\n extend and override Cursor.getExtras().</p>\n\n<p> <p>To support change notifications, you must\n Uri) with a relevant\n Uri, such as\n String). Then\n you can call android.database.ContentObserver, boolean) with that Uri to send change\n notifications.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>parentDocumentId</span> : String<div class='sub-desc'><p>the directory to return children for.</p>\n</div></li><li><span class='pre'>projection</span> : Object {java.lang.String[]}<div class='sub-desc'><p>list of Document columns to put into the\n            cursor. If {@code null} all supported columns should be\n            included.</p>\n</div></li><li><span class='pre'>queryArgs</span> : Object {Bundle}<div class='sub-desc'><p>Bundle containing sorting information or other\n            argument useful to the provider. If no sorting\n            information is available, default sorting\n            will be used, which may be unordered. See\n            ContentResolver.QUERY_ARG_SORT_COLUMNS for\n            details.</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>AuthenticationRequiredException If authentication is required from\n            the user (such as login credentials), but it is not guaranteed\n            that the client will handle this properly.\n@see DocumentsContract#EXTRA_LOADING\n@see DocumentsContract#EXTRA_INFO\n@see DocumentsContract#EXTRA_ERROR</p>\n</div></li></ul></div></div></div><div id='method-queryChildDocumentsForManage' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.provider.DocumentsProvider'>android.provider.DocumentsProvider</span><br/><a href='source/DocumentsProvider.html#android-provider-DocumentsProvider-method-queryChildDocumentsForManage' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.provider.DocumentsProvider-method-queryChildDocumentsForManage' class='name expandable'>queryChildDocumentsForManage</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>{@hide} ...</div><div class='long'><p>{@hide}</p>\n</div></div></div><div id='method-queryDocument' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.provider.DocumentsProvider'>android.provider.DocumentsProvider</span><br/><a href='source/DocumentsProvider.html#android-provider-DocumentsProvider-method-queryDocument' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.provider.DocumentsProvider-method-queryDocument' class='name expandable'>queryDocument</a>( <span class='pre'>documentId, projection</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Return metadata for the single requested document. ...</div><div class='long'><p>Return metadata for the single requested document. You should avoid\n making network requests to keep this request fast.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>documentId</span> : String<div class='sub-desc'><p>the document to return.</p>\n</div></li><li><span class='pre'>projection</span> : Object {java.lang.String[]}<div class='sub-desc'><p>list of Document columns to put into the\n            cursor. If {@code null} all supported columns should be\n            included.</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>AuthenticationRequiredException If authentication is required from\n            the user (such as login credentials), but it is not guaranteed\n            that the client will handle this properly.</p>\n</div></li></ul></div></div></div><div id='method-queryRecentDocuments' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.provider.DocumentsProvider'>android.provider.DocumentsProvider</span><br/><a href='source/DocumentsProvider.html#android-provider-DocumentsProvider-method-queryRecentDocuments' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.provider.DocumentsProvider-method-queryRecentDocuments' class='name expandable'>queryRecentDocuments</a>( <span class='pre'>projection, queryArgs, signal</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Return recently modified documents under the requested root. ...</div><div class='long'><p>Return recently modified documents under the requested root. This will\n only be called for roots that advertise\n <a href=\"#!/api/android.provider.DocumentsContract.Root-property-FLAG_SUPPORTS_RECENTS\" rel=\"android.provider.DocumentsContract.Root-property-FLAG_SUPPORTS_RECENTS\" class=\"docClass\">android.provider.DocumentsContract.Root.FLAG_SUPPORTS_RECENTS</a>. The returned documents should be\n sorted by <a href=\"#!/api/android.provider.DocumentsContract.Document-property-COLUMN_LAST_MODIFIED\" rel=\"android.provider.DocumentsContract.Document-property-COLUMN_LAST_MODIFIED\" class=\"docClass\">android.provider.DocumentsContract.Document.COLUMN_LAST_MODIFIED</a> in descending order of\n the most recently modified documents.\n <p>\n If this method is overriden by the concrete DocumentsProvider and\n ContentResolver.QUERY_ARG_LIMIT is specified with a nonnegative\n int under queryArgs, the result will be limited by that number and\n ContentResolver.QUERY_ARG_LIMIT will be specified under\n ContentResolver.EXTRA_HONORED_ARGS. Otherwise, a default 64 limit\n will be used and no QUERY_ARG* will be specified under\n ContentResolver.EXTRA_HONORED_ARGS.\n <p>\n Recent documents do not support change notifications.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>projection</span> : String<div class='sub-desc'><p>list of Document columns to put into the\n            cursor. If {@code null} all supported columns should be\n            included.</p>\n</div></li><li><span class='pre'>queryArgs</span> : Object {java.lang.String[]}<div class='sub-desc'><p>the extra query arguments.</p>\n</div></li><li><span class='pre'>signal</span> : Object {Bundle}<div class='sub-desc'><p>used by the caller to signal if the request should be\n            cancelled. May be null.\n@see DocumentsContract#EXTRA_LOADING</p>\n</div></li></ul></div></div></div><div id='method-queryRoots' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.provider.DocumentsProvider'>android.provider.DocumentsProvider</span><br/><a href='source/DocumentsProvider.html#android-provider-DocumentsProvider-method-queryRoots' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.provider.DocumentsProvider-method-queryRoots' class='name expandable'>queryRoots</a>( <span class='pre'>projection</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Return all roots currently provided. ...</div><div class='long'><p>Return all roots currently provided. To display to users, you must define\n at least one root. You should avoid making network requests to keep this\n request fast.\n <p>\n Each root is defined by the metadata columns described in <a href=\"#!/api/android.provider.DocumentsContract.Root\" rel=\"android.provider.DocumentsContract.Root\" class=\"docClass\">android.provider.DocumentsContract.Root</a>,\n including <a href=\"#!/api/android.provider.DocumentsContract.Root-property-COLUMN_DOCUMENT_ID\" rel=\"android.provider.DocumentsContract.Root-property-COLUMN_DOCUMENT_ID\" class=\"docClass\">android.provider.DocumentsContract.Root.COLUMN_DOCUMENT_ID</a> which points to a directory\n representing a tree of documents to display under that root.\n <p>\n If this set of roots changes, you must call android.database.ContentObserver, boolean) with\n android.provider.DocumentsContract.DocumentsContract.buildRootsUri(String) to notify the system.\n <p></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>projection</span> : Object {java.lang.String[]}<div class='sub-desc'><p>list of Root columns to put into the cursor. If\n            {@code null} all supported columns should be included.</p>\n</div></li></ul></div></div></div><div id='method-querySearchDocuments' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.provider.DocumentsProvider'>android.provider.DocumentsProvider</span><br/><a href='source/DocumentsProvider.html#android-provider-DocumentsProvider-method-querySearchDocuments' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.provider.DocumentsProvider-method-querySearchDocuments' class='name expandable'>querySearchDocuments</a>( <span class='pre'>rootId, projection, queryArgs</span> ) : Object {android.database.Cursor}<span class=\"signature\"></span></div><div class='description'><div class='short'>Return documents that match the given query under the requested\n root. ...</div><div class='long'><p>Return documents that match the given query under the requested\n root. The returned documents should be sorted by relevance in descending\n order. How documents are matched against the query string is an\n implementation detail left to each provider, but it's suggested that at\n least <a href=\"#!/api/android.provider.DocumentsContract.Document-property-COLUMN_DISPLAY_NAME\" rel=\"android.provider.DocumentsContract.Document-property-COLUMN_DISPLAY_NAME\" class=\"docClass\">android.provider.DocumentsContract.Document.COLUMN_DISPLAY_NAME</a> be matched in a\n case-insensitive fashion.\n <p>\n If your provider is cloud-based, and you have some data cached or pinned\n locally, you may return the local data immediately, setting\n android.provider.DocumentsContract.DocumentsContract.EXTRA_LOADING on the Cursor to indicate that\n you are still fetching additional data. Then, when the network data is\n available, you can send a change notification to trigger a requery and\n return the complete contents.\n <p>\n To support change notifications, you must\n Uri) with a relevant\n Uri, such as String, String). Then you can call android.database.ContentObserver, boolean) with that Uri to send change\n notifications.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>rootId</span> : String<div class='sub-desc'><p>the root to search under.</p>\n</div></li><li><span class='pre'>projection</span> : Object {java.lang.String[]}<div class='sub-desc'><p>list of Document columns to put into the\n            cursor. If {@code null} all supported columns should be\n            included.</p>\n</div></li><li><span class='pre'>queryArgs</span> : Object {Bundle}<div class='sub-desc'><p>the query arguments.\n            DocumentsContract.QUERY_ARG_EXCLUDE_MEDIA,\n            DocumentsContract.QUERY_ARG_DISPLAY_NAME,\n            DocumentsContract.QUERY_ARG_MIME_TYPES,\n            DocumentsContract.QUERY_ARG_FILE_SIZE_OVER,\n            DocumentsContract.QUERY_ARG_LAST_MODIFIED_AFTER.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.database.Cursor}</span><div class='sub-desc'><p>cursor containing search result. Include\n         ContentResolver.EXTRA_HONORED_ARGS in Cursor\n         extras Bundle when any QUERY_ARG_* value was honored\n         during the preparation of the results.\n@see Root#COLUMN_QUERY_ARGS\n@see ContentResolver#EXTRA_HONORED_ARGS\n@see DocumentsContract#EXTRA_LOADING\n@see DocumentsContract#EXTRA_INFO\n@see DocumentsContract#EXTRA_ERROR</p>\n</div></li></ul></div></div></div><div id='method-removeDocument' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.provider.DocumentsProvider'>android.provider.DocumentsProvider</span><br/><a href='source/DocumentsProvider.html#android-provider-DocumentsProvider-method-removeDocument' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.provider.DocumentsProvider-method-removeDocument' class='name expandable'>removeDocument</a>( <span class='pre'>documentId, parentDocumentId</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Removes the requested document or a document tree. ...</div><div class='long'><p>Removes the requested document or a document tree.</p>\n\n<p> <p>In contrast to <a href=\"#!/api/android.provider.DocumentsProvider-method-deleteDocument\" rel=\"android.provider.DocumentsProvider-method-deleteDocument\" class=\"docClass\">deleteDocument</a> it requires specifying the parent.\n This method is especially useful if the document can be in multiple parents.</p>\n\n<p> <p>It's the responsibility of the provider to revoke grants if the document is\n removed from the last parent, and effectively the document is deleted.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>documentId</span> : String<div class='sub-desc'><p>the document to remove.</p>\n</div></li><li><span class='pre'>parentDocumentId</span> : String<div class='sub-desc'><p>the parent of the document to move.</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>AuthenticationRequiredException If authentication is required from\n            the user (such as login credentials), but it is not guaranteed\n            that the client will handle this properly.</p>\n</div></li></ul></div></div></div><div id='method-renameDocument' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.provider.DocumentsProvider'>android.provider.DocumentsProvider</span><br/><a href='source/DocumentsProvider.html#android-provider-DocumentsProvider-method-renameDocument' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.provider.DocumentsProvider-method-renameDocument' class='name expandable'>renameDocument</a>( <span class='pre'>documentId, displayName</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Rename an existing document. ...</div><div class='long'><p>Rename an existing document.\n <p>\n If a different <a href=\"#!/api/android.provider.DocumentsContract.Document-property-COLUMN_DOCUMENT_ID\" rel=\"android.provider.DocumentsContract.Document-property-COLUMN_DOCUMENT_ID\" class=\"docClass\">android.provider.DocumentsContract.Document.COLUMN_DOCUMENT_ID</a> must be used to\n represent the renamed document, generate and return it. Any outstanding\n URI permission grants will be updated to point at the new document. If\n the original <a href=\"#!/api/android.provider.DocumentsContract.Document-property-COLUMN_DOCUMENT_ID\" rel=\"android.provider.DocumentsContract.Document-property-COLUMN_DOCUMENT_ID\" class=\"docClass\">android.provider.DocumentsContract.Document.COLUMN_DOCUMENT_ID</a> is still valid after the\n rename, return {@code null}.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>documentId</span> : String<div class='sub-desc'><p>the document to rename.</p>\n</div></li><li><span class='pre'>displayName</span> : String<div class='sub-desc'><p>the updated display name of the document. The provider\n            may alter this name to meet any internal constraints, such as\n            avoiding conflicting names.</p>\n</div></li></ul><h3 class='pa'>Throws</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>AuthenticationRequiredException If authentication is required from\n            the user (such as login credentials), but it is not guaranteed\n            that the client will handle this properly.</p>\n</div></li></ul></div></div></div><div id='method-revokeDocumentPermission' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.provider.DocumentsProvider'>android.provider.DocumentsProvider</span><br/><a href='source/DocumentsProvider.html#android-provider-DocumentsProvider-method-revokeDocumentPermission' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.provider.DocumentsProvider-method-revokeDocumentPermission' class='name expandable'>revokeDocumentPermission</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Revoke any active permission grants for the given\n android.provider.DocumentsContract.Document.COLUMN_DOCUMENT_ID, us...</div><div class='long'><p>Revoke any active permission grants for the given\n <a href=\"#!/api/android.provider.DocumentsContract.Document-property-COLUMN_DOCUMENT_ID\" rel=\"android.provider.DocumentsContract.Document-property-COLUMN_DOCUMENT_ID\" class=\"docClass\">android.provider.DocumentsContract.Document.COLUMN_DOCUMENT_ID</a>, usually called when a document\n becomes invalid. Follows the same semantics as\n int).</p>\n</div></div></div><div id='method-update' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.provider.DocumentsProvider'>android.provider.DocumentsProvider</span><br/><a href='source/DocumentsProvider.html#android-provider-DocumentsProvider-method-update' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.provider.DocumentsProvider-method-update' class='name expandable'>update</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Implementation is provided by the parent class. ...</div><div class='long'><p>Implementation is provided by the parent class. Throws by default, and\n cannot be overridden.</p>\n</div></div></div></div></div></div></div>","meta":{}});