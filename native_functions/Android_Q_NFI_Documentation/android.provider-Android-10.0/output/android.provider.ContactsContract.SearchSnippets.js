Ext.data.JsonP.android_provider_ContactsContract_SearchSnippets({"tagname":"class","name":"android.provider.ContactsContract.SearchSnippets","autodetected":{},"files":[{"filename":"SearchSnippets.js","href":"SearchSnippets.html#android-provider-ContactsContract-SearchSnippets"}],"extends":"java.lang.Object","members":[{"name":"DEFERRED_SNIPPETING_KEY","tagname":"property","owner":"android.provider.ContactsContract.SearchSnippets","id":"property-DEFERRED_SNIPPETING_KEY","meta":{}},{"name":"SNIPPET","tagname":"property","owner":"android.provider.ContactsContract.SearchSnippets","id":"property-SNIPPET","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-android.provider.ContactsContract.SearchSnippets","short_doc":"Additional column returned by\n Contacts.CONTENT_FILTER_URI explaining\n why the filter matched the contact. ...","classIcon":"icon-class","superclasses":["java.lang.Object"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.lang.Object<div class='subclass '><strong>android.provider.ContactsContract.SearchSnippets</strong></div></div><h4>Files</h4><div class='dependency'><a href='source/SearchSnippets.html#android-provider-ContactsContract-SearchSnippets' target='_blank'>SearchSnippets.js</a></div></pre><div class='doc-contents'><p>Additional column returned by\n Contacts.CONTENT_FILTER_URI explaining\n why the filter matched the contact. This column will contain extracts from the contact's\n constituent <a href=\"#!/api/android.provider.ContactsContract.Data\" rel=\"android.provider.ContactsContract.Data\" class=\"docClass\">android.provider.ContactsContract.Data</a> items, formatted in a way that indicates the section of the\n snippet that matched the filter.</p>\n\n<p> <p>\n The following example searches for all contacts that match the query \"presi\" and requests\n the snippet column as well.</p>\n\n<pre> Builder builder = Contacts.CONTENT_FILTER_URI.buildUpon();\n builder.appendPath(\"presi\");\n // Defer snippeting to the client side if possible, for performance reasons.\n builder.appendQueryParameter(SearchSnippets.DEFERRED_SNIPPETING_KEY,\"1\");\n\n Cursor cursor = getContentResolver().query(builder.build());\n\n Bundle extras = cursor.getExtras();\n if (extras.getBoolean(ContactsContract.DEFERRED_SNIPPETING)) {\n     // Do our own snippet formatting.\n     // For a contact with the email address (president@organization.com), the snippet\n     // column will contain the string \"president@organization.com\".\n } else {\n     // The snippet has already been pre-formatted, we can display it as is.\n     // For a contact with the email address (president@organization.com), the snippet\n     // column will contain the string \"[presi]dent@organization.com\".\n }\n </pre>\n\n\n<p> </p></p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-property'>Properties</h3><div class='subsection'><div id='property-DEFERRED_SNIPPETING_KEY' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.provider.ContactsContract.SearchSnippets'>android.provider.ContactsContract.SearchSnippets</span><br/><a href='source/SearchSnippets.html#android-provider-ContactsContract-SearchSnippets-property-DEFERRED_SNIPPETING_KEY' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.provider.ContactsContract.SearchSnippets-property-DEFERRED_SNIPPETING_KEY' class='name expandable'>DEFERRED_SNIPPETING_KEY</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>The key to ask the provider to defer the formatting of the snippet to the client if\npossible, for performance reasons. ...</div><div class='long'><p>The key to ask the provider to defer the formatting of the snippet to the client if\npossible, for performance reasons.\nA value of 1 indicates true, 0 indicates false. False is the default.\nWhen a cursor is returned to the client, it should check for an extra with the name\n<a href=\"#!/api/android.provider.ContactsContract-property-DEFERRED_SNIPPETING\" rel=\"android.provider.ContactsContract-property-DEFERRED_SNIPPETING\" class=\"docClass\">android.provider.ContactsContract.DEFERRED_SNIPPETING</a> in the cursor. If it exists, the client\nshould do its own formatting of the snippet. If it doesn't exist, the snippet column\nin the cursor should already contain a formatted snippet.</p>\n<p>Defaults to: <code>&quot;deferred_snippeting&quot;</code></p></div></div></div><div id='property-SNIPPET' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.provider.ContactsContract.SearchSnippets'>android.provider.ContactsContract.SearchSnippets</span><br/><a href='source/SearchSnippets.html#android-provider-ContactsContract-SearchSnippets-property-SNIPPET' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.provider.ContactsContract.SearchSnippets-property-SNIPPET' class='name expandable'>SNIPPET</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>The search snippet constructed by SQLite snippeting functionality. ...</div><div class='long'><p>The search snippet constructed by SQLite snippeting functionality.</p>\n\n<p><p>\nThe snippet may contain (parts of) several data elements belonging to the contact,\nwith the matching parts optionally surrounded by special characters that indicate the\nstart and end of matching text.</p>\n\n<p>For example, if a contact has an address \"123 Main Street\", using a filter \"mai\" would\nreturn the formatted snippet \"123 [Mai]n street\".</p>\n\n<p>@see <a href=\"http://www.sqlite.org/fts3.html#snippet\">\n        http://www.sqlite.org/fts3.html#snippet</a></p>\n<p>Defaults to: <code>&quot;snippet&quot;</code></p></div></div></div></div></div></div></div>","meta":{}});