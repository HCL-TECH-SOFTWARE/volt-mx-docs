Ext.data.JsonP.android_hardware_SensorListener({"tagname":"class","name":"android.hardware.SensorListener","autodetected":{},"files":[{"filename":"SensorListener.js","href":"SensorListener.html#android-hardware-SensorListener"}],"deprecated":{"text":"<p>Use\n <a href=\"#!/api/android.hardware.SensorEventListener\" rel=\"android.hardware.SensorEventListener\" class=\"docClass\">SensorEventListener</a> instead.</p>\n"},"members":[{"name":"onAccuracyChanged","tagname":"method","owner":"android.hardware.SensorListener","id":"method-onAccuracyChanged","meta":{}},{"name":"onSensorChanged","tagname":"method","owner":"android.hardware.SensorListener","id":"method-onSensorChanged","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-android.hardware.SensorListener","short_doc":"Used for receiving notifications from the SensorManager when\n sensor values have changed. ...","classIcon":"icon-class","superclasses":[],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Files</h4><div class='dependency'><a href='source/SensorListener.html#android-hardware-SensorListener' target='_blank'>SensorListener.js</a></div></pre><div class='doc-contents'><p>Used for receiving notifications from the SensorManager when\n sensor values have changed.</p>\n        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This class has been <strong>deprecated</strong> </p>\n        <p>Use\n <a href=\"#!/api/android.hardware.SensorEventListener\" rel=\"android.hardware.SensorEventListener\" class=\"docClass\">SensorEventListener</a> instead.</p>\n\n        </div>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-onAccuracyChanged' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.hardware.SensorListener'>android.hardware.SensorListener</span><br/><a href='source/SensorListener.html#android-hardware-SensorListener-method-onAccuracyChanged' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.hardware.SensorListener-method-onAccuracyChanged' class='name expandable'>onAccuracyChanged</a>( <span class='pre'>sensor, accuracy</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Called when the accuracy of a sensor has changed. ...</div><div class='long'><p>Called when the accuracy of a sensor has changed.\n See <a href=\"#!/api/android.hardware.SensorManager\" rel=\"android.hardware.SensorManager\" class=\"docClass\">SensorManager</a>\n for details.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>sensor</span> : Number<div class='sub-desc'><p>The ID of the sensor being monitored</p>\n</div></li><li><span class='pre'>accuracy</span> : Number<div class='sub-desc'><p>The new accuracy of this sensor.</p>\n</div></li></ul></div></div></div><div id='method-onSensorChanged' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.hardware.SensorListener'>android.hardware.SensorListener</span><br/><a href='source/SensorListener.html#android-hardware-SensorListener-method-onSensorChanged' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.hardware.SensorListener-method-onSensorChanged' class='name expandable'>onSensorChanged</a>( <span class='pre'>sensor, values</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Called when sensor values have changed. ...</div><div class='long'><p><p>Called when sensor values have changed.\n The length and contents of the values array vary\n depending on which sensor is being monitored.\n See <a href=\"#!/api/android.hardware.SensorManager\" rel=\"android.hardware.SensorManager\" class=\"docClass\">SensorManager</a>\n for details on possible sensor types.</p>\n\n<p> <p><u>Definition of the coordinate system used below.</u><p>\n <p>The X axis refers to the screen's horizontal axis\n (the small edge in portrait mode, the long edge in landscape mode) and\n points to the right.\n <p>The Y axis refers to the screen's vertical axis and points towards\n the top of the screen (the origin is in the lower-left corner).\n <p>The Z axis points toward the sky when the device is lying on its back\n on a table.\n <p> <b>IMPORTANT NOTE:</b> The axis <b><u>are swapped</u></b> when the\n device's screen orientation changes. To access the unswapped values,\n use indices 3, 4 and 5 in values[].</p>\n\n<p> <p><a href=\"#!/api/android.hardware.SensorManager-property-SENSOR_ORIENTATION\" rel=\"android.hardware.SensorManager-property-SENSOR_ORIENTATION\" class=\"docClass\">SENSOR_ORIENTATION</a>,\n <a href=\"#!/api/android.hardware.SensorManager-property-SENSOR_ORIENTATION_RAW\" rel=\"android.hardware.SensorManager-property-SENSOR_ORIENTATION_RAW\" class=\"docClass\">SENSOR_ORIENTATION_RAW</a>:<p>\n  All values are angles in degrees.</p>\n\n<p> <p>values[0]: Azimuth, rotation around the Z axis (0&lt;=azimuth&lt;360).\n 0 = North, 90 = East, 180 = South, 270 = West</p>\n\n<p> <p>values[1]: Pitch, rotation around X axis (-180&lt;=pitch&lt;=180), with positive\n values when the z-axis moves toward the y-axis.</p>\n\n<p> <p>values[2]: Roll, rotation around Y axis (-90&lt;=roll&lt;=90), with positive values\n when the z-axis moves toward the x-axis.</p>\n\n<p> <p>Note that this definition of yaw, pitch and roll is different from the\n traditional definition used in aviation where the X axis is along the long\n side of the plane (tail to nose).</p>\n\n<p> <p><a href=\"#!/api/android.hardware.SensorManager-property-SENSOR_ACCELEROMETER\" rel=\"android.hardware.SensorManager-property-SENSOR_ACCELEROMETER\" class=\"docClass\">SENSOR_ACCELEROMETER</a>:<p>\n  All values are in SI units (m/s<sup>2</sup>) and measure contact forces.</p>\n\n<p>  <p>values[0]: force applied by the device on the x-axis\n  <p>values[1]: force applied by the device on the y-axis\n  <p>values[2]: force applied by the device on the z-axis</p>\n\n<p>  <p><u>Examples</u>:\n    <li>When the device is pushed on its left side toward the right, the\n    x acceleration value is negative (the device applies a reaction force\n    to the push toward the left)</li></p>\n\n<pre><code>&lt;li&gt;When the device lies flat on a table, the acceleration value is\n<a href=\"#!/api/android.hardware.SensorManager-property-STANDARD_GRAVITY\" rel=\"android.hardware.SensorManager-property-STANDARD_GRAVITY\" class=\"docClass\">-STANDARD_GRAVITY</a>,\nwhich correspond to the force the device applies on the table in reaction\nto gravity.&lt;/li&gt;\n</code></pre>\n\n<p> <p><a href=\"#!/api/android.hardware.SensorManager-property-SENSOR_MAGNETIC_FIELD\" rel=\"android.hardware.SensorManager-property-SENSOR_MAGNETIC_FIELD\" class=\"docClass\">SENSOR_MAGNETIC_FIELD</a>:<p>\n  All values are in micro-Tesla (uT) and measure the ambient magnetic\n  field in the X, Y and -Z axis.\n  <p><b><u>Note:</u></b> the magnetic field's Z axis is inverted.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>sensor</span> : Number<div class='sub-desc'><p>The ID of the sensor being monitored</p>\n</div></li><li><span class='pre'>values</span> : Object {float[]}<div class='sub-desc'><p>The new values for the sensor.</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{"deprecated":{"text":"<p>Use\n <a href=\"#!/api/android.hardware.SensorEventListener\" rel=\"android.hardware.SensorEventListener\" class=\"docClass\">SensorEventListener</a> instead.</p>\n"}}});