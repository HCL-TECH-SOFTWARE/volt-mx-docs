Ext.data.JsonP.android_hardware_Camera_PreviewCallback({"tagname":"class","name":"android.hardware.Camera.PreviewCallback","autodetected":{},"files":[{"filename":"PreviewCallback.js","href":"PreviewCallback.html#android-hardware-Camera-PreviewCallback"}],"deprecated":{"text":"<p>We recommend using the new android.hardware.camera2 API for new\n             applications.</p>\n"},"members":[{"name":"onPreviewFrame","tagname":"method","owner":"android.hardware.Camera.PreviewCallback","id":"method-onPreviewFrame","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-android.hardware.Camera.PreviewCallback","short_doc":"Callback interface used to deliver copies of preview frames as\n they are displayed. ...","classIcon":"icon-class","superclasses":[],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Files</h4><div class='dependency'><a href='source/PreviewCallback.html#android-hardware-Camera-PreviewCallback' target='_blank'>PreviewCallback.js</a></div></pre><div class='doc-contents'><p>Callback interface used to deliver copies of preview frames as\n they are displayed.</p>\n\n<p> @see #setPreviewCallback(Camera.PreviewCallback)\n @see #setOneShotPreviewCallback(Camera.PreviewCallback)\n @see #setPreviewCallbackWithBuffer(Camera.PreviewCallback)\n @see #startPreview()</p>\n        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This class has been <strong>deprecated</strong> </p>\n        <p>We recommend using the new android.hardware.camera2 API for new\n             applications.</p>\n\n        </div>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-onPreviewFrame' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.hardware.Camera.PreviewCallback'>android.hardware.Camera.PreviewCallback</span><br/><a href='source/PreviewCallback.html#android-hardware-Camera-PreviewCallback-method-onPreviewFrame' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.hardware.Camera.PreviewCallback-method-onPreviewFrame' class='name expandable'>onPreviewFrame</a>( <span class='pre'>data, camera</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Called as preview frames are displayed. ...</div><div class='long'><p>Called as preview frames are displayed.  This callback is invoked\n on the event thread open(int) was called from.</p>\n\n<p> <p>If using the android.graphics.ImageFormat.YV12 format,\n refer to the equations in <a href=\"#!/api/android.hardware.Camera.Parameters-method-setPreviewFormat\" rel=\"android.hardware.Camera.Parameters-method-setPreviewFormat\" class=\"docClass\">android.hardware.Camera.Parameters.setPreviewFormat</a>\n for the arrangement of the pixel data in the preview callback\n buffers.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>data</span> : Object {byte[]}<div class='sub-desc'><p>the contents of the preview frame in the format defined\n  by android.graphics.ImageFormat, which can be queried\n  with android.hardware.Camera.Parameters.getPreviewFormat().\n  If android.hardware.Camera.Parameters.setPreviewFormat(int)\n             is never called, the default will be the YCbCr_420_SP\n             (NV21) format.</p>\n</div></li><li><span class='pre'>camera</span> : Object {Camera}<div class='sub-desc'><p>the Camera service object.</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{"deprecated":{"text":"<p>We recommend using the new android.hardware.camera2 API for new\n             applications.</p>\n"}}});