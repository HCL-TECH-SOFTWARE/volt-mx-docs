Ext.data.JsonP.android_view_accessibility_AccessibilityNodeProvider({"tagname":"class","name":"android.view.accessibility.AccessibilityNodeProvider","autodetected":{},"files":[{"filename":"AccessibilityNodeProvider.js","href":"AccessibilityNodeProvider.html#android-view-accessibility-AccessibilityNodeProvider"}],"extends":"java.lang.Object","members":[{"name":"HOST_VIEW_ID","tagname":"property","owner":"android.view.accessibility.AccessibilityNodeProvider","id":"property-HOST_VIEW_ID","meta":{}},{"name":"addExtraDataToAccessibilityNodeInfo","tagname":"method","owner":"android.view.accessibility.AccessibilityNodeProvider","id":"method-addExtraDataToAccessibilityNodeInfo","meta":{}},{"name":"createAccessibilityNodeInfo","tagname":"method","owner":"android.view.accessibility.AccessibilityNodeProvider","id":"method-createAccessibilityNodeInfo","meta":{}},{"name":"findAccessibilityNodeInfosByText","tagname":"method","owner":"android.view.accessibility.AccessibilityNodeProvider","id":"method-findAccessibilityNodeInfosByText","meta":{}},{"name":"findFocus","tagname":"method","owner":"android.view.accessibility.AccessibilityNodeProvider","id":"method-findFocus","meta":{}},{"name":"performAction","tagname":"method","owner":"android.view.accessibility.AccessibilityNodeProvider","id":"method-performAction","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-android.view.accessibility.AccessibilityNodeProvider","short_doc":"This class is the contract a client should implement to enable support of a\n virtual view hierarchy rooted at a given...","classIcon":"icon-class","superclasses":["java.lang.Object"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>java.lang.Object<div class='subclass '><strong>android.view.accessibility.AccessibilityNodeProvider</strong></div></div><h4>Files</h4><div class='dependency'><a href='source/AccessibilityNodeProvider.html#android-view-accessibility-AccessibilityNodeProvider' target='_blank'>AccessibilityNodeProvider.js</a></div></pre><div class='doc-contents'><p>This class is the contract a client should implement to enable support of a\n virtual view hierarchy rooted at a given view for accessibility purposes. A virtual\n view hierarchy is a tree of imaginary Views that is reported as a part of the view\n hierarchy when an AccessibilityService explores the window content.\n Since the virtual View tree does not exist this class is responsible for\n managing the <a href=\"#!/api/android.view.accessibility.AccessibilityNodeInfo\" rel=\"android.view.accessibility.AccessibilityNodeInfo\" class=\"docClass\">android.view.accessibility.AccessibilityNodeInfo</a>s describing that tree to accessibility\n services.\n </p>\n <p>\n The main use case of these APIs is to enable a custom view that draws complex content,\n for example a monthly calendar grid, to be presented as a tree of logical nodes,\n for example month days each containing events, thus conveying its logical structure.\n <p>\n <p>\n A typical use case is to override View.getAccessibilityNodeProvider() of the\n View that is a root of a virtual View hierarchy to return an instance of this class.\n In such a case this instance is responsible for managing <a href=\"#!/api/android.view.accessibility.AccessibilityNodeInfo\" rel=\"android.view.accessibility.AccessibilityNodeInfo\" class=\"docClass\">android.view.accessibility.AccessibilityNodeInfo</a>s\n describing the virtual sub-tree rooted at the View including the one representing the\n View itself. Similarly the returned instance is responsible for performing accessibility\n actions on any virtual view or the root view itself. For example:\n </p></p>\n\n<pre>     getAccessibilityNodeProvider(\n         if (mAccessibilityNodeProvider == null) {\n             mAccessibilityNodeProvider = new AccessibilityNodeProvider() {\n                 public boolean performAction(int action, int virtualDescendantId) {\n                     // Implementation.\n                     return false;\n                 }\n\n                 public List<AccessibilityNodeInfo> findAccessibilityNodeInfosByText(String text,\n                         int virtualDescendantId) {\n                     // Implementation.\n                     return null;\n                 }\n\n                 public AccessibilityNodeInfo createAccessibilityNodeInfo(int virtualDescendantId) {\n                     // Implementation.\n                     return null;\n                 }\n             });\n     return mAccessibilityNodeProvider;\n </AccessibilityNodeInfo></pre>\n\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-property'>Properties</h3><div class='subsection'><div id='property-HOST_VIEW_ID' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.view.accessibility.AccessibilityNodeProvider'>android.view.accessibility.AccessibilityNodeProvider</span><br/><a href='source/AccessibilityNodeProvider.html#android-view-accessibility-AccessibilityNodeProvider-property-HOST_VIEW_ID' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.view.accessibility.AccessibilityNodeProvider-property-HOST_VIEW_ID' class='name expandable'>HOST_VIEW_ID</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>The virtual id for the hosting View. ...</div><div class='long'><p>The virtual id for the hosting View.</p>\n<p>Defaults to: <code>&quot;-1&quot;</code></p></div></div></div></div></div><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-addExtraDataToAccessibilityNodeInfo' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.view.accessibility.AccessibilityNodeProvider'>android.view.accessibility.AccessibilityNodeProvider</span><br/><a href='source/AccessibilityNodeProvider.html#android-view-accessibility-AccessibilityNodeProvider-method-addExtraDataToAccessibilityNodeInfo' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.view.accessibility.AccessibilityNodeProvider-method-addExtraDataToAccessibilityNodeInfo' class='name expandable'>addExtraDataToAccessibilityNodeInfo</a>( <span class='pre'>virtualViewId, info, extraDataKey, arguments</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Adds extra data to an android.view.accessibility.AccessibilityNodeInfo based on an explicit request for the\n addition...</div><div class='long'><p>Adds extra data to an <a href=\"#!/api/android.view.accessibility.AccessibilityNodeInfo\" rel=\"android.view.accessibility.AccessibilityNodeInfo\" class=\"docClass\">android.view.accessibility.AccessibilityNodeInfo</a> based on an explicit request for the\n additional data.\n <p>\n This method only needs to be implemented if a virtual view offers to provide additional\n data.\n </p></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>virtualViewId</span> : Number<div class='sub-desc'><p>The virtual view id used to create the node</p>\n</div></li><li><span class='pre'>info</span> : Object {AccessibilityNodeInfo}<div class='sub-desc'><p>The info to which to add the extra data</p>\n</div></li><li><span class='pre'>extraDataKey</span> : String<div class='sub-desc'><p>A key specifying the type of extra data to add to the info. The\n                     extra data should be added to the Bundle returned by\n                     the info's AccessibilityNodeInfo.getExtras method.</p>\n</div></li><li><span class='pre'>arguments</span> : Object {Bundle}<div class='sub-desc'><p>A Bundle holding any arguments relevant for this request.\n@see AccessibilityNodeInfo#setAvailableExtraData(List)</p>\n</div></li></ul></div></div></div><div id='method-createAccessibilityNodeInfo' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.view.accessibility.AccessibilityNodeProvider'>android.view.accessibility.AccessibilityNodeProvider</span><br/><a href='source/AccessibilityNodeProvider.html#android-view-accessibility-AccessibilityNodeProvider-method-createAccessibilityNodeInfo' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.view.accessibility.AccessibilityNodeProvider-method-createAccessibilityNodeInfo' class='name expandable'>createAccessibilityNodeInfo</a>( <span class='pre'>virtualViewId</span> ) : Object {android.view.accessibility.AccessibilityNodeInfo}<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns an android.view.accessibility.AccessibilityNodeInfo representing a virtual view,\n such as a descendant of the...</div><div class='long'><p>Returns an <a href=\"#!/api/android.view.accessibility.AccessibilityNodeInfo\" rel=\"android.view.accessibility.AccessibilityNodeInfo\" class=\"docClass\">android.view.accessibility.AccessibilityNodeInfo</a> representing a virtual view,\n such as a descendant of the host View, with the given <code>virtualViewId</code>\n or the host View itself if <code>virtualViewId</code> equals to <a href=\"#!/api/android.view.accessibility.AccessibilityNodeProvider-property-HOST_VIEW_ID\" rel=\"android.view.accessibility.AccessibilityNodeProvider-property-HOST_VIEW_ID\" class=\"docClass\">HOST_VIEW_ID</a>.\n <p>\n A virtual descendant is an imaginary View that is reported as a part of the view\n hierarchy for accessibility purposes. This enables custom views that draw complex\n content to report them selves as a tree of virtual views, thus conveying their\n logical structure.\n </p>\n <p>\n The implementer is responsible for obtaining an accessibility node info from the\n pool of reusable instances and setting the desired properties of the node info\n before returning it.\n </p></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>virtualViewId</span> : Number<div class='sub-desc'><p>A client defined virtual view id.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.view.accessibility.AccessibilityNodeInfo}</span><div class='sub-desc'><p>A populated AccessibilityNodeInfo for a virtual descendant or the\n     host View.\n@see View#createAccessibilityNodeInfo()\n@see AccessibilityNodeInfo</p>\n</div></li></ul></div></div></div><div id='method-findAccessibilityNodeInfosByText' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.view.accessibility.AccessibilityNodeProvider'>android.view.accessibility.AccessibilityNodeProvider</span><br/><a href='source/AccessibilityNodeProvider.html#android-view-accessibility-AccessibilityNodeProvider-method-findAccessibilityNodeInfosByText' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.view.accessibility.AccessibilityNodeProvider-method-findAccessibilityNodeInfosByText' class='name expandable'>findAccessibilityNodeInfosByText</a>( <span class='pre'>virtualViewId, text</span> ) : Object {java.util.List}<span class=\"signature\"></span></div><div class='description'><div class='short'>Finds android.view.accessibility.AccessibilityNodeInfos by text. ...</div><div class='long'><p>Finds <a href=\"#!/api/android.view.accessibility.AccessibilityNodeInfo\" rel=\"android.view.accessibility.AccessibilityNodeInfo\" class=\"docClass\">android.view.accessibility.AccessibilityNodeInfo</a>s by text. The match is case insensitive\n containment. The search is relative to the virtual view, i.e. a descendant of the\n host View, with the given <code>virtualViewId</code> or the host View itself\n <code>virtualViewId</code> equals to <a href=\"#!/api/android.view.accessibility.AccessibilityNodeProvider-property-HOST_VIEW_ID\" rel=\"android.view.accessibility.AccessibilityNodeProvider-property-HOST_VIEW_ID\" class=\"docClass\">HOST_VIEW_ID</a>.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>virtualViewId</span> : String<div class='sub-desc'><p>A client defined virtual view id which defined\n     the root of the tree in which to perform the search.</p>\n</div></li><li><span class='pre'>text</span> : Number<div class='sub-desc'><p>The searched text.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {java.util.List}</span><div class='sub-desc'><p>A list of node info.\n@see <a href=\"#!/api/android.view.accessibility.AccessibilityNodeProvider-method-createAccessibilityNodeInfo\" rel=\"android.view.accessibility.AccessibilityNodeProvider-method-createAccessibilityNodeInfo\" class=\"docClass\">createAccessibilityNodeInfo</a>(int)\n@see AccessibilityNodeInfo</p>\n</div></li></ul></div></div></div><div id='method-findFocus' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.view.accessibility.AccessibilityNodeProvider'>android.view.accessibility.AccessibilityNodeProvider</span><br/><a href='source/AccessibilityNodeProvider.html#android-view-accessibility-AccessibilityNodeProvider-method-findFocus' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.view.accessibility.AccessibilityNodeProvider-method-findFocus' class='name expandable'>findFocus</a>( <span class='pre'>focus</span> ) : Object {android.view.accessibility.AccessibilityNodeInfo}<span class=\"signature\"></span></div><div class='description'><div class='short'>Find the virtual view, such as a descendant of the host View, that has the\n specified focus type. ...</div><div class='long'><p>Find the virtual view, such as a descendant of the host View, that has the\n specified focus type.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>focus</span> : Number<div class='sub-desc'><p>The focus to find. One of\n            AccessibilityNodeInfo.FOCUS_INPUT or\n            AccessibilityNodeInfo.FOCUS_ACCESSIBILITY.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object {android.view.accessibility.AccessibilityNodeInfo}</span><div class='sub-desc'><p>The node info of the focused view or null.\n@see AccessibilityNodeInfo#FOCUS_INPUT\n@see AccessibilityNodeInfo#FOCUS_ACCESSIBILITY</p>\n</div></li></ul></div></div></div><div id='method-performAction' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='android.view.accessibility.AccessibilityNodeProvider'>android.view.accessibility.AccessibilityNodeProvider</span><br/><a href='source/AccessibilityNodeProvider.html#android-view-accessibility-AccessibilityNodeProvider-method-performAction' target='_blank' class='view-source'>view source</a></div><a href='#!/api/android.view.accessibility.AccessibilityNodeProvider-method-performAction' class='name expandable'>performAction</a>( <span class='pre'>virtualViewId, action, arguments</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Performs an accessibility action on a virtual view, such as a descendant of the\n host View, with the given virtualVie...</div><div class='long'><p>Performs an accessibility action on a virtual view, such as a descendant of the\n host View, with the given <code>virtualViewId</code> or the host View itself\n if <code>virtualViewId</code> equals to <a href=\"#!/api/android.view.accessibility.AccessibilityNodeProvider-property-HOST_VIEW_ID\" rel=\"android.view.accessibility.AccessibilityNodeProvider-property-HOST_VIEW_ID\" class=\"docClass\">HOST_VIEW_ID</a>.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>virtualViewId</span> : Number<div class='sub-desc'><p>A client defined virtual view id.</p>\n</div></li><li><span class='pre'>action</span> : Number<div class='sub-desc'><p>The action to perform.</p>\n</div></li><li><span class='pre'>arguments</span> : Object {Bundle}<div class='sub-desc'><p>Optional action arguments.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>True if the action was performed.\n@see View#performAccessibilityAction(int, Bundle)\n@see <a href=\"#!/api/android.view.accessibility.AccessibilityNodeProvider-method-createAccessibilityNodeInfo\" rel=\"android.view.accessibility.AccessibilityNodeProvider-method-createAccessibilityNodeInfo\" class=\"docClass\">createAccessibilityNodeInfo</a>(int)\n@see AccessibilityNodeInfo</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});