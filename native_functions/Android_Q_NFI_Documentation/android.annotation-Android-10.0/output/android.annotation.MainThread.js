Ext.data.JsonP.android_annotation_MainThread({"tagname":"class","name":"android.annotation.MainThread","autodetected":{},"files":[{"filename":"MainThread.js","href":"MainThread.html#android-annotation-MainThread"}],"hide":true,"members":[],"alternateClassNames":[],"aliases":{},"id":"class-android.annotation.MainThread","short_doc":"implements java.lang.annotation.Annotation\n\n Denotes that the annotated method should only be called on the main thread. ...","classIcon":"icon-class","superclasses":[],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Files</h4><div class='dependency'><a href='source/MainThread.html#android-annotation-MainThread' target='_blank'>MainThread.js</a></div></pre><div class='doc-contents'><p>implements java.lang.annotation.Annotation</p>\n\n<p> Denotes that the annotated method should only be called on the main thread.\n If the annotated element is a class, then all methods in the class should be\n called on the main thread.\n <p>\n Example:</p>\n\n<pre> <code>\n  &#64;MainThread\n  public void deliverResult(D data) { ... }\n </code>\n </pre>\n\n\n<p> @memberDoc This method must be called from the\n            {@linkplain Looper#getMainLooper() main thread} of your app.</p>\n</div><div class='members'></div></div>","meta":{}});