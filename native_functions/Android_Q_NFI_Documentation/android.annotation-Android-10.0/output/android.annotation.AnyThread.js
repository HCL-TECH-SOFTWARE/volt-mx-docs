Ext.data.JsonP.android_annotation_AnyThread({"tagname":"class","name":"android.annotation.AnyThread","autodetected":{},"files":[{"filename":"AnyThread.js","href":"AnyThread.html#android-annotation-AnyThread"}],"hide":true,"members":[],"alternateClassNames":[],"aliases":{},"id":"class-android.annotation.AnyThread","short_doc":"implements java.lang.annotation.Annotation\n\n Denotes that the annotated method can be called from any thread (e.g. ...","classIcon":"icon-class","superclasses":[],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Files</h4><div class='dependency'><a href='source/AnyThread.html#android-annotation-AnyThread' target='_blank'>AnyThread.js</a></div></pre><div class='doc-contents'><p>implements java.lang.annotation.Annotation</p>\n\n<p> Denotes that the annotated method can be called from any thread (e.g. it is\n \"thread safe\".) If the annotated element is a class, then all methods in the\n class can be called from any thread.\n <p>\n The main purpose of this method is to indicate that you believe a method can\n be called from any thread; static tools can then check that nothing you call\n from within this method or class have more strict threading requirements.\n <p>\n Example:</p>\n\n<pre> <code>\n  &#64;AnyThread\n  public void deliverResult(D data) { ... }\n </code>\n </pre>\n\n\n<p> @memberDoc This method is safe to call from any thread.</p>\n</div><div class='members'></div></div>","meta":{}});